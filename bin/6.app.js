(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./node_modules/haxe-loader/index.js?build/view_DashBoard!./":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* eslint-disable */ \nvar $hx_exports = module.exports, $global = global;\nvar $s = $global.$hx_scope, $_;\nvar haxe_Log = $s.a, Std = $s.f, React_Component = $s.c, $hxClasses = $s.d, App = $s.g, $bind = $s.h, redux__$Redux_Action_$Impl_$ = $s.i, action_AppAction = $s.j, $extend = $s.e, js_Boot = $s.k, react__$ReactNode_ReactNode_$Impl_$ = $s.l, React = $s.m, bulma_$components_Tabs = $s.n, react_router_Route = $s.o, haxe_ds_StringMap = $s.p, Reflect = $s.b, haxe_ds_Either = $s.aa, model_AjaxLoader = $s.ab, js__$Boot_HaxeError = $s.ac, haxe_io_Bytes = $s.ad, StringBuf = $s.ae, Type = $s.af, Class = $s.ag, Enum = $s.ah, haxe_ds_IntMap = $s.ai, haxe_IMap = $s.aj, HxOverrides = $s.ak, haxe_io_BytesBuffer = $s.al, Lambda = $s.am, $estr = $s.an, haxe__$Int64__$_$_$Int64 = $s.ao, redux_react_ReactRedux = $s.ap, react_ReactUtil = $s.ba, StringTools = $s.bb, ReactDOM = $s.bc, haxe_http_HttpJs = $s.bd, ArrayBuffer = $s.be, me_cunity_debug_Out = $s.bf, view_StatusBar = $s.bg, model_CState = $s.bh, react_router_NavLink = $s.bi;\n$hx_exports["me"] = $hx_exports["me"] || {};\n$hx_exports["me"]["cunity"] = $hx_exports["me"]["cunity"] || {};\n$hx_exports["me"]["cunity"]["debug"] = $hx_exports["me"]["cunity"]["debug"] || {};\n$hx_exports["me"]["cunity"]["debug"]["Out"] = $hx_exports["me"]["cunity"]["debug"]["Out"] || {};\nvar DateTools = function() { };\n$hxClasses["DateTools"] = DateTools;\nDateTools.__name__ = "DateTools";\nDateTools.__format_get = function(d,e) {\n\tswitch(e) {\n\tcase "%":\n\t\treturn "%";\n\tcase "A":\n\t\treturn DateTools.DAY_NAMES[d.getDay()];\n\tcase "B":\n\t\treturn DateTools.MONTH_NAMES[d.getMonth()];\n\tcase "C":\n\t\treturn StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);\n\tcase "D":\n\t\treturn DateTools.__format(d,"%m/%d/%y");\n\tcase "F":\n\t\treturn DateTools.__format(d,"%Y-%m-%d");\n\tcase "I":case "l":\n\t\tvar hour = d.getHours() % 12;\n\t\treturn StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);\n\tcase "M":\n\t\treturn StringTools.lpad(Std.string(d.getMinutes()),"0",2);\n\tcase "R":\n\t\treturn DateTools.__format(d,"%H:%M");\n\tcase "S":\n\t\treturn StringTools.lpad(Std.string(d.getSeconds()),"0",2);\n\tcase "T":\n\t\treturn DateTools.__format(d,"%H:%M:%S");\n\tcase "Y":\n\t\treturn Std.string(d.getFullYear());\n\tcase "a":\n\t\treturn DateTools.DAY_SHORT_NAMES[d.getDay()];\n\tcase "b":case "h":\n\t\treturn DateTools.MONTH_SHORT_NAMES[d.getMonth()];\n\tcase "d":\n\t\treturn StringTools.lpad(Std.string(d.getDate()),"0",2);\n\tcase "e":\n\t\treturn Std.string(d.getDate());\n\tcase "H":case "k":\n\t\treturn StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);\n\tcase "m":\n\t\treturn StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);\n\tcase "n":\n\t\treturn "\\n";\n\tcase "p":\n\t\tif(d.getHours() > 11) {\n\t\t\treturn "PM";\n\t\t} else {\n\t\t\treturn "AM";\n\t\t}\n\t\tbreak;\n\tcase "r":\n\t\treturn DateTools.__format(d,"%I:%M:%S %p");\n\tcase "s":\n\t\treturn Std.string(d.getTime() / 1000 | 0);\n\tcase "t":\n\t\treturn "\\t";\n\tcase "u":\n\t\tvar t = d.getDay();\n\t\tif(t == 0) {\n\t\t\treturn "7";\n\t\t} else if(t == null) {\n\t\t\treturn "null";\n\t\t} else {\n\t\t\treturn "" + t;\n\t\t}\n\t\tbreak;\n\tcase "w":\n\t\treturn Std.string(d.getDay());\n\tcase "y":\n\t\treturn StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);\n\tdefault:\n\t\tthrow new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");\n\t}\n};\nDateTools.__format = function(d,f) {\n\tvar r_b = "";\n\tvar p = 0;\n\twhile(true) {\n\t\tvar np = f.indexOf("%",p);\n\t\tif(np < 0) {\n\t\t\tbreak;\n\t\t}\n\t\tvar len = np - p;\n\t\tr_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);\n\t\tr_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));\n\t\tp = np + 2;\n\t}\n\tvar len1 = f.length - p;\n\tr_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);\n\treturn r_b;\n};\nDateTools.format = function(d,f) {\n\treturn DateTools.__format(d,f);\n};\nvar bulma_$components_Button = __webpack_require__("./node_modules/reactbulma/lib/components/index.js").Button;\nvar haxe_Serializer = function() {\n\tthis.buf = new StringBuf();\n\tthis.cache = [];\n\tthis.useCache = haxe_Serializer.USE_CACHE;\n\tthis.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;\n\tthis.shash = new haxe_ds_StringMap();\n\tthis.scount = 0;\n};\n$hxClasses["haxe.Serializer"] = haxe_Serializer;\nhaxe_Serializer.__name__ = "haxe.Serializer";\nhaxe_Serializer.run = function(v) {\n\tvar s = new haxe_Serializer();\n\ts.serialize(v);\n\treturn s.toString();\n};\nhaxe_Serializer.prototype = {\n\tbuf: null\n\t,cache: null\n\t,shash: null\n\t,scount: null\n\t,useCache: null\n\t,useEnumIndex: null\n\t,toString: function() {\n\t\treturn this.buf.b;\n\t}\n\t,serializeString: function(s) {\n\t\tvar _this = this.shash;\n\t\tvar x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];\n\t\tif(x != null) {\n\t\t\tthis.buf.b += "R";\n\t\t\tthis.buf.b += x == null ? "null" : "" + x;\n\t\t\treturn;\n\t\t}\n\t\tvar _this1 = this.shash;\n\t\tvar value = this.scount++;\n\t\tif(__map_reserved[s] != null) {\n\t\t\t_this1.setReserved(s,value);\n\t\t} else {\n\t\t\t_this1.h[s] = value;\n\t\t}\n\t\tthis.buf.b += "y";\n\t\ts = encodeURIComponent(s);\n\t\tthis.buf.b += Std.string(s.length);\n\t\tthis.buf.b += ":";\n\t\tthis.buf.b += s == null ? "null" : "" + s;\n\t}\n\t,serializeRef: function(v) {\n\t\tvar vt = typeof(v);\n\t\tvar _g = 0;\n\t\tvar _g1 = this.cache.length;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\tvar ci = this.cache[i];\n\t\t\tif(typeof(ci) == vt && ci == v) {\n\t\t\t\tthis.buf.b += "r";\n\t\t\t\tthis.buf.b += i == null ? "null" : "" + i;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthis.cache.push(v);\n\t\treturn false;\n\t}\n\t,serializeFields: function(v) {\n\t\tvar _g = 0;\n\t\tvar _g1 = Reflect.fields(v);\n\t\twhile(_g < _g1.length) {\n\t\t\tvar f = _g1[_g];\n\t\t\t++_g;\n\t\t\tthis.serializeString(f);\n\t\t\tthis.serialize(Reflect.field(v,f));\n\t\t}\n\t\tthis.buf.b += "g";\n\t}\n\t,serialize: function(v) {\n\t\tvar _g = Type["typeof"](v);\n\t\tswitch(_g._hx_index) {\n\t\tcase 0:\n\t\t\tthis.buf.b += "n";\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tvar v1 = v;\n\t\t\tif(v1 == 0) {\n\t\t\t\tthis.buf.b += "z";\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.buf.b += "i";\n\t\t\tthis.buf.b += v1 == null ? "null" : "" + v1;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvar v2 = v;\n\t\t\tif(isNaN(v2)) {\n\t\t\t\tthis.buf.b += "k";\n\t\t\t} else if(!isFinite(v2)) {\n\t\t\t\tthis.buf.b += v2 < 0 ? "m" : "p";\n\t\t\t} else {\n\t\t\t\tthis.buf.b += "d";\n\t\t\t\tthis.buf.b += v2 == null ? "null" : "" + v2;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tthis.buf.b += v ? "t" : "f";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tif(js_Boot.__instanceof(v,Class)) {\n\t\t\t\tvar className = v.__name__;\n\t\t\t\tthis.buf.b += "A";\n\t\t\t\tthis.serializeString(className);\n\t\t\t} else if(js_Boot.__instanceof(v,Enum)) {\n\t\t\t\tthis.buf.b += "B";\n\t\t\t\tthis.serializeString(v.__ename__);\n\t\t\t} else {\n\t\t\t\tif(this.useCache && this.serializeRef(v)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "o";\n\t\t\t\tthis.serializeFields(v);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tthrow new js__$Boot_HaxeError("Cannot serialize function");\n\t\tcase 6:\n\t\t\tvar c = _g.c;\n\t\t\tif(c == String) {\n\t\t\t\tthis.serializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(this.useCache && this.serializeRef(v)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch(c) {\n\t\t\tcase Array:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tthis.buf.b += "a";\n\t\t\t\tvar l = v["length"];\n\t\t\t\tvar _g1 = 0;\n\t\t\t\tvar _g11 = l;\n\t\t\t\twhile(_g1 < _g11) {\n\t\t\t\t\tvar i = _g1++;\n\t\t\t\t\tif(v[i] == null) {\n\t\t\t\t\t\t++ucount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(ucount > 0) {\n\t\t\t\t\t\t\tif(ucount == 1) {\n\t\t\t\t\t\t\t\tthis.buf.b += "n";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.buf.b += "u";\n\t\t\t\t\t\t\t\tthis.buf.b += ucount == null ? "null" : "" + ucount;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.serialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ucount > 0) {\n\t\t\t\t\tif(ucount == 1) {\n\t\t\t\t\t\tthis.buf.b += "n";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.buf.b += "u";\n\t\t\t\t\t\tthis.buf.b += ucount == null ? "null" : "" + ucount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "h";\n\t\t\t\tbreak;\n\t\t\tcase Date:\n\t\t\t\tvar d = v;\n\t\t\t\tthis.buf.b += "v";\n\t\t\t\tthis.buf.b += Std.string(d.getTime());\n\t\t\t\tbreak;\n\t\t\tcase haxe_ds_IntMap:\n\t\t\t\tthis.buf.b += "q";\n\t\t\t\tvar v3 = v;\n\t\t\t\tvar k = v3.keys();\n\t\t\t\twhile(k.hasNext()) {\n\t\t\t\t\tvar k1 = k.next();\n\t\t\t\t\tthis.buf.b += ":";\n\t\t\t\t\tthis.buf.b += k1 == null ? "null" : "" + k1;\n\t\t\t\t\tthis.serialize(v3.h[k1]);\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "h";\n\t\t\t\tbreak;\n\t\t\tcase haxe_ds_List:\n\t\t\t\tthis.buf.b += "l";\n\t\t\t\tvar v4 = v;\n\t\t\t\tvar _g_head = v4.h;\n\t\t\t\twhile(_g_head != null) {\n\t\t\t\t\tvar val = _g_head.item;\n\t\t\t\t\t_g_head = _g_head.next;\n\t\t\t\t\tvar i1 = val;\n\t\t\t\t\tthis.serialize(i1);\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "h";\n\t\t\t\tbreak;\n\t\t\tcase haxe_ds_ObjectMap:\n\t\t\t\tthis.buf.b += "M";\n\t\t\t\tvar v5 = v;\n\t\t\t\tvar k2 = v5.keys();\n\t\t\t\twhile(k2.hasNext()) {\n\t\t\t\t\tvar k3 = k2.next();\n\t\t\t\t\tvar id = Reflect.field(k3,"__id__");\n\t\t\t\t\tReflect.deleteField(k3,"__id__");\n\t\t\t\t\tthis.serialize(k3);\n\t\t\t\t\tk3["__id__"] = id;\n\t\t\t\t\tthis.serialize(v5.h[k3.__id__]);\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "h";\n\t\t\t\tbreak;\n\t\t\tcase haxe_ds_StringMap:\n\t\t\t\tthis.buf.b += "b";\n\t\t\t\tvar v6 = v;\n\t\t\t\tvar k4 = v6.keys();\n\t\t\t\twhile(k4.hasNext()) {\n\t\t\t\t\tvar k5 = k4.next();\n\t\t\t\t\tthis.serializeString(k5);\n\t\t\t\t\tthis.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);\n\t\t\t\t}\n\t\t\t\tthis.buf.b += "h";\n\t\t\t\tbreak;\n\t\t\tcase haxe_io_Bytes:\n\t\t\t\tvar v7 = v;\n\t\t\t\tthis.buf.b += "s";\n\t\t\t\tthis.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));\n\t\t\t\tthis.buf.b += ":";\n\t\t\t\tvar i2 = 0;\n\t\t\t\tvar max = v7.length - 2;\n\t\t\t\tvar b64 = haxe_Serializer.BASE64_CODES;\n\t\t\t\tif(b64 == null) {\n\t\t\t\t\tvar this1 = new Array(haxe_Serializer.BASE64.length);\n\t\t\t\t\tb64 = this1;\n\t\t\t\t\tvar _g2 = 0;\n\t\t\t\t\tvar _g12 = haxe_Serializer.BASE64.length;\n\t\t\t\t\twhile(_g2 < _g12) {\n\t\t\t\t\t\tvar i3 = _g2++;\n\t\t\t\t\t\tb64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);\n\t\t\t\t\t}\n\t\t\t\t\thaxe_Serializer.BASE64_CODES = b64;\n\t\t\t\t}\n\t\t\t\twhile(i2 < max) {\n\t\t\t\t\tvar b1 = v7.b[i2++];\n\t\t\t\t\tvar b2 = v7.b[i2++];\n\t\t\t\t\tvar b3 = v7.b[i2++];\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b1 >> 2]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b3 & 63]);\n\t\t\t\t}\n\t\t\t\tif(i2 == max) {\n\t\t\t\t\tvar b11 = v7.b[i2++];\n\t\t\t\t\tvar b21 = v7.b[i2++];\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b11 >> 2]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[(b11 << 4 | b21 >> 4) & 63]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b21 << 2 & 63]);\n\t\t\t\t} else if(i2 == max + 1) {\n\t\t\t\t\tvar b12 = v7.b[i2++];\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b12 >> 2]);\n\t\t\t\t\tthis.buf.b += String.fromCodePoint(b64[b12 << 4 & 63]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif(this.useCache) {\n\t\t\t\t\tthis.cache.pop();\n\t\t\t\t}\n\t\t\t\tif(v.hxSerialize != null) {\n\t\t\t\t\tthis.buf.b += "C";\n\t\t\t\t\tthis.serializeString(c.__name__);\n\t\t\t\t\tif(this.useCache) {\n\t\t\t\t\t\tthis.cache.push(v);\n\t\t\t\t\t}\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tthis.buf.b += "g";\n\t\t\t\t} else {\n\t\t\t\t\tthis.buf.b += "c";\n\t\t\t\t\tthis.serializeString(c.__name__);\n\t\t\t\t\tif(this.useCache) {\n\t\t\t\t\t\tthis.cache.push(v);\n\t\t\t\t\t}\n\t\t\t\t\tthis.serializeFields(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tvar e = _g.e;\n\t\t\tif(this.useCache) {\n\t\t\t\tif(this.serializeRef(v)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cache.pop();\n\t\t\t}\n\t\t\tthis.buf.b += Std.string(this.useEnumIndex ? "j" : "w");\n\t\t\tthis.serializeString(e.__ename__);\n\t\t\tif(this.useEnumIndex) {\n\t\t\t\tthis.buf.b += ":";\n\t\t\t\tthis.buf.b += Std.string(v._hx_index);\n\t\t\t} else {\n\t\t\t\tvar e1 = v;\n\t\t\t\tthis.serializeString($hxEnums[e1.__enum__].__constructs__[e1._hx_index]);\n\t\t\t}\n\t\t\tthis.buf.b += ":";\n\t\t\tvar params = Type.enumParameters(v);\n\t\t\tthis.buf.b += Std.string(params.length);\n\t\t\tvar _g3 = 0;\n\t\t\twhile(_g3 < params.length) {\n\t\t\t\tvar p = params[_g3];\n\t\t\t\t++_g3;\n\t\t\t\tthis.serialize(p);\n\t\t\t}\n\t\t\tif(this.useCache) {\n\t\t\t\tthis.cache.push(v);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));\n\t\t}\n\t}\n\t,__class__: haxe_Serializer\n};\nvar haxe__$Unserializer_DefaultResolver = function() {\n};\n$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;\nhaxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";\nhaxe__$Unserializer_DefaultResolver.prototype = {\n\tresolveClass: function(name) {\n\t\treturn $hxClasses[name];\n\t}\n\t,resolveEnum: function(name) {\n\t\treturn $hxEnums[name];\n\t}\n\t,__class__: haxe__$Unserializer_DefaultResolver\n};\nvar haxe_Unserializer = function(buf) {\n\tthis.buf = buf;\n\tthis.length = buf.length;\n\tthis.pos = 0;\n\tthis.scache = [];\n\tthis.cache = [];\n\tvar r = haxe_Unserializer.DEFAULT_RESOLVER;\n\tif(r == null) {\n\t\tr = new haxe__$Unserializer_DefaultResolver();\n\t\thaxe_Unserializer.DEFAULT_RESOLVER = r;\n\t}\n\tthis.resolver = r;\n};\n$hxClasses["haxe.Unserializer"] = haxe_Unserializer;\nhaxe_Unserializer.__name__ = "haxe.Unserializer";\nhaxe_Unserializer.initCodes = function() {\n\tvar codes = [];\n\tvar _g = 0;\n\tvar _g1 = haxe_Unserializer.BASE64.length;\n\twhile(_g < _g1) {\n\t\tvar i = _g++;\n\t\tcodes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;\n\t}\n\treturn codes;\n};\nhaxe_Unserializer.run = function(v) {\n\treturn new haxe_Unserializer(v).unserialize();\n};\nhaxe_Unserializer.prototype = {\n\tbuf: null\n\t,pos: null\n\t,length: null\n\t,cache: null\n\t,scache: null\n\t,resolver: null\n\t,readDigits: function() {\n\t\tvar k = 0;\n\t\tvar s = false;\n\t\tvar fpos = this.pos;\n\t\twhile(true) {\n\t\t\tvar c = this.buf.charCodeAt(this.pos);\n\t\t\tif(c != c) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(c == 45) {\n\t\t\t\tif(this.pos != fpos) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ts = true;\n\t\t\t\tthis.pos++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(c < 48 || c > 57) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tk = k * 10 + (c - 48);\n\t\t\tthis.pos++;\n\t\t}\n\t\tif(s) {\n\t\t\tk *= -1;\n\t\t}\n\t\treturn k;\n\t}\n\t,readFloat: function() {\n\t\tvar p1 = this.pos;\n\t\twhile(true) {\n\t\t\tvar c = this.buf.charCodeAt(this.pos);\n\t\t\tif(c != c) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(c >= 43 && c < 58 || c == 101 || c == 69) {\n\t\t\t\tthis.pos++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));\n\t}\n\t,unserializeObject: function(o) {\n\t\twhile(true) {\n\t\t\tif(this.pos >= this.length) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid object");\n\t\t\t}\n\t\t\tif(this.buf.charCodeAt(this.pos) == 103) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar k = this.unserialize();\n\t\t\tif(typeof(k) != "string") {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid object key");\n\t\t\t}\n\t\t\tvar v = this.unserialize();\n\t\t\to[k] = v;\n\t\t}\n\t\tthis.pos++;\n\t}\n\t,unserializeEnum: function(edecl,tag) {\n\t\tif(this.buf.charCodeAt(this.pos++) != 58) {\n\t\t\tthrow new js__$Boot_HaxeError("Invalid enum format");\n\t\t}\n\t\tvar nargs = this.readDigits();\n\t\tif(nargs == 0) {\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\t}\n\t\tvar args = [];\n\t\twhile(nargs-- > 0) args.push(this.unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\t,unserialize: function() {\n\t\tswitch(this.buf.charCodeAt(this.pos++)) {\n\t\tcase 65:\n\t\t\tvar name = this.unserialize();\n\t\t\tvar cl = this.resolver.resolveClass(name);\n\t\t\tif(cl == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Class not found " + name);\n\t\t\t}\n\t\t\treturn cl;\n\t\tcase 66:\n\t\t\tvar name1 = this.unserialize();\n\t\t\tvar e = this.resolver.resolveEnum(name1);\n\t\t\tif(e == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Enum not found " + name1);\n\t\t\t}\n\t\t\treturn e;\n\t\tcase 67:\n\t\t\tvar name2 = this.unserialize();\n\t\t\tvar cl1 = this.resolver.resolveClass(name2);\n\t\t\tif(cl1 == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Class not found " + name2);\n\t\t\t}\n\t\t\tvar o = Object.create(cl1.prototype);\n\t\t\tthis.cache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif(this.buf.charCodeAt(this.pos++) != 103) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid custom data");\n\t\t\t}\n\t\t\treturn o;\n\t\tcase 77:\n\t\t\tvar h = new haxe_ds_ObjectMap();\n\t\t\tthis.cache.push(h);\n\t\t\tvar buf = this.buf;\n\t\t\twhile(this.buf.charCodeAt(this.pos) != 104) {\n\t\t\t\tvar s = this.unserialize();\n\t\t\t\th.set(s,this.unserialize());\n\t\t\t}\n\t\t\tthis.pos++;\n\t\t\treturn h;\n\t\tcase 82:\n\t\t\tvar n = this.readDigits();\n\t\t\tif(n < 0 || n >= this.scache.length) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid string reference");\n\t\t\t}\n\t\t\treturn this.scache[n];\n\t\tcase 97:\n\t\t\tvar buf1 = this.buf;\n\t\t\tvar a = [];\n\t\t\tthis.cache.push(a);\n\t\t\twhile(true) {\n\t\t\t\tvar c = this.buf.charCodeAt(this.pos);\n\t\t\t\tif(c == 104) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(c == 117) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tvar n1 = this.readDigits();\n\t\t\t\t\ta[a.length + n1 - 1] = null;\n\t\t\t\t} else {\n\t\t\t\t\ta.push(this.unserialize());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\tcase 98:\n\t\t\tvar h1 = new haxe_ds_StringMap();\n\t\t\tthis.cache.push(h1);\n\t\t\tvar buf2 = this.buf;\n\t\t\twhile(this.buf.charCodeAt(this.pos) != 104) {\n\t\t\t\tvar s1 = this.unserialize();\n\t\t\t\tvar value = this.unserialize();\n\t\t\t\tif(__map_reserved[s1] != null) {\n\t\t\t\t\th1.setReserved(s1,value);\n\t\t\t\t} else {\n\t\t\t\t\th1.h[s1] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.pos++;\n\t\t\treturn h1;\n\t\tcase 99:\n\t\t\tvar name3 = this.unserialize();\n\t\t\tvar cl2 = this.resolver.resolveClass(name3);\n\t\t\tif(cl2 == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Class not found " + name3);\n\t\t\t}\n\t\t\tvar o1 = Object.create(cl2.prototype);\n\t\t\tthis.cache.push(o1);\n\t\t\tthis.unserializeObject(o1);\n\t\t\treturn o1;\n\t\tcase 100:\n\t\t\treturn this.readFloat();\n\t\tcase 102:\n\t\t\treturn false;\n\t\tcase 105:\n\t\t\treturn this.readDigits();\n\t\tcase 106:\n\t\t\tvar name4 = this.unserialize();\n\t\t\tvar edecl = this.resolver.resolveEnum(name4);\n\t\t\tif(edecl == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Enum not found " + name4);\n\t\t\t}\n\t\t\tthis.pos++;\n\t\t\tvar index = this.readDigits();\n\t\t\tvar tag = edecl.__constructs__.slice()[index];\n\t\t\tif(tag == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);\n\t\t\t}\n\t\t\tvar e1 = this.unserializeEnum(edecl,tag);\n\t\t\tthis.cache.push(e1);\n\t\t\treturn e1;\n\t\tcase 107:\n\t\t\treturn NaN;\n\t\tcase 108:\n\t\t\tvar l = new haxe_ds_List();\n\t\t\tthis.cache.push(l);\n\t\t\tvar buf3 = this.buf;\n\t\t\twhile(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());\n\t\t\tthis.pos++;\n\t\t\treturn l;\n\t\tcase 109:\n\t\t\treturn -Infinity;\n\t\tcase 110:\n\t\t\treturn null;\n\t\tcase 111:\n\t\t\tvar o2 = { };\n\t\t\tthis.cache.push(o2);\n\t\t\tthis.unserializeObject(o2);\n\t\t\treturn o2;\n\t\tcase 112:\n\t\t\treturn Infinity;\n\t\tcase 113:\n\t\t\tvar h2 = new haxe_ds_IntMap();\n\t\t\tthis.cache.push(h2);\n\t\t\tvar buf4 = this.buf;\n\t\t\tvar c1 = this.buf.charCodeAt(this.pos++);\n\t\t\twhile(c1 == 58) {\n\t\t\t\tvar i = this.readDigits();\n\t\t\t\tvar value1 = this.unserialize();\n\t\t\t\th2.h[i] = value1;\n\t\t\t\tc1 = this.buf.charCodeAt(this.pos++);\n\t\t\t}\n\t\t\tif(c1 != 104) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid IntMap format");\n\t\t\t}\n\t\t\treturn h2;\n\t\tcase 114:\n\t\t\tvar n2 = this.readDigits();\n\t\t\tif(n2 < 0 || n2 >= this.cache.length) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid reference");\n\t\t\t}\n\t\t\treturn this.cache[n2];\n\t\tcase 115:\n\t\t\tvar len = this.readDigits();\n\t\t\tvar buf5 = this.buf;\n\t\t\tif(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid bytes length");\n\t\t\t}\n\t\t\tvar codes = haxe_Unserializer.CODES;\n\t\t\tif(codes == null) {\n\t\t\t\tcodes = haxe_Unserializer.initCodes();\n\t\t\t\thaxe_Unserializer.CODES = codes;\n\t\t\t}\n\t\t\tvar i1 = this.pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);\n\t\t\tvar max = i1 + (len - rest);\n\t\t\tvar bytes = new haxe_io_Bytes(new ArrayBuffer(size));\n\t\t\tvar bpos = 0;\n\t\t\twhile(i1 < max) {\n\t\t\t\tvar c11 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tvar c2 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tbytes.b[bpos++] = c11 << 2 | c2 >> 4;\n\t\t\t\tvar c3 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tbytes.b[bpos++] = c2 << 4 | c3 >> 2;\n\t\t\t\tvar c4 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tbytes.b[bpos++] = c3 << 6 | c4;\n\t\t\t}\n\t\t\tif(rest >= 2) {\n\t\t\t\tvar c12 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tvar c21 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\tbytes.b[bpos++] = c12 << 2 | c21 >> 4;\n\t\t\t\tif(rest == 3) {\n\t\t\t\t\tvar c31 = codes[buf5.charCodeAt(i1++)];\n\t\t\t\t\tbytes.b[bpos++] = c21 << 4 | c31 >> 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.pos += len;\n\t\t\tthis.cache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase 116:\n\t\t\treturn true;\n\t\tcase 118:\n\t\t\tvar d;\n\t\t\tif(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {\n\t\t\t\td = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));\n\t\t\t\tthis.pos += 19;\n\t\t\t} else {\n\t\t\t\td = new Date(this.readFloat());\n\t\t\t}\n\t\t\tthis.cache.push(d);\n\t\t\treturn d;\n\t\tcase 119:\n\t\t\tvar name5 = this.unserialize();\n\t\t\tvar edecl1 = this.resolver.resolveEnum(name5);\n\t\t\tif(edecl1 == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Enum not found " + name5);\n\t\t\t}\n\t\t\tvar e2 = this.unserializeEnum(edecl1,this.unserialize());\n\t\t\tthis.cache.push(e2);\n\t\t\treturn e2;\n\t\tcase 120:\n\t\t\tthrow js__$Boot_HaxeError.wrap(this.unserialize());\n\t\tcase 121:\n\t\t\tvar len1 = this.readDigits();\n\t\t\tif(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid string length");\n\t\t\t}\n\t\t\tvar s2 = HxOverrides.substr(this.buf,this.pos,len1);\n\t\t\tthis.pos += len1;\n\t\t\ts2 = decodeURIComponent(s2.split("+").join(" "));\n\t\t\tthis.scache.push(s2);\n\t\t\treturn s2;\n\t\tcase 122:\n\t\t\treturn 0;\n\t\tdefault:\n\t\t}\n\t\tthis.pos--;\n\t\tthrow new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);\n\t}\n\t,__class__: haxe_Unserializer\n};\nvar haxe_crypto_Crc32 = function() { };\n$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;\nhaxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";\nhaxe_crypto_Crc32.make = function(data) {\n\tvar init = -1;\n\tvar crc = init;\n\tvar b = data.b.bufferValue;\n\tvar _g = 0;\n\tvar _g1 = data.length;\n\twhile(_g < _g1) {\n\t\tvar i = _g++;\n\t\tvar tmp = (crc ^ b.bytes[i]) & 255;\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tif((tmp & 1) == 1) {\n\t\t\ttmp = tmp >>> 1 ^ -306674912;\n\t\t} else {\n\t\t\ttmp >>>= 1;\n\t\t}\n\t\tcrc = crc >>> 8 ^ tmp;\n\t}\n\treturn crc ^ init;\n};\nvar haxe_ds_BalancedTree = function() {\n};\n$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;\nhaxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";\nhaxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];\nhaxe_ds_BalancedTree.prototype = {\n\troot: null\n\t,set: function(key,value) {\n\t\tthis.root = this.setLoop(key,value,this.root);\n\t}\n\t,get: function(key) {\n\t\tvar node = this.root;\n\t\twhile(node != null) {\n\t\t\tvar c = this.compare(key,node.key);\n\t\t\tif(c == 0) {\n\t\t\t\treturn node.value;\n\t\t\t}\n\t\t\tif(c < 0) {\n\t\t\t\tnode = node.left;\n\t\t\t} else {\n\t\t\t\tnode = node.right;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t,keys: function() {\n\t\tvar ret = [];\n\t\tthis.keysLoop(this.root,ret);\n\t\treturn HxOverrides.iter(ret);\n\t}\n\t,setLoop: function(k,v,node) {\n\t\tif(node == null) {\n\t\t\treturn new haxe_ds_TreeNode(null,k,v,null);\n\t\t}\n\t\tvar c = this.compare(k,node.key);\n\t\tif(c == 0) {\n\t\t\treturn new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);\n\t\t} else if(c < 0) {\n\t\t\tvar nl = this.setLoop(k,v,node.left);\n\t\t\treturn this.balance(nl,node.key,node.value,node.right);\n\t\t} else {\n\t\t\tvar nr = this.setLoop(k,v,node.right);\n\t\t\treturn this.balance(node.left,node.key,node.value,nr);\n\t\t}\n\t}\n\t,keysLoop: function(node,acc) {\n\t\tif(node != null) {\n\t\t\tthis.keysLoop(node.left,acc);\n\t\t\tacc.push(node.key);\n\t\t\tthis.keysLoop(node.right,acc);\n\t\t}\n\t}\n\t,balance: function(l,k,v,r) {\n\t\tvar hl = l == null ? 0 : l._height;\n\t\tvar hr = r == null ? 0 : r._height;\n\t\tif(hl > hr + 2) {\n\t\t\tvar _this = l.left;\n\t\t\tvar _this1 = l.right;\n\t\t\tif((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {\n\t\t\t\treturn new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));\n\t\t\t} else {\n\t\t\t\treturn new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));\n\t\t\t}\n\t\t} else if(hr > hl + 2) {\n\t\t\tvar _this2 = r.right;\n\t\t\tvar _this3 = r.left;\n\t\t\tif((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {\n\t\t\t\treturn new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);\n\t\t\t} else {\n\t\t\t\treturn new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);\n\t\t}\n\t}\n\t,compare: function(k1,k2) {\n\t\treturn Reflect.compare(k1,k2);\n\t}\n\t,__class__: haxe_ds_BalancedTree\n};\nvar haxe_ds_TreeNode = function(l,k,v,r,h) {\n\tif(h == null) {\n\t\th = -1;\n\t}\n\tthis.left = l;\n\tthis.key = k;\n\tthis.value = v;\n\tthis.right = r;\n\tif(h == -1) {\n\t\tvar tmp;\n\t\tvar _this = this.left;\n\t\tvar _this1 = this.right;\n\t\tif((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {\n\t\t\tvar _this2 = this.left;\n\t\t\ttmp = _this2 == null ? 0 : _this2._height;\n\t\t} else {\n\t\t\tvar _this3 = this.right;\n\t\t\ttmp = _this3 == null ? 0 : _this3._height;\n\t\t}\n\t\tthis._height = tmp + 1;\n\t} else {\n\t\tthis._height = h;\n\t}\n};\n$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;\nhaxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";\nhaxe_ds_TreeNode.prototype = {\n\tleft: null\n\t,right: null\n\t,key: null\n\t,value: null\n\t,_height: null\n\t,__class__: haxe_ds_TreeNode\n};\nvar haxe_ds_EnumValueMap = function() {\n\thaxe_ds_BalancedTree.call(this);\n};\n$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;\nhaxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";\nhaxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];\nhaxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;\nhaxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{\n\tcompare: function(k1,k2) {\n\t\tvar d = k1._hx_index - k2._hx_index;\n\t\tif(d != 0) {\n\t\t\treturn d;\n\t\t}\n\t\tvar p1 = Type.enumParameters(k1);\n\t\tvar p2 = Type.enumParameters(k2);\n\t\tif(p1.length == 0 && p2.length == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.compareArgs(p1,p2);\n\t}\n\t,compareArgs: function(a1,a2) {\n\t\tvar ld = a1.length - a2.length;\n\t\tif(ld != 0) {\n\t\t\treturn ld;\n\t\t}\n\t\tvar _g = 0;\n\t\tvar _g1 = a1.length;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\tvar d = this.compareArg(a1[i],a2[i]);\n\t\t\tif(d != 0) {\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t,compareArg: function(v1,v2) {\n\t\tif(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\n\t\t\treturn this.compare(v1,v2);\n\t\t} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {\n\t\t\treturn this.compareArgs(v1,v2);\n\t\t} else {\n\t\t\treturn Reflect.compare(v1,v2);\n\t\t}\n\t}\n\t,__class__: haxe_ds_EnumValueMap\n});\nvar haxe_ds_List = function() {\n\tthis.length = 0;\n};\n$hxClasses["haxe.ds.List"] = haxe_ds_List;\nhaxe_ds_List.__name__ = "haxe.ds.List";\nhaxe_ds_List.prototype = {\n\th: null\n\t,q: null\n\t,length: null\n\t,add: function(item) {\n\t\tvar x = new haxe_ds__$List_ListNode(item,null);\n\t\tif(this.h == null) {\n\t\t\tthis.h = x;\n\t\t} else {\n\t\t\tthis.q.next = x;\n\t\t}\n\t\tthis.q = x;\n\t\tthis.length++;\n\t}\n\t,__class__: haxe_ds_List\n};\nvar haxe_ds__$List_ListNode = function(item,next) {\n\tthis.item = item;\n\tthis.next = next;\n};\n$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;\nhaxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";\nhaxe_ds__$List_ListNode.prototype = {\n\titem: null\n\t,next: null\n\t,__class__: haxe_ds__$List_ListNode\n};\nvar haxe_ds_ObjectMap = function() {\n\tthis.h = { __keys__ : { }};\n};\n$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;\nhaxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";\nhaxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];\nhaxe_ds_ObjectMap.prototype = {\n\th: null\n\t,set: function(key,value) {\n\t\tvar id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);\n\t\tthis.h[id] = value;\n\t\tthis.h.__keys__[id] = key;\n\t}\n\t,get: function(key) {\n\t\treturn this.h[key.__id__];\n\t}\n\t,keys: function() {\n\t\tvar a = [];\n\t\tfor( var key in this.h.__keys__ ) {\n\t\tif(this.h.hasOwnProperty(key)) {\n\t\t\ta.push(this.h.__keys__[key]);\n\t\t}\n\t\t}\n\t\treturn HxOverrides.iter(a);\n\t}\n\t,__class__: haxe_ds_ObjectMap\n};\nvar haxe_rtti_Meta = function() { };\n$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;\nhaxe_rtti_Meta.__name__ = "haxe.rtti.Meta";\nhaxe_rtti_Meta.getType = function(t) {\n\tvar meta = haxe_rtti_Meta.getMeta(t);\n\tif(meta == null || meta.obj == null) {\n\t\treturn { };\n\t} else {\n\t\treturn meta.obj;\n\t}\n};\nhaxe_rtti_Meta.getMeta = function(t) {\n\treturn t.__meta__;\n};\nvar hxbit_ConvertField = function(from,to) {\n\tthis.from = from;\n\tthis.to = to;\n};\n$hxClasses["hxbit.ConvertField"] = hxbit_ConvertField;\nhxbit_ConvertField.__name__ = "hxbit.ConvertField";\nhxbit_ConvertField.prototype = {\n\tindex: null\n\t,same: null\n\t,defaultValue: null\n\t,from: null\n\t,to: null\n\t,__class__: hxbit_ConvertField\n};\nvar hxbit_Convert = function(ourSchema,schema) {\n\tvar ourMap = new haxe_ds_StringMap();\n\tvar _g = 0;\n\tvar _g1 = ourSchema.fieldsNames.length;\n\twhile(_g < _g1) {\n\t\tvar i = _g++;\n\t\tvar key = ourSchema.fieldsNames[i];\n\t\tvar value = ourSchema.fieldsTypes[i];\n\t\tif(__map_reserved[key] != null) {\n\t\t\tourMap.setReserved(key,value);\n\t\t} else {\n\t\t\tourMap.h[key] = value;\n\t\t}\n\t}\n\tthis.read = [];\n\tif(ourSchema.isFinal != schema.isFinal) {\n\t\tthrow new js__$Boot_HaxeError("TODO : handle final flag change");\n\t}\n\tvar map = new haxe_ds_StringMap();\n\tvar _g2 = 0;\n\tvar _g3 = schema.fieldsNames.length;\n\twhile(_g2 < _g3) {\n\t\tvar i1 = _g2++;\n\t\tvar oldT = schema.fieldsTypes[i1];\n\t\tvar key1 = schema.fieldsNames[i1];\n\t\tvar newT = __map_reserved[key1] != null ? ourMap.getReserved(key1) : ourMap.h[key1];\n\t\tvar c = new hxbit_ConvertField(oldT,newT);\n\t\tif(newT != null) {\n\t\t\tif(hxbit_Convert.sameType(oldT,newT)) {\n\t\t\t\tc.same = true;\n\t\t\t} else {\n\t\t\t\tc.defaultValue = hxbit_Convert.getDefault(newT);\n\t\t\t}\n\t\t}\n\t\tc.index = this.read.length;\n\t\tthis.read.push(c);\n\t\tvar key2 = schema.fieldsNames[i1];\n\t\tif(__map_reserved[key2] != null) {\n\t\t\tmap.setReserved(key2,c);\n\t\t} else {\n\t\t\tmap.h[key2] = c;\n\t\t}\n\t}\n\tthis.write = [];\n\tvar _g4 = 0;\n\tvar _g5 = ourSchema.fieldsNames.length;\n\twhile(_g4 < _g5) {\n\t\tvar i2 = _g4++;\n\t\tvar newT1 = ourSchema.fieldsTypes[i2];\n\t\tvar key3 = ourSchema.fieldsNames[i2];\n\t\tvar c1 = __map_reserved[key3] != null ? map.getReserved(key3) : map.h[key3];\n\t\tif(c1 == null) {\n\t\t\tc1 = new hxbit_ConvertField(null,newT1);\n\t\t\tc1.defaultValue = hxbit_Convert.getDefault(newT1);\n\t\t}\n\t\tthis.write.push(c1);\n\t}\n};\n$hxClasses["hxbit.Convert"] = hxbit_Convert;\nhxbit_Convert.__name__ = "hxbit.Convert";\nhxbit_Convert.sameType = function(a,b) {\n\tswitch(a._hx_index) {\n\tcase 0:\n\t\tswitch(b._hx_index) {\n\t\tcase 10:\n\t\t\tvar b1 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b1);\n\t\tcase 16:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 7:\n\t\tswitch(b._hx_index) {\n\t\tcase 7:\n\t\t\tvar ak = a.k;\n\t\t\tvar av = a.v;\n\t\t\tvar bv = b.v;\n\t\t\tvar bk = b.k;\n\t\t\tif(hxbit_Convert.sameType(ak,bk)) {\n\t\t\t\treturn hxbit_Convert.sameType(av,bv);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\tvar b2 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b2);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 8:\n\t\tswitch(b._hx_index) {\n\t\tcase 8:\n\t\t\tvar a1 = a.k;\n\t\t\tvar b3 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a1,b3);\n\t\tcase 10:\n\t\t\tvar b4 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b4);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 9:\n\t\tswitch(b._hx_index) {\n\t\tcase 9:\n\t\t\tvar fa = a.fields;\n\t\t\tvar fb = b.fields;\n\t\t\tif(fa.length != fb.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = fa.length;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tvar i = _g++;\n\t\t\t\tvar a2 = fa[i];\n\t\t\t\tvar b5 = fb[i];\n\t\t\t\tif(a2.name != b5.name || a2.opt != b5.opt || !hxbit_Convert.sameType(a2.type,b5.type)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 10:\n\t\t\tvar b6 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b6);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 10:\n\t\tif(b._hx_index == 10) {\n\t\t\tvar a3 = a.k;\n\t\t\tvar b7 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a3,b7);\n\t\t} else {\n\t\t\tvar a4 = a.k;\n\t\t\treturn hxbit_Convert.sameType(a4,b);\n\t\t}\n\t\tbreak;\n\tcase 11:\n\t\tswitch(b._hx_index) {\n\t\tcase 10:\n\t\t\tvar b8 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b8);\n\t\tcase 11:\n\t\t\tvar a5 = a.k;\n\t\t\tvar b9 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a5,b9);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 12:\n\t\tswitch(b._hx_index) {\n\t\tcase 10:\n\t\t\tvar b10 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b10);\n\t\tcase 12:\n\t\t\tvar a6 = a.t;\n\t\t\tvar b11 = b.t;\n\t\t\treturn hxbit_Convert.sameType(a6,b11);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tcase 16:\n\t\tswitch(b._hx_index) {\n\t\tcase 0:\n\t\t\treturn true;\n\t\tcase 10:\n\t\t\tvar b12 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b12);\n\t\tdefault:\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tif(b._hx_index == 10) {\n\t\t\tvar b13 = b.k;\n\t\t\treturn hxbit_Convert.sameType(a,b13);\n\t\t} else {\n\t\t\treturn Type.enumEq(a,b);\n\t\t}\n\t}\n};\nhxbit_Convert.getDefault = function(t) {\n\tswitch(t._hx_index) {\n\tcase 0:case 16:\n\t\treturn 0;\n\tcase 1:\n\t\treturn 0.;\n\tcase 2:\n\t\treturn false;\n\tcase 7:\n\t\tvar k = t.k;\n\t\tswitch(k._hx_index) {\n\t\tcase 0:\n\t\t\treturn new haxe_ds_IntMap();\n\t\tcase 3:\n\t\t\treturn new haxe_ds_StringMap();\n\t\tdefault:\n\t\t\treturn new haxe_ds_ObjectMap();\n\t\t}\n\t\tbreak;\n\tcase 8:\n\t\treturn [];\n\tcase 10:\n\t\tvar t1 = t.k;\n\t\treturn hxbit_Convert.getDefault(t1);\n\tcase 11:\n\t\tvar this1 = new Array(0);\n\t\treturn this1;\n\tcase 3:case 4:case 5:case 6:case 9:case 12:case 13:case 14:case 17:\n\t\treturn null;\n\tcase 15:\n\t\tvar this2 = new haxe__$Int64__$_$_$Int64(0,0);\n\t\treturn this2;\n\t}\n};\nhxbit_Convert.prototype = {\n\tread: null\n\t,write: null\n\t,toString: function() {\n\t\tvar _g = [];\n\t\tvar _g1 = 0;\n\t\tvar _g2 = this.write.length;\n\t\twhile(_g1 < _g2) {\n\t\t\tvar i = _g1++;\n\t\t\tvar w = this.write[i];\n\t\t\t_g.push(w.from == null ? "insert:" + Std.string(w.defaultValue) : w.same ? i == w.index ? "s" : "@" + w.index : "@" + w.index + ":" + Std.string(w.to));\n\t\t}\n\t\treturn _g.toString();\n\t}\n\t,__class__: hxbit_Convert\n};\nvar hxbit_PropTypeDesc = $hxEnums["hxbit.PropTypeDesc"] = { __ename__ : "hxbit.PropTypeDesc", __constructs__ : ["PInt","PFloat","PBool","PString","PBytes","PSerializable","PEnum","PMap","PArray","PObj","PAlias","PVector","PNull","PUnknown","PDynamic","PInt64","PFlags","PStruct"]\n\t,PInt: {_hx_index:0,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PFloat: {_hx_index:1,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PBool: {_hx_index:2,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PString: {_hx_index:3,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PBytes: {_hx_index:4,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PSerializable: ($_=function(name) { return {_hx_index:5,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["name"],$_)\n\t,PEnum: ($_=function(name) { return {_hx_index:6,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["name"],$_)\n\t,PMap: ($_=function(k,v) { return {_hx_index:7,k:k,v:v,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["k","v"],$_)\n\t,PArray: ($_=function(k) { return {_hx_index:8,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["k"],$_)\n\t,PObj: ($_=function(fields) { return {_hx_index:9,fields:fields,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["fields"],$_)\n\t,PAlias: ($_=function(k) { return {_hx_index:10,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["k"],$_)\n\t,PVector: ($_=function(k) { return {_hx_index:11,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["k"],$_)\n\t,PNull: ($_=function(t) { return {_hx_index:12,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["t"],$_)\n\t,PUnknown: {_hx_index:13,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PDynamic: {_hx_index:14,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PInt64: {_hx_index:15,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n\t,PFlags: ($_=function(t) { return {_hx_index:16,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_.__params__ = ["t"],$_)\n\t,PStruct: {_hx_index:17,__enum__:"hxbit.PropTypeDesc",toString:$estr}\n};\nvar hxbit_Serializable = function() { };\n$hxClasses["hxbit.Serializable"] = hxbit_Serializable;\nhxbit_Serializable.__name__ = "hxbit.Serializable";\nhxbit_Serializable.prototype = {\n\t__uid: null\n\t,getCLID: null\n\t,serialize: null\n\t,unserializeInit: null\n\t,unserialize: null\n\t,getSerializeSchema: null\n\t,__class__: hxbit_Serializable\n};\nvar hxbit_Serializer = function() {\n\tthis.usedClasses = [];\n\tif(hxbit_Serializer.CLIDS == null) {\n\t\thxbit_Serializer.initClassIDS();\n\t}\n};\n$hxClasses["hxbit.Serializer"] = hxbit_Serializer;\nhxbit_Serializer.__name__ = "hxbit.Serializer";\nhxbit_Serializer.resetCounters = function() {\n\thxbit_Serializer.UID = 0;\n\thxbit_Serializer.SEQ = 0;\n};\nhxbit_Serializer.allocUID = function() {\n\treturn hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;\n};\nhxbit_Serializer.registerClass = function(c) {\n\tif(hxbit_Serializer.CLIDS != null) {\n\t\tthrow new js__$Boot_HaxeError("Too late to register class");\n\t}\n\tvar idx = hxbit_Serializer.CLASSES.length;\n\thxbit_Serializer.CLASSES.push(c);\n\treturn idx;\n};\nhxbit_Serializer.hash = function(name) {\n\tvar v = 1;\n\tvar _g = 0;\n\tvar _g1 = name.length;\n\twhile(_g < _g1) {\n\t\tvar i = _g++;\n\t\tv = v * 223 + name.charCodeAt(i) | 0;\n\t}\n\tv = 1 + (v & 1073741823) % 65423;\n\treturn v;\n};\nhxbit_Serializer.initClassIDS = function() {\n\tvar cl = hxbit_Serializer.CLASSES;\n\tvar _g = [];\n\tvar _g1 = 0;\n\twhile(_g1 < cl.length) {\n\t\tvar c = cl[_g1];\n\t\t++_g1;\n\t\t_g.push([]);\n\t}\n\tvar subClasses = _g;\n\tvar isSub = [];\n\tvar _g2 = 0;\n\tvar _g3 = cl.length;\n\twhile(_g2 < _g3) {\n\t\tvar i = _g2++;\n\t\tvar c1 = cl[i];\n\t\twhile(true) {\n\t\t\tc1 = c1.__super__;\n\t\t\tif(c1 == null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar idx = cl.indexOf(c1);\n\t\t\tif(idx < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsubClasses[idx].push(i);\n\t\t\tisSub[i] = true;\n\t\t}\n\t}\n\tvar _g4 = [];\n\tvar _g5 = 0;\n\tvar _g6 = hxbit_Serializer.CLASSES.length;\n\twhile(_g5 < _g6) {\n\t\tvar i1 = _g5++;\n\t\tvar tmp;\n\t\tif(subClasses[i1].length == 0 && !isSub[i1]) {\n\t\t\ttmp = 0;\n\t\t} else {\n\t\t\tvar name = cl[i1].__name__;\n\t\t\tvar v = 1;\n\t\t\tvar _g7 = 0;\n\t\t\tvar _g11 = name.length;\n\t\t\twhile(_g7 < _g11) {\n\t\t\t\tvar i2 = _g7++;\n\t\t\t\tv = v * 223 + name.charCodeAt(i2) | 0;\n\t\t\t}\n\t\t\tv = 1 + (v & 1073741823) % 65423;\n\t\t\ttmp = v;\n\t\t}\n\t\t_g4.push(tmp);\n\t}\n\thxbit_Serializer.CLIDS = _g4;\n\thxbit_Serializer.CL_BYID = [];\n\tvar _g71 = 0;\n\tvar _g8 = hxbit_Serializer.CLIDS.length;\n\twhile(_g71 < _g8) {\n\t\tvar i3 = _g71++;\n\t\tvar cid = hxbit_Serializer.CLIDS[i3];\n\t\tif(cid == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif(hxbit_Serializer.CL_BYID[cid] != null) {\n\t\t\tvar c2 = hxbit_Serializer.CL_BYID[cid];\n\t\t\tthrow new js__$Boot_HaxeError("Conflicting CLID between " + c2.__name__ + " and " + cl[i3].__name__);\n\t\t}\n\t\thxbit_Serializer.CL_BYID[cid] = cl[i3];\n\t}\n};\nhxbit_Serializer.isClassFinal = function(index) {\n\treturn hxbit_Serializer.CLIDS[index] == 0;\n};\nhxbit_Serializer.prototype = {\n\trefs: null\n\t,remapObjs: null\n\t,newObjects: null\n\t,out: null\n\t,input: null\n\t,inPos: null\n\t,usedClasses: null\n\t,convert: null\n\t,mapIndexes: null\n\t,knownStructs: null\n\t,set_remapIds: function(b) {\n\t\tthis.remapObjs = b ? new haxe_ds_ObjectMap() : null;\n\t\treturn b;\n\t}\n\t,get_remapIds: function() {\n\t\treturn this.remapObjs != null;\n\t}\n\t,remap: function(s) {\n\t\tif(this.remapObjs.h.__keys__[s.__id__] != null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.remapObjs.set(s,s.__uid);\n\t\ts.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;\n\t}\n\t,begin: function() {\n\t\tthis.out = new haxe_io_BytesBuffer();\n\t\tthis.refs = new haxe_ds_IntMap();\n\t\tthis.knownStructs = [];\n\t}\n\t,end: function() {\n\t\tvar bytes = this.out.getBytes();\n\t\tthis.out = null;\n\t\tthis.refs = null;\n\t\tthis.knownStructs = null;\n\t\treturn bytes;\n\t}\n\t,setInput: function(data,pos) {\n\t\tthis.input = data;\n\t\tthis.inPos = pos;\n\t\tif(this.refs == null) {\n\t\t\tthis.refs = new haxe_ds_IntMap();\n\t\t}\n\t\tif(this.knownStructs == null) {\n\t\t\tthis.knownStructs = [];\n\t\t}\n\t}\n\t,serialize: function(s) {\n\t\tthis.begin();\n\t\tthis.addKnownRef(s);\n\t\treturn this.out.getBytes();\n\t}\n\t,unserialize: function(data,c,startPos) {\n\t\tif(startPos == null) {\n\t\t\tstartPos = 0;\n\t\t}\n\t\tthis.refs = new haxe_ds_IntMap();\n\t\tthis.knownStructs = [];\n\t\tthis.setInput(data,startPos);\n\t\treturn this.getRef(c,c.__clid);\n\t}\n\t,getByte: function() {\n\t\treturn this.input.b[this.inPos++];\n\t}\n\t,addByte: function(v) {\n\t\tthis.out.addByte(v);\n\t}\n\t,addInt: function(v) {\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t}\n\t,addInt32: function(v) {\n\t\tthis.out.addInt32(v);\n\t}\n\t,addInt64: function(v) {\n\t\tthis.out.addInt64(v);\n\t}\n\t,addFloat: function(v) {\n\t\tthis.out.addFloat(v);\n\t}\n\t,addDouble: function(v) {\n\t\tthis.out.addDouble(v);\n\t}\n\t,addBool: function(v) {\n\t\tthis.out.addByte(v ? 1 : 0);\n\t}\n\t,addArray: function(a,f) {\n\t\tif(a == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tvar v = a.length + 1;\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t\tvar _g = 0;\n\t\twhile(_g < a.length) {\n\t\t\tvar v1 = a[_g];\n\t\t\t++_g;\n\t\t\tf(v1);\n\t\t}\n\t}\n\t,addVector: function(a,f) {\n\t\tif(a == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tvar v = a.length + 1;\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t\tvar _g = 0;\n\t\twhile(_g < a.length) {\n\t\t\tvar v1 = a[_g];\n\t\t\t++_g;\n\t\t\tf(v1);\n\t\t}\n\t}\n\t,getArray: function(f) {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tif(len == 0) {\n\t\t\treturn null;\n\t\t}\n\t\t--len;\n\t\tvar a = [];\n\t\tvar _g = 0;\n\t\tvar _g1 = len;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\ta[i] = f();\n\t\t}\n\t\treturn a;\n\t}\n\t,getVector: function(f) {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tif(len == 0) {\n\t\t\treturn null;\n\t\t}\n\t\t--len;\n\t\tvar this1 = new Array(len);\n\t\tvar a = this1;\n\t\tvar _g = 0;\n\t\tvar _g1 = len;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\ta[i] = f();\n\t\t}\n\t\treturn a;\n\t}\n\t,addMap: function(a,fk,ft) {\n\t\tif(a == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tvar _e = a;\n\t\tvar keys = Lambda.array({ iterator : function() {\n\t\t\treturn _e.keys();\n\t\t}});\n\t\tvar v = keys.length + 1;\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t\tvar _g = 0;\n\t\twhile(_g < keys.length) {\n\t\t\tvar k = keys[_g];\n\t\t\t++_g;\n\t\t\tfk(k);\n\t\t\tft(a.get(k));\n\t\t}\n\t}\n\t,getBool: function() {\n\t\treturn this.input.b[this.inPos++] != 0;\n\t}\n\t,getInt: function() {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\treturn v;\n\t}\n\t,skip: function(size) {\n\t\tthis.inPos += size;\n\t}\n\t,getInt32: function() {\n\t\tvar v = this.input.getInt32(this.inPos);\n\t\tthis.inPos += 4;\n\t\treturn v;\n\t}\n\t,getInt64: function() {\n\t\tvar v = this.input.getInt64(this.inPos);\n\t\tthis.inPos += 8;\n\t\treturn v;\n\t}\n\t,getDouble: function() {\n\t\tvar v = this.input.getDouble(this.inPos);\n\t\tthis.inPos += 8;\n\t\treturn v;\n\t}\n\t,getFloat: function() {\n\t\tvar v = this.input.getFloat(this.inPos);\n\t\tthis.inPos += 4;\n\t\treturn v;\n\t}\n\t,addString: function(s) {\n\t\tif(s == null) {\n\t\t\tthis.out.addByte(0);\n\t\t} else {\n\t\t\tvar b = haxe_io_Bytes.ofString(s);\n\t\t\tvar v = b.length + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\tthis.out.addByte(v);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v);\n\t\t\t}\n\t\t\tthis.out.add(b);\n\t\t}\n\t}\n\t,addBytes: function(b) {\n\t\tif(b == null) {\n\t\t\tthis.out.addByte(0);\n\t\t} else {\n\t\t\tvar v = b.length + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\tthis.out.addByte(v);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v);\n\t\t\t}\n\t\t\tthis.out.add(b);\n\t\t}\n\t}\n\t,addBytesSub: function(b,pos,len) {\n\t\tif(b == null) {\n\t\t\tthis.out.addByte(0);\n\t\t} else {\n\t\t\tvar v = len + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\tthis.out.addByte(v);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v);\n\t\t\t}\n\t\t\tthis.out.addBytes(b,pos,len);\n\t\t}\n\t}\n\t,getString: function() {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tif(len == 0) {\n\t\t\treturn null;\n\t\t}\n\t\t--len;\n\t\tvar s = this.input.getString(this.inPos,len);\n\t\tthis.inPos += len;\n\t\treturn s;\n\t}\n\t,getBytes: function() {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tif(len == 0) {\n\t\t\treturn null;\n\t\t}\n\t\t--len;\n\t\tvar s = this.input.sub(this.inPos,len);\n\t\tthis.inPos += len;\n\t\treturn s;\n\t}\n\t,getDynamic: function() {\n\t\tvar _g = this.input.b[this.inPos++];\n\t\tswitch(_g) {\n\t\tcase 0:\n\t\t\treturn null;\n\t\tcase 1:\n\t\t\treturn false;\n\t\tcase 2:\n\t\t\treturn true;\n\t\tcase 3:\n\t\t\tvar v = this.input.b[this.inPos++];\n\t\t\tif(v == 128) {\n\t\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\treturn v;\n\t\tcase 4:\n\t\t\tvar v1 = this.input.getFloat(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t\treturn v1;\n\t\tcase 5:\n\t\t\tvar o = { };\n\t\t\tvar _g1 = 0;\n\t\t\tvar v2 = this.input.b[this.inPos++];\n\t\t\tif(v2 == 128) {\n\t\t\t\tv2 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar _g11 = v2;\n\t\t\twhile(_g1 < _g11) {\n\t\t\t\tvar i = _g1++;\n\t\t\t\tvar v3 = this.input.b[this.inPos++];\n\t\t\t\tif(v3 == 128) {\n\t\t\t\t\tv3 = this.input.getInt32(this.inPos);\n\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len = v3;\n\t\t\t\tvar field;\n\t\t\t\tif(len == 0) {\n\t\t\t\t\tfield = null;\n\t\t\t\t} else {\n\t\t\t\t\t--len;\n\t\t\t\t\tvar s = this.input.getString(this.inPos,len);\n\t\t\t\t\tthis.inPos += len;\n\t\t\t\t\tfield = s;\n\t\t\t\t}\n\t\t\t\to[field] = this.getDynamic();\n\t\t\t}\n\t\t\treturn o;\n\t\tcase 6:\n\t\t\tvar v4 = this.input.b[this.inPos++];\n\t\t\tif(v4 == 128) {\n\t\t\t\tv4 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len1 = v4;\n\t\t\tif(len1 == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len1;\n\t\t\t\tvar s1 = this.input.getString(this.inPos,len1);\n\t\t\t\tthis.inPos += len1;\n\t\t\t\treturn s1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tvar _g2 = [];\n\t\t\tvar _g12 = 0;\n\t\t\tvar v5 = this.input.b[this.inPos++];\n\t\t\tif(v5 == 128) {\n\t\t\t\tv5 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar _g21 = v5;\n\t\t\twhile(_g12 < _g21) {\n\t\t\t\tvar i1 = _g12++;\n\t\t\t\t_g2.push(this.getDynamic());\n\t\t\t}\n\t\t\treturn _g2;\n\t\tcase 8:\n\t\t\tvar v6 = this.input.b[this.inPos++];\n\t\t\tif(v6 == 128) {\n\t\t\t\tv6 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len2 = v6;\n\t\t\tif(len2 == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len2;\n\t\t\t\tvar s2 = this.input.sub(this.inPos,len2);\n\t\t\t\tthis.inPos += len2;\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvar x = _g;\n\t\t\tthrow new js__$Boot_HaxeError("Invalid dynamic prefix " + x);\n\t\t}\n\t}\n\t,addDynamic: function(v) {\n\t\tif(v == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tvar _g = Type["typeof"](v);\n\t\tswitch(_g._hx_index) {\n\t\tcase 1:\n\t\t\tthis.out.addByte(3);\n\t\t\tvar v1 = v;\n\t\t\tif(v1 >= 0 && v1 < 128) {\n\t\t\t\tthis.out.addByte(v1);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tthis.out.addByte(4);\n\t\t\tthis.out.addFloat(v);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tthis.out.addByte(v ? 2 : 1);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tvar fields = Reflect.fields(v);\n\t\t\tthis.out.addByte(5);\n\t\t\tvar v2 = fields.length;\n\t\t\tif(v2 >= 0 && v2 < 128) {\n\t\t\t\tthis.out.addByte(v2);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v2);\n\t\t\t}\n\t\t\tvar _g1 = 0;\n\t\t\twhile(_g1 < fields.length) {\n\t\t\t\tvar f = fields[_g1];\n\t\t\t\t++_g1;\n\t\t\t\tif(f == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar b = haxe_io_Bytes.ofString(f);\n\t\t\t\t\tvar v3 = b.length + 1;\n\t\t\t\t\tif(v3 >= 0 && v3 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v3);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v3);\n\t\t\t\t\t}\n\t\t\t\t\tthis.out.add(b);\n\t\t\t\t}\n\t\t\t\tthis.addDynamic(Reflect.field(v,f));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tvar c = _g.c;\n\t\t\tswitch(c) {\n\t\t\tcase Array:\n\t\t\t\tthis.out.addByte(7);\n\t\t\t\tvar a = v;\n\t\t\t\tvar v4 = a.length;\n\t\t\t\tif(v4 >= 0 && v4 < 128) {\n\t\t\t\t\tthis.out.addByte(v4);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v4);\n\t\t\t\t}\n\t\t\t\tvar _g2 = 0;\n\t\t\t\twhile(_g2 < a.length) {\n\t\t\t\t\tvar v5 = a[_g2];\n\t\t\t\t\t++_g2;\n\t\t\t\t\tthis.addDynamic(v5);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase String:\n\t\t\t\tthis.out.addByte(6);\n\t\t\t\tvar s = v;\n\t\t\t\tif(s == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar b1 = haxe_io_Bytes.ofString(s);\n\t\t\t\t\tvar v6 = b1.length + 1;\n\t\t\t\t\tif(v6 >= 0 && v6 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v6);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v6);\n\t\t\t\t\t}\n\t\t\t\t\tthis.out.add(b1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase haxe_io_Bytes:\n\t\t\t\tthis.out.addByte(8);\n\t\t\t\tvar b2 = v;\n\t\t\t\tif(b2 == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar v7 = b2.length + 1;\n\t\t\t\t\tif(v7 >= 0 && v7 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v7);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v7);\n\t\t\t\t\t}\n\t\t\t\t\tthis.out.add(b2);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new js__$Boot_HaxeError("Unsupported dynamic " + Std.string(c));\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvar t = _g;\n\t\t\tthrow new js__$Boot_HaxeError("Unsupported dynamic " + Std.string(t));\n\t\t}\n\t}\n\t,addCLID: function(clid) {\n\t\tthis.out.addByte(clid >> 8);\n\t\tthis.out.addByte(clid & 255);\n\t}\n\t,getCLID: function() {\n\t\treturn this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];\n\t}\n\t,addStruct: function(s) {\n\t\tif(s == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tvar c = js_Boot.__instanceof(s,hxbit_Serializable) ? s : null;\n\t\tif(c != null) {\n\t\t\tthis.out.addByte(1);\n\t\t\tthis.addAnyRef(c);\n\t\t\treturn;\n\t\t}\n\t\tvar index = this.knownStructs.indexOf(s);\n\t\tif(index >= 0) {\n\t\t\tthis.out.addByte(2);\n\t\t\tif(index >= 0 && index < 128) {\n\t\t\t\tthis.out.addByte(index);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(index);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.knownStructs.push(s);\n\t\tthis.out.addByte(3);\n\t\tvar c1 = s == null ? null : js_Boot.getClass(s);\n\t\tif(c1 == null) {\n\t\t\tthrow new js__$Boot_HaxeError(Std.string(s) + " does not have a class ?");\n\t\t}\n\t\tvar s1 = c1.__name__;\n\t\tif(s1 == null) {\n\t\t\tthis.out.addByte(0);\n\t\t} else {\n\t\t\tvar b = haxe_io_Bytes.ofString(s1);\n\t\t\tvar v = b.length + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\tthis.out.addByte(v);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v);\n\t\t\t}\n\t\t\tthis.out.add(b);\n\t\t}\n\t\ts.customSerialize(this);\n\t\tthis.out.addByte(255);\n\t}\n\t,getStruct: function() {\n\t\tswitch(this.input.b[this.inPos++]) {\n\t\tcase 0:\n\t\t\treturn null;\n\t\tcase 1:\n\t\t\treturn this.getAnyRef();\n\t\tcase 2:\n\t\t\tvar tmp = this.knownStructs;\n\t\t\tvar v = this.input.b[this.inPos++];\n\t\t\tif(v == 128) {\n\t\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\treturn tmp[v];\n\t\tcase 3:\n\t\t\tvar v1 = this.input.b[this.inPos++];\n\t\t\tif(v1 == 128) {\n\t\t\t\tv1 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len = v1;\n\t\t\tvar cname;\n\t\t\tif(len == 0) {\n\t\t\t\tcname = null;\n\t\t\t} else {\n\t\t\t\t--len;\n\t\t\t\tvar s = this.input.getString(this.inPos,len);\n\t\t\t\tthis.inPos += len;\n\t\t\t\tcname = s;\n\t\t\t}\n\t\t\tvar cl = $hxClasses[cname];\n\t\t\tif(cl == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Missing struct class " + cname);\n\t\t\t}\n\t\t\tvar s1 = Object.create(cl.prototype);\n\t\t\tthis.knownStructs.push(s1);\n\t\t\ts1.customUnserialize(this);\n\t\t\tif(this.input.b[this.inPos++] != 255) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Invalid customUnserialize for " + Std.string(s1));\n\t\t\t}\n\t\t\treturn s1;\n\t\tdefault:\n\t\t\tthrow new js__$Boot_HaxeError("assert");\n\t\t}\n\t}\n\t,addObjRef: function(s) {\n\t\tvar v = s.__uid;\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t}\n\t,getObjRef: function() {\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\treturn v;\n\t}\n\t,addAnyRef: function(s) {\n\t\tif(s == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tif(this.remapObjs != null) {\n\t\t\tthis.remap(s);\n\t\t}\n\t\tthis.addObjRef(s);\n\t\tif(this.refs.h[s.__uid] != null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.refs.h[s.__uid] = s;\n\t\tvar index = s.getCLID();\n\t\tthis.usedClasses[index] = true;\n\t\tthis.out.addByte(index >> 8);\n\t\tthis.out.addByte(index & 255);\n\t\ts.serialize(this);\n\t}\n\t,addKnownRef: function(s) {\n\t\tif(s == null) {\n\t\t\tthis.out.addByte(0);\n\t\t\treturn;\n\t\t}\n\t\tif(this.remapObjs != null) {\n\t\t\tthis.remap(s);\n\t\t}\n\t\tthis.addObjRef(s);\n\t\tif(this.refs.h[s.__uid] != null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.refs.h[s.__uid] = s;\n\t\tvar index = s.getCLID();\n\t\tthis.usedClasses[index] = true;\n\t\tvar clid = hxbit_Serializer.CLIDS[index];\n\t\tif(clid != 0) {\n\t\t\tthis.out.addByte(clid >> 8);\n\t\t\tthis.out.addByte(clid & 255);\n\t\t}\n\t\ts.serialize(this);\n\t}\n\t,getAnyRef: function() {\n\t\tvar id = this.getObjRef();\n\t\tif(id == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif(this.refs.h[id] != null) {\n\t\t\treturn this.refs.h[id];\n\t\t}\n\t\tvar rid = id & 16777215;\n\t\tif(hxbit_Serializer.UID < rid) {\n\t\t\thxbit_Serializer.UID = rid;\n\t\t}\n\t\tvar clidx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];\n\t\tif(this.mapIndexes != null) {\n\t\t\tclidx = this.mapIndexes[clidx];\n\t\t}\n\t\tvar i = Object.create(hxbit_Serializer.CLASSES[clidx].prototype);\n\t\tif(this.newObjects != null) {\n\t\t\tthis.newObjects.push(i);\n\t\t}\n\t\ti.__uid = id;\n\t\ti.unserializeInit();\n\t\tthis.refs.h[id] = i;\n\t\tif(this.convert != null && this.convert[clidx] != null) {\n\t\t\tthis.convertRef(i,this.convert[clidx]);\n\t\t} else {\n\t\t\ti.unserialize(this);\n\t\t}\n\t\treturn i;\n\t}\n\t,getRef: function(c,clidx) {\n\t\tvar id = this.getObjRef();\n\t\tif(id == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif(this.refs.h[id] != null) {\n\t\t\treturn this.refs.h[id];\n\t\t}\n\t\tvar rid = id & 16777215;\n\t\tif(hxbit_Serializer.UID < rid) {\n\t\t\thxbit_Serializer.UID = rid;\n\t\t}\n\t\tif(hxbit_Serializer.CLIDS[clidx] != 0) {\n\t\t\tvar realIdx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];\n\t\t\tc = hxbit_Serializer.CL_BYID[realIdx];\n\t\t\tif(this.convert != null) {\n\t\t\t\tclidx = c.__clid;\n\t\t\t}\n\t\t}\n\t\tvar i = Object.create(c.prototype);\n\t\tif(this.newObjects != null) {\n\t\t\tthis.newObjects.push(i);\n\t\t}\n\t\ti.__uid = id;\n\t\ti.unserializeInit();\n\t\tthis.refs.h[id] = i;\n\t\tif(this.convert != null && this.convert[clidx] != null) {\n\t\t\tthis.convertRef(i,this.convert[clidx]);\n\t\t} else {\n\t\t\ti.unserialize(this);\n\t\t}\n\t\treturn i;\n\t}\n\t,getKnownRef: function(c) {\n\t\treturn this.getRef(c,c.__clid);\n\t}\n\t,beginSave: function() {\n\t\tthis.begin();\n\t\tthis.usedClasses = [];\n\t}\n\t,endSave: function(savePosition) {\n\t\tif(savePosition == null) {\n\t\t\tsavePosition = 0;\n\t\t}\n\t\tvar content = this.end();\n\t\tthis.begin();\n\t\tvar classes = [];\n\t\tvar schemas = [];\n\t\tvar sidx = hxbit_Serializer.CLASSES.indexOf(hxbit_Schema);\n\t\tvar _g = 0;\n\t\tvar _g1 = this.usedClasses.length;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\tif(!this.usedClasses[i] || i == sidx) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar c = hxbit_Serializer.CLASSES[i];\n\t\t\tvar schema = Object.create(c.prototype).getSerializeSchema();\n\t\t\tschemas.push(schema);\n\t\t\tclasses.push(i);\n\t\t\tthis.addKnownRef(schema);\n\t\t\tthis.refs.remove(schema.__uid);\n\t\t}\n\t\tvar schemaData = this.end();\n\t\tthis.begin();\n\t\tthis.out.addBytes(content,0,savePosition);\n\t\tvar b = haxe_io_Bytes.ofString("HXS");\n\t\tvar v = b.length + 1;\n\t\tif(v >= 0 && v < 128) {\n\t\t\tthis.out.addByte(v);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v);\n\t\t}\n\t\tthis.out.add(b);\n\t\tthis.out.addByte(1);\n\t\tvar _g2 = 0;\n\t\tvar _g3 = classes.length;\n\t\twhile(_g2 < _g3) {\n\t\t\tvar i1 = _g2++;\n\t\t\tvar index = classes[i1];\n\t\t\tvar c1 = hxbit_Serializer.CLASSES[index];\n\t\t\tvar s = c1.__name__;\n\t\t\tif(s == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar b1 = haxe_io_Bytes.ofString(s);\n\t\t\t\tvar v1 = b1.length + 1;\n\t\t\t\tif(v1 >= 0 && v1 < 128) {\n\t\t\t\t\tthis.out.addByte(v1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v1);\n\t\t\t\t}\n\t\t\t\tthis.out.add(b1);\n\t\t\t}\n\t\t\tthis.out.addByte(index >> 8);\n\t\t\tthis.out.addByte(index & 255);\n\t\t\tvar v2 = schemas[i1].get_checkSum();\n\t\t\tthis.out.addInt32(v2);\n\t\t}\n\t\tthis.out.addByte(0);\n\t\tvar v3 = schemaData.length;\n\t\tif(v3 >= 0 && v3 < 128) {\n\t\t\tthis.out.addByte(v3);\n\t\t} else {\n\t\t\tthis.out.addByte(128);\n\t\t\tthis.out.addInt32(v3);\n\t\t}\n\t\tthis.out.add(schemaData);\n\t\tthis.out.addBytes(content,savePosition,content.length - savePosition);\n\t\treturn this.end();\n\t}\n\t,beginLoad: function(bytes,position) {\n\t\tif(position == null) {\n\t\t\tposition = 0;\n\t\t}\n\t\tthis.setInput(bytes,position);\n\t\tvar classByName = new haxe_ds_StringMap();\n\t\tvar schemas = [];\n\t\tvar mapIndexes = [];\n\t\tvar indexes = [];\n\t\tvar needConvert = false;\n\t\tvar needReindex = false;\n\t\tvar _g = 0;\n\t\tvar _g1 = hxbit_Serializer.CLASSES.length;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\tvar c = hxbit_Serializer.CLASSES[i];\n\t\t\tvar key = c.__name__;\n\t\t\tif(__map_reserved[key] != null) {\n\t\t\t\tclassByName.setReserved(key,i);\n\t\t\t} else {\n\t\t\t\tclassByName.h[key] = i;\n\t\t\t}\n\t\t\tmapIndexes[i] = i;\n\t\t}\n\t\tvar v = this.input.b[this.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tvar tmp;\n\t\tif(len == 0) {\n\t\t\ttmp = null;\n\t\t} else {\n\t\t\t--len;\n\t\t\tvar s = this.input.getString(this.inPos,len);\n\t\t\tthis.inPos += len;\n\t\t\ttmp = s;\n\t\t}\n\t\tif(tmp != "HXS") {\n\t\t\tthrow new js__$Boot_HaxeError("Invalid HXS data");\n\t\t}\n\t\tvar version = this.input.b[this.inPos++];\n\t\tif(version != 1) {\n\t\t\tthrow new js__$Boot_HaxeError("Unsupported HXS version " + version);\n\t\t}\n\t\twhile(true) {\n\t\t\tvar v1 = this.input.b[this.inPos++];\n\t\t\tif(v1 == 128) {\n\t\t\t\tv1 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len1 = v1;\n\t\t\tvar clname;\n\t\t\tif(len1 == 0) {\n\t\t\t\tclname = null;\n\t\t\t} else {\n\t\t\t\t--len1;\n\t\t\t\tvar s1 = this.input.getString(this.inPos,len1);\n\t\t\t\tthis.inPos += len1;\n\t\t\t\tclname = s1;\n\t\t\t}\n\t\t\tif(clname == null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar index = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];\n\t\t\tvar v2 = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t\tvar crc = v2;\n\t\t\tvar ourClassIndex = __map_reserved[clname] != null ? classByName.getReserved(clname) : classByName.h[clname];\n\t\t\tif(ourClassIndex == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("Missing class " + clname + " found in HXS data");\n\t\t\t}\n\t\t\tvar ourSchema = Object.create(hxbit_Serializer.CLASSES[ourClassIndex].prototype).getSerializeSchema();\n\t\t\tif(ourSchema.get_checkSum() != crc) {\n\t\t\t\tneedConvert = true;\n\t\t\t\tschemas[index] = ourSchema;\n\t\t\t}\n\t\t\tif(index != ourClassIndex) {\n\t\t\t\tneedReindex = true;\n\t\t\t\tmapIndexes[index] = ourClassIndex;\n\t\t\t}\n\t\t\tindexes.push(index);\n\t\t}\n\t\tvar v3 = this.input.b[this.inPos++];\n\t\tif(v3 == 128) {\n\t\t\tv3 = this.input.getInt32(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t}\n\t\tvar schemaDataSize = v3;\n\t\tif(needConvert) {\n\t\t\tthis.convert = [];\n\t\t\tvar _g2 = 0;\n\t\t\twhile(_g2 < indexes.length) {\n\t\t\t\tvar index1 = indexes[_g2];\n\t\t\t\t++_g2;\n\t\t\t\tvar ourSchema1 = schemas[index1];\n\t\t\t\tvar c1 = hxbit_Schema;\n\t\t\t\tvar schema = this.getRef(c1,c1.__clid);\n\t\t\t\tthis.refs.remove(schema.__uid);\n\t\t\t\tif(ourSchema1 != null) {\n\t\t\t\t\tthis.convert[mapIndexes[index1]] = new hxbit_Convert(ourSchema1,schema);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.inPos += schemaDataSize;\n\t\t}\n\t\tif(needReindex) {\n\t\t\tthis.mapIndexes = mapIndexes;\n\t\t}\n\t}\n\t,endLoad: function() {\n\t\tthis.convert = null;\n\t\tthis.mapIndexes = null;\n\t\tthis.setInput(null,0);\n\t}\n\t,convertRef: function(i,c) {\n\t\tvar this1 = new Array(c.read.length);\n\t\tvar values = this1;\n\t\tvar writePos = 0;\n\t\tvar _g = 0;\n\t\tvar _g1 = c.read;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar r = _g1[_g];\n\t\t\t++_g;\n\t\t\tvalues[r.index] = this.readValue(r.from);\n\t\t}\n\t\tvar oldOut = this.out;\n\t\tthis.out = new haxe_io_BytesBuffer();\n\t\tvar _g2 = 0;\n\t\tvar _g3 = c.write;\n\t\twhile(_g2 < _g3.length) {\n\t\t\tvar w = _g3[_g2];\n\t\t\t++_g2;\n\t\t\tvar v;\n\t\t\tif(w.from == null) {\n\t\t\t\tv = w.defaultValue;\n\t\t\t} else {\n\t\t\t\tv = values[w.index];\n\t\t\t\tif(!w.same) {\n\t\t\t\t\tif(v == null) {\n\t\t\t\t\t\tv = w.defaultValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tv = this.convertValue(v,w.from,w.to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.writeValue(v,w.to);\n\t\t}\n\t\tvar bytes = this.out.getBytes();\n\t\tthis.out = oldOut;\n\t\tvar oldIn = this.input;\n\t\tvar oldPos = this.inPos;\n\t\tthis.setInput(bytes,0);\n\t\ti.unserialize(this);\n\t\tthis.setInput(oldIn,oldPos);\n\t}\n\t,isNullable: function(t) {\n\t\tswitch(t._hx_index) {\n\t\tcase 0:case 1:case 2:\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn true;\n\t\t}\n\t}\n\t,convertValue: function(v,from,to) {\n\t\tif(v == null && this.isNullable(to)) {\n\t\t\treturn null;\n\t\t}\n\t\tif(hxbit_Convert.sameType(from,to)) {\n\t\t\treturn v;\n\t\t}\n\t\tif(from._hx_index == 9 && to._hx_index == 9) {\n\t\t\tvar obj1 = from.fields;\n\t\t\tvar obj2 = to.fields;\n\t\t\tvar v2 = { };\n\t\t\tvar _g = 0;\n\t\t\twhile(_g < obj2.length) {\n\t\t\t\tvar f = obj2[_g];\n\t\t\t\t++_g;\n\t\t\t\tvar found = false;\n\t\t\t\tvar field = null;\n\t\t\t\tvar _g1 = 0;\n\t\t\t\twhile(_g1 < obj1.length) {\n\t\t\t\t\tvar f2 = obj1[_g1];\n\t\t\t\t\t++_g1;\n\t\t\t\t\tif(f2.name == f.name) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tfield = this.convertValue(Reflect.field(v,f2.name),f2.type,f.type);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found) {\n\t\t\t\t\tif(f.opt) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfield = hxbit_Convert.getDefault(f.type);\n\t\t\t\t} else if(field == null && f.opt) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tv2[f.name] = field;\n\t\t\t}\n\t\t\treturn v2;\n\t\t}\n\t\tthrow new js__$Boot_HaxeError("Cannot convert " + Std.string(v) + " from " + Std.string(from) + " to " + Std.string(to));\n\t}\n\t,readValue: function(t) {\n\t\tvar _gthis = this;\n\t\tswitch(t._hx_index) {\n\t\tcase 0:\n\t\t\tvar v = this.input.b[this.inPos++];\n\t\t\tif(v == 128) {\n\t\t\t\tv = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\treturn v;\n\t\tcase 1:\n\t\t\tvar v1 = this.input.getFloat(this.inPos);\n\t\t\tthis.inPos += 4;\n\t\t\treturn v1;\n\t\tcase 2:\n\t\t\treturn this.input.b[this.inPos++] != 0;\n\t\tcase 3:\n\t\t\tvar v2 = this.input.b[this.inPos++];\n\t\t\tif(v2 == 128) {\n\t\t\t\tv2 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len = v2;\n\t\t\tif(len == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len;\n\t\t\t\tvar s = this.input.getString(this.inPos,len);\n\t\t\t\tthis.inPos += len;\n\t\t\t\treturn s;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tvar v3 = this.input.b[this.inPos++];\n\t\t\tif(v3 == 128) {\n\t\t\t\tv3 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len1 = v3;\n\t\t\tif(len1 == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len1;\n\t\t\t\tvar s1 = this.input.sub(this.inPos,len1);\n\t\t\t\tthis.inPos += len1;\n\t\t\t\treturn s1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tvar name = t.name;\n\t\t\tvar c = $hxClasses[name];\n\t\t\treturn this.getRef(c,c.__clid);\n\t\tcase 6:\n\t\t\tvar name1 = t.name;\n\t\t\tvar name2 = "hxbit.enumSer." + name1.split(".").join("_");\n\t\t\tvar ser = $hxClasses[name2];\n\t\t\tif(ser == null) {\n\t\t\t\tvar e = $hxEnums[name1];\n\t\t\t\tvar tmp;\n\t\t\t\tif(e != null) {\n\t\t\t\t\tvar o = haxe_rtti_Meta.getType(e);\n\t\t\t\t\ttmp = Object.prototype.hasOwnProperty.call(o,"skipSerialize");\n\t\t\t\t} else {\n\t\t\t\t\ttmp = false;\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tvar v4 = this.input.b[this.inPos++];\n\t\t\t\t\tif(v4 == 128) {\n\t\t\t\t\t\tv4 = this.input.getInt32(this.inPos);\n\t\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tthrow new js__$Boot_HaxeError("No enum unserializer found for " + name1);\n\t\t\t}\n\t\t\treturn ser.doUnserialize(this);\n\t\tcase 7:\n\t\t\tvar v5 = t.v;\n\t\t\tvar k = t.k;\n\t\t\tswitch(k._hx_index) {\n\t\t\tcase 0:\n\t\t\t\tvar v6 = this.input.b[this.inPos++];\n\t\t\t\tif(v6 == 128) {\n\t\t\t\t\tv6 = this.input.getInt32(this.inPos);\n\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len2 = v6;\n\t\t\t\tvar tmp1;\n\t\t\t\tif(len2 == 0) {\n\t\t\t\t\ttmp1 = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar m = new haxe_ds_IntMap();\n\t\t\t\t\twhile(--len2 > 0) {\n\t\t\t\t\t\tvar k1 = _gthis.readValue(k);\n\t\t\t\t\t\tvar v7 = _gthis.readValue(v5);\n\t\t\t\t\t\tm.h[k1] = v7;\n\t\t\t\t\t}\n\t\t\t\t\ttmp1 = m;\n\t\t\t\t}\n\t\t\t\treturn tmp1;\n\t\t\tcase 3:\n\t\t\t\tvar v8 = this.input.b[this.inPos++];\n\t\t\t\tif(v8 == 128) {\n\t\t\t\t\tv8 = this.input.getInt32(this.inPos);\n\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len3 = v8;\n\t\t\t\tvar tmp2;\n\t\t\t\tif(len3 == 0) {\n\t\t\t\t\ttmp2 = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar m1 = new haxe_ds_StringMap();\n\t\t\t\t\twhile(--len3 > 0) {\n\t\t\t\t\t\tvar k2 = _gthis.readValue(k);\n\t\t\t\t\t\tvar v9 = _gthis.readValue(v5);\n\t\t\t\t\t\tif(__map_reserved[k2] != null) {\n\t\t\t\t\t\t\tm1.setReserved(k2,v9);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tm1.h[k2] = v9;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttmp2 = m1;\n\t\t\t\t}\n\t\t\t\treturn tmp2;\n\t\t\tcase 6:\n\t\t\t\tvar v10 = this.input.b[this.inPos++];\n\t\t\t\tif(v10 == 128) {\n\t\t\t\t\tv10 = this.input.getInt32(this.inPos);\n\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len4 = v10;\n\t\t\t\tif(len4 == 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar m2 = new haxe_ds_EnumValueMap();\n\t\t\t\twhile(--len4 > 0) {\n\t\t\t\t\tvar k3 = this.readValue(k);\n\t\t\t\t\tvar v11 = this.readValue(v5);\n\t\t\t\t\tm2.set(k3,v11);\n\t\t\t\t}\n\t\t\t\treturn m2;\n\t\t\tdefault:\n\t\t\t\tvar v12 = this.input.b[this.inPos++];\n\t\t\t\tif(v12 == 128) {\n\t\t\t\t\tv12 = this.input.getInt32(this.inPos);\n\t\t\t\t\tthis.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len5 = v12;\n\t\t\t\tvar tmp3;\n\t\t\t\tif(len5 == 0) {\n\t\t\t\t\ttmp3 = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar m3 = new haxe_ds_ObjectMap();\n\t\t\t\t\twhile(--len5 > 0) {\n\t\t\t\t\t\tvar k4 = _gthis.readValue(k);\n\t\t\t\t\t\tvar v13 = _gthis.readValue(v5);\n\t\t\t\t\t\tm3.set(k4,v13);\n\t\t\t\t\t}\n\t\t\t\t\ttmp3 = m3;\n\t\t\t\t}\n\t\t\t\treturn tmp3;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tvar t1 = t.k;\n\t\t\tvar v14 = this.input.b[this.inPos++];\n\t\t\tif(v14 == 128) {\n\t\t\t\tv14 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len6 = v14;\n\t\t\tif(len6 == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len6;\n\t\t\t\tvar a = [];\n\t\t\t\tvar _g = 0;\n\t\t\t\tvar _g1 = len6;\n\t\t\t\twhile(_g < _g1) {\n\t\t\t\t\tvar i = _g++;\n\t\t\t\t\ta[i] = _gthis.readValue(t1);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tvar fields = t.fields;\n\t\t\tvar v15 = this.input.b[this.inPos++];\n\t\t\tif(v15 == 128) {\n\t\t\t\tv15 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar bits = v15;\n\t\t\tif(bits == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar o1 = { };\n\t\t\t--bits;\n\t\t\tvar _g2 = [];\n\t\t\tvar _g11 = 0;\n\t\t\twhile(_g11 < fields.length) {\n\t\t\t\tvar f = fields[_g11];\n\t\t\t\t++_g11;\n\t\t\t\tif(this.isNullable(f.type)) {\n\t\t\t\t\t_g2.push(f);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar nullables = _g2;\n\t\t\tvar _g21 = 0;\n\t\t\twhile(_g21 < fields.length) {\n\t\t\t\tvar f1 = fields[_g21];\n\t\t\t\t++_g21;\n\t\t\t\tvar nidx = nullables.indexOf(f1);\n\t\t\t\tif(nidx >= 0 && (bits & 1 << nidx) == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\to1[f1.name] = this.readValue(f1.type);\n\t\t\t}\n\t\t\treturn o1;\n\t\tcase 10:\n\t\t\tvar t2 = t.k;\n\t\t\treturn this.readValue(t2);\n\t\tcase 11:\n\t\t\tvar t3 = t.k;\n\t\t\tvar v16 = this.input.b[this.inPos++];\n\t\t\tif(v16 == 128) {\n\t\t\t\tv16 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\tvar len7 = v16;\n\t\t\tif(len7 == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\t--len7;\n\t\t\t\tvar this1 = new Array(len7);\n\t\t\t\tvar a1 = this1;\n\t\t\t\tvar _g3 = 0;\n\t\t\t\tvar _g12 = len7;\n\t\t\t\twhile(_g3 < _g12) {\n\t\t\t\t\tvar i1 = _g3++;\n\t\t\t\t\ta1[i1] = _gthis.readValue(t3);\n\t\t\t\t}\n\t\t\t\treturn a1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\tvar t4 = t.t;\n\t\t\tif(this.input.b[this.inPos++] == 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn this.readValue(t4);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 13:\n\t\t\tthrow new js__$Boot_HaxeError("assert");\n\t\tcase 14:\n\t\t\treturn this.getDynamic();\n\t\tcase 15:\n\t\t\tvar v17 = this.input.getInt64(this.inPos);\n\t\t\tthis.inPos += 8;\n\t\t\treturn v17;\n\t\tcase 16:\n\t\t\tvar v18 = this.input.b[this.inPos++];\n\t\t\tif(v18 == 128) {\n\t\t\t\tv18 = this.input.getInt32(this.inPos);\n\t\t\t\tthis.inPos += 4;\n\t\t\t}\n\t\t\treturn v18;\n\t\tcase 17:\n\t\t\treturn this.getStruct();\n\t\t}\n\t}\n\t,writeValue: function(v,t) {\n\t\tvar _gthis = this;\n\t\tswitch(t._hx_index) {\n\t\tcase 0:\n\t\t\tvar v1 = v;\n\t\t\tif(v1 >= 0 && v1 < 128) {\n\t\t\t\tthis.out.addByte(v1);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tthis.out.addFloat(v);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tthis.out.addByte(v ? 1 : 0);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tvar s = v;\n\t\t\tif(s == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar b = haxe_io_Bytes.ofString(s);\n\t\t\t\tvar v2 = b.length + 1;\n\t\t\t\tif(v2 >= 0 && v2 < 128) {\n\t\t\t\t\tthis.out.addByte(v2);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v2);\n\t\t\t\t}\n\t\t\t\tthis.out.add(b);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tvar b1 = v;\n\t\t\tif(b1 == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar v3 = b1.length + 1;\n\t\t\t\tif(v3 >= 0 && v3 < 128) {\n\t\t\t\t\tthis.out.addByte(v3);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v3);\n\t\t\t\t}\n\t\t\t\tthis.out.add(b1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tthis.addKnownRef(v);\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tvar name = t.name;\n\t\t\tvar ser = "hxbit.enumSer." + name.split(".").join("_");\n\t\t\tif(ser == null) {\n\t\t\t\tthrow new js__$Boot_HaxeError("No enum unserializer found for " + name);\n\t\t\t}\n\t\t\t$hxClasses[ser].doSerialize(this,v);\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tvar t1 = t.v;\n\t\t\tvar k = t.k;\n\t\t\tswitch(k._hx_index) {\n\t\t\tcase 0:\n\t\t\t\tvar v4 = v;\n\t\t\t\tif(v4 == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar _e = v4;\n\t\t\t\t\tvar keys = Lambda.array({ iterator : function() {\n\t\t\t\t\t\treturn _e.keys();\n\t\t\t\t\t}});\n\t\t\t\t\tvar v5 = keys.length + 1;\n\t\t\t\t\tif(v5 >= 0 && v5 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v5);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v5);\n\t\t\t\t\t}\n\t\t\t\t\tvar _g = 0;\n\t\t\t\t\twhile(_g < keys.length) {\n\t\t\t\t\t\tvar k1 = keys[_g];\n\t\t\t\t\t\t++_g;\n\t\t\t\t\t\t_gthis.writeValue(k1,k);\n\t\t\t\t\t\t_gthis.writeValue(v4.h[k1],t1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvar v6 = v;\n\t\t\t\tif(v6 == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar _e1 = v6;\n\t\t\t\t\tvar keys1 = Lambda.array({ iterator : function() {\n\t\t\t\t\t\treturn _e1.keys();\n\t\t\t\t\t}});\n\t\t\t\t\tvar v7 = keys1.length + 1;\n\t\t\t\t\tif(v7 >= 0 && v7 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v7);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v7);\n\t\t\t\t\t}\n\t\t\t\t\tvar _g1 = 0;\n\t\t\t\t\twhile(_g1 < keys1.length) {\n\t\t\t\t\t\tvar k2 = keys1[_g1];\n\t\t\t\t\t\t++_g1;\n\t\t\t\t\t\t_gthis.writeValue(k2,k);\n\t\t\t\t\t\t_gthis.writeValue(__map_reserved[k2] != null ? v6.getReserved(k2) : v6.h[k2],t1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tvar v8 = v;\n\t\t\t\tif(v8 == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar keys2 = Lambda.array({ iterator : $bind(v8,v8.keys)});\n\t\t\t\tvar v9 = keys2.length + 1;\n\t\t\t\tif(v9 >= 0 && v9 < 128) {\n\t\t\t\t\tthis.out.addByte(v9);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v9);\n\t\t\t\t}\n\t\t\t\tvar _g2 = 0;\n\t\t\t\twhile(_g2 < keys2.length) {\n\t\t\t\t\tvar vk = keys2[_g2];\n\t\t\t\t\t++_g2;\n\t\t\t\t\tthis.writeValue(vk,k);\n\t\t\t\t\tthis.writeValue(v8.get(vk),t1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvar v10 = v;\n\t\t\t\tif(v10 == null) {\n\t\t\t\t\tthis.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar _e2 = v10;\n\t\t\t\t\tvar keys3 = Lambda.array({ iterator : function() {\n\t\t\t\t\t\treturn _e2.keys();\n\t\t\t\t\t}});\n\t\t\t\t\tvar v11 = keys3.length + 1;\n\t\t\t\t\tif(v11 >= 0 && v11 < 128) {\n\t\t\t\t\t\tthis.out.addByte(v11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\t\tthis.out.addInt32(v11);\n\t\t\t\t\t}\n\t\t\t\t\tvar _g3 = 0;\n\t\t\t\t\twhile(_g3 < keys3.length) {\n\t\t\t\t\t\tvar k3 = keys3[_g3];\n\t\t\t\t\t\t++_g3;\n\t\t\t\t\t\t_gthis.writeValue(k3,k);\n\t\t\t\t\t\t_gthis.writeValue(v10.h[k3.__id__],t1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tvar t2 = t.k;\n\t\t\tvar a = v;\n\t\t\tif(a == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar v12 = a.length + 1;\n\t\t\t\tif(v12 >= 0 && v12 < 128) {\n\t\t\t\t\tthis.out.addByte(v12);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v12);\n\t\t\t\t}\n\t\t\t\tvar _g4 = 0;\n\t\t\t\twhile(_g4 < a.length) {\n\t\t\t\t\tvar v13 = a[_g4];\n\t\t\t\t\t++_g4;\n\t\t\t\t\t_gthis.writeValue(v13,t2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tvar fields = t.fields;\n\t\t\tif(v == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar fbits = 0;\n\t\t\t\tvar _g5 = [];\n\t\t\t\tvar _g11 = 0;\n\t\t\t\twhile(_g11 < fields.length) {\n\t\t\t\t\tvar f = fields[_g11];\n\t\t\t\t\t++_g11;\n\t\t\t\t\tif(this.isNullable(f.type)) {\n\t\t\t\t\t\t_g5.push(f);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar nullables = _g5;\n\t\t\t\tvar _g21 = 0;\n\t\t\t\tvar _g31 = nullables.length;\n\t\t\t\twhile(_g21 < _g31) {\n\t\t\t\t\tvar i = _g21++;\n\t\t\t\t\tif(Reflect.field(v,nullables[i].name) != null) {\n\t\t\t\t\t\tfbits |= 1 << i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar v14 = fbits + 1;\n\t\t\t\tif(v14 >= 0 && v14 < 128) {\n\t\t\t\t\tthis.out.addByte(v14);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v14);\n\t\t\t\t}\n\t\t\t\tvar _g41 = 0;\n\t\t\t\twhile(_g41 < fields.length) {\n\t\t\t\t\tvar f1 = fields[_g41];\n\t\t\t\t\t++_g41;\n\t\t\t\t\tvar nidx = nullables.indexOf(f1);\n\t\t\t\t\tif(nidx >= 0 && (fbits & 1 << nidx) == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis.writeValue(Reflect.field(v,f1.name),f1.type);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\tvar t3 = t.k;\n\t\t\tthis.writeValue(v,t3);\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\tvar t4 = t.k;\n\t\t\tvar a1 = v;\n\t\t\tif(a1 == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar v15 = a1.length + 1;\n\t\t\t\tif(v15 >= 0 && v15 < 128) {\n\t\t\t\t\tthis.out.addByte(v15);\n\t\t\t\t} else {\n\t\t\t\t\tthis.out.addByte(128);\n\t\t\t\t\tthis.out.addInt32(v15);\n\t\t\t\t}\n\t\t\t\tvar _g6 = 0;\n\t\t\t\twhile(_g6 < a1.length) {\n\t\t\t\t\tvar v16 = a1[_g6];\n\t\t\t\t\t++_g6;\n\t\t\t\t\t_gthis.writeValue(v16,t4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\tvar t5 = t.t;\n\t\t\tif(v == null) {\n\t\t\t\tthis.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(1);\n\t\t\t\tthis.writeValue(v,t5);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 13:\n\t\t\tthrow new js__$Boot_HaxeError("assert");\n\t\tcase 14:\n\t\t\tthis.addDynamic(v);\n\t\t\tbreak;\n\t\tcase 15:\n\t\t\tthis.out.addInt64(v);\n\t\t\tbreak;\n\t\tcase 16:\n\t\t\tvar v17 = v;\n\t\t\tif(v17 >= 0 && v17 < 128) {\n\t\t\t\tthis.out.addByte(v17);\n\t\t\t} else {\n\t\t\t\tthis.out.addByte(128);\n\t\t\t\tthis.out.addInt32(v17);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 17:\n\t\t\tthis.addStruct(v);\n\t\t\tbreak;\n\t\t}\n\t}\n\t,__class__: hxbit_Serializer\n};\nvar hxbit_Schema = function() {\n\tthis.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;\n\tthis.fieldsNames = [];\n\tthis.fieldsTypes = [];\n};\n$hxClasses["hxbit.Schema"] = hxbit_Schema;\nhxbit_Schema.__name__ = "hxbit.Schema";\nhxbit_Schema.__interfaces__ = [hxbit_Serializable];\nhxbit_Schema.prototype = {\n\tisFinal: null\n\t,fieldsNames: null\n\t,fieldsTypes: null\n\t,get_checkSum: function() {\n\t\tvar s = new hxbit_Serializer();\n\t\ts.begin();\n\t\tvar old = this.__uid;\n\t\tthis.__uid = 0;\n\t\ts.addKnownRef(this);\n\t\tthis.__uid = old;\n\t\tvar bytes = s.end();\n\t\treturn haxe_crypto_Crc32.make(bytes);\n\t}\n\t,__uid: null\n\t,getCLID: function() {\n\t\treturn hxbit_Schema.__clid;\n\t}\n\t,serialize: function(__ctx) {\n\t\t__ctx.out.addByte(this.isFinal ? 1 : 0);\n\t\tvar a = this.fieldsNames;\n\t\tif(a == null) {\n\t\t\t__ctx.out.addByte(0);\n\t\t} else {\n\t\t\tvar v = a.length + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\t__ctx.out.addByte(v);\n\t\t\t} else {\n\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t__ctx.out.addInt32(v);\n\t\t\t}\n\t\t\tvar _g = 0;\n\t\t\twhile(_g < a.length) {\n\t\t\t\tvar v1 = a[_g];\n\t\t\t\t++_g;\n\t\t\t\tif(v1 == null) {\n\t\t\t\t\t__ctx.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar b = haxe_io_Bytes.ofString(v1);\n\t\t\t\t\tvar v2 = b.length + 1;\n\t\t\t\t\tif(v2 >= 0 && v2 < 128) {\n\t\t\t\t\t\t__ctx.out.addByte(v2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t\t\t__ctx.out.addInt32(v2);\n\t\t\t\t\t}\n\t\t\t\t\t__ctx.out.add(b);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar a1 = this.fieldsTypes;\n\t\tif(a1 == null) {\n\t\t\t__ctx.out.addByte(0);\n\t\t} else {\n\t\t\tvar v3 = a1.length + 1;\n\t\t\tif(v3 >= 0 && v3 < 128) {\n\t\t\t\t__ctx.out.addByte(v3);\n\t\t\t} else {\n\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t__ctx.out.addInt32(v3);\n\t\t\t}\n\t\t\tvar _g1 = 0;\n\t\t\twhile(_g1 < a1.length) {\n\t\t\t\tvar v4 = a1[_g1];\n\t\t\t\t++_g1;\n\t\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(__ctx,v4);\n\t\t\t}\n\t\t}\n\t}\n\t,getSerializeSchema: function() {\n\t\tvar schema = new hxbit_Schema();\n\t\tschema.fieldsNames.push("isFinal");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);\n\t\tschema.fieldsNames.push("fieldsNames");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));\n\t\tschema.fieldsNames.push("fieldsTypes");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")));\n\t\tschema.isFinal = hxbit_Serializer.isClassFinal(hxbit_Schema.__clid);\n\t\treturn schema;\n\t}\n\t,unserializeInit: function() {\n\t}\n\t,unserialize: function(__ctx) {\n\t\tthis.isFinal = __ctx.input.b[__ctx.inPos++] != 0;\n\t\tvar e0;\n\t\tvar v = __ctx.input.b[__ctx.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t__ctx.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tvar tmp;\n\t\tif(len == 0) {\n\t\t\ttmp = null;\n\t\t} else {\n\t\t\t--len;\n\t\t\tvar a = [];\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = len;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tvar i = _g++;\n\t\t\t\tvar v1 = __ctx.input.b[__ctx.inPos++];\n\t\t\t\tif(v1 == 128) {\n\t\t\t\t\tv1 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t\t\t__ctx.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len1 = v1;\n\t\t\t\tif(len1 == 0) {\n\t\t\t\t\te0 = null;\n\t\t\t\t} else {\n\t\t\t\t\t--len1;\n\t\t\t\t\tvar s = __ctx.input.getString(__ctx.inPos,len1);\n\t\t\t\t\t__ctx.inPos += len1;\n\t\t\t\t\te0 = s;\n\t\t\t\t}\n\t\t\t\ta[i] = e0;\n\t\t\t}\n\t\t\ttmp = a;\n\t\t}\n\t\tthis.fieldsNames = tmp;\n\t\tvar e01;\n\t\tvar v2 = __ctx.input.b[__ctx.inPos++];\n\t\tif(v2 == 128) {\n\t\t\tv2 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t__ctx.inPos += 4;\n\t\t}\n\t\tvar len2 = v2;\n\t\tvar tmp1;\n\t\tif(len2 == 0) {\n\t\t\ttmp1 = null;\n\t\t} else {\n\t\t\t--len2;\n\t\t\tvar a1 = [];\n\t\t\tvar _g2 = 0;\n\t\t\tvar _g11 = len2;\n\t\t\twhile(_g2 < _g11) {\n\t\t\t\tvar i1 = _g2++;\n\t\t\t\tvar __e = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(__ctx);\n\t\t\t\te01 = __e;\n\t\t\t\ta1[i1] = e01;\n\t\t\t}\n\t\t\ttmp1 = a1;\n\t\t}\n\t\tthis.fieldsTypes = tmp1;\n\t}\n\t,__class__: hxbit_Schema\n};\nvar hxbit_enumSer_hxbit_$PropTypeDesc = function() { };\n$hxClasses["hxbit.enumSer.hxbit_PropTypeDesc"] = hxbit_enumSer_hxbit_$PropTypeDesc;\nhxbit_enumSer_hxbit_$PropTypeDesc.__name__ = "hxbit.enumSer.hxbit_PropTypeDesc";\nhxbit_enumSer_hxbit_$PropTypeDesc.doSerialize = function(ctx,v) {\n\tif(v == null) {\n\t\tctx.out.addByte(0);\n\t} else {\n\t\tswitch(v._hx_index) {\n\t\tcase 0:\n\t\t\tctx.out.addByte(1);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tctx.out.addByte(2);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tctx.out.addByte(3);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tctx.out.addByte(4);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tctx.out.addByte(5);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tvar name = v.name;\n\t\t\tctx.out.addByte(6);\n\t\t\tif(name == null) {\n\t\t\t\tctx.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar b = haxe_io_Bytes.ofString(name);\n\t\t\t\tvar v1 = b.length + 1;\n\t\t\t\tif(v1 >= 0 && v1 < 128) {\n\t\t\t\t\tctx.out.addByte(v1);\n\t\t\t\t} else {\n\t\t\t\t\tctx.out.addByte(128);\n\t\t\t\t\tctx.out.addInt32(v1);\n\t\t\t\t}\n\t\t\t\tctx.out.add(b);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tvar name1 = v.name;\n\t\t\tctx.out.addByte(7);\n\t\t\tif(name1 == null) {\n\t\t\t\tctx.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar b1 = haxe_io_Bytes.ofString(name1);\n\t\t\t\tvar v2 = b1.length + 1;\n\t\t\t\tif(v2 >= 0 && v2 < 128) {\n\t\t\t\t\tctx.out.addByte(v2);\n\t\t\t\t} else {\n\t\t\t\t\tctx.out.addByte(128);\n\t\t\t\t\tctx.out.addInt32(v2);\n\t\t\t\t}\n\t\t\t\tctx.out.add(b1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tvar v3 = v.v;\n\t\t\tvar k = v.k;\n\t\t\tctx.out.addByte(8);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,k);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,v3);\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tvar k1 = v.k;\n\t\t\tctx.out.addByte(9);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,k1);\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tvar fields = v.fields;\n\t\t\tctx.out.addByte(10);\n\t\t\tif(fields == null) {\n\t\t\t\tctx.out.addByte(0);\n\t\t\t} else {\n\t\t\t\tvar v4 = fields.length + 1;\n\t\t\t\tif(v4 >= 0 && v4 < 128) {\n\t\t\t\t\tctx.out.addByte(v4);\n\t\t\t\t} else {\n\t\t\t\t\tctx.out.addByte(128);\n\t\t\t\t\tctx.out.addInt32(v4);\n\t\t\t\t}\n\t\t\t\tvar _g = 0;\n\t\t\t\twhile(_g < fields.length) {\n\t\t\t\t\tvar v5 = fields[_g];\n\t\t\t\t\t++_g;\n\t\t\t\t\tvar v6 = v5;\n\t\t\t\t\tif(v6 == null) {\n\t\t\t\t\t\tctx.out.addByte(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar fbits = 0;\n\t\t\t\t\t\tif(v6.name != null) {\n\t\t\t\t\t\t\tfbits |= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(v6.type != null) {\n\t\t\t\t\t\t\tfbits |= 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar v7 = fbits + 1;\n\t\t\t\t\t\tif(v7 >= 0 && v7 < 128) {\n\t\t\t\t\t\t\tctx.out.addByte(v7);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.out.addByte(128);\n\t\t\t\t\t\t\tctx.out.addInt32(v7);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((fbits & 1) != 0) {\n\t\t\t\t\t\t\tvar s = v6.name;\n\t\t\t\t\t\t\tif(s == null) {\n\t\t\t\t\t\t\t\tctx.out.addByte(0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar b2 = haxe_io_Bytes.ofString(s);\n\t\t\t\t\t\t\t\tvar v8 = b2.length + 1;\n\t\t\t\t\t\t\t\tif(v8 >= 0 && v8 < 128) {\n\t\t\t\t\t\t\t\t\tctx.out.addByte(v8);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.out.addByte(128);\n\t\t\t\t\t\t\t\t\tctx.out.addInt32(v8);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.out.add(b2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.out.addByte(v6.opt ? 1 : 0);\n\t\t\t\t\t\tif((fbits & 2) != 0) {\n\t\t\t\t\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,v6.type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\tvar k2 = v.k;\n\t\t\tctx.out.addByte(11);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,k2);\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\tvar k3 = v.k;\n\t\t\tctx.out.addByte(12);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,k3);\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\tvar t = v.t;\n\t\t\tctx.out.addByte(13);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,t);\n\t\t\tbreak;\n\t\tcase 13:\n\t\t\tctx.out.addByte(14);\n\t\t\tbreak;\n\t\tcase 14:\n\t\t\tctx.out.addByte(15);\n\t\t\tbreak;\n\t\tcase 15:\n\t\t\tctx.out.addByte(16);\n\t\t\tbreak;\n\t\tcase 16:\n\t\t\tvar t1 = v.t;\n\t\t\tctx.out.addByte(17);\n\t\t\thxbit_enumSer_hxbit_$PropTypeDesc.doSerialize(ctx,t1);\n\t\t\tbreak;\n\t\tcase 17:\n\t\t\tctx.out.addByte(18);\n\t\t\tbreak;\n\t\t}\n\t}\n};\nhxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize = function(ctx) {\n\tvar b = ctx.input.b[ctx.inPos++];\n\tif(b == 0) {\n\t\treturn null;\n\t}\n\tswitch(b) {\n\tcase 1:\n\t\treturn hxbit_PropTypeDesc.PInt;\n\tcase 2:\n\t\treturn hxbit_PropTypeDesc.PFloat;\n\tcase 3:\n\t\treturn hxbit_PropTypeDesc.PBool;\n\tcase 4:\n\t\treturn hxbit_PropTypeDesc.PString;\n\tcase 5:\n\t\treturn hxbit_PropTypeDesc.PBytes;\n\tcase 6:\n\t\tvar _name;\n\t\tvar v = ctx.input.b[ctx.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = ctx.input.getInt32(ctx.inPos);\n\t\t\tctx.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tif(len == 0) {\n\t\t\t_name = null;\n\t\t} else {\n\t\t\t--len;\n\t\t\tvar s = ctx.input.getString(ctx.inPos,len);\n\t\t\tctx.inPos += len;\n\t\t\t_name = s;\n\t\t}\n\t\treturn hxbit_PropTypeDesc.PSerializable(_name);\n\tcase 7:\n\t\tvar _name1;\n\t\tvar v1 = ctx.input.b[ctx.inPos++];\n\t\tif(v1 == 128) {\n\t\t\tv1 = ctx.input.getInt32(ctx.inPos);\n\t\t\tctx.inPos += 4;\n\t\t}\n\t\tvar len1 = v1;\n\t\tif(len1 == 0) {\n\t\t\t_name1 = null;\n\t\t} else {\n\t\t\t--len1;\n\t\t\tvar s1 = ctx.input.getString(ctx.inPos,len1);\n\t\t\tctx.inPos += len1;\n\t\t\t_name1 = s1;\n\t\t}\n\t\treturn hxbit_PropTypeDesc.PEnum(_name1);\n\tcase 8:\n\t\tvar _k;\n\t\tvar __e = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_k = __e;\n\t\tvar _v;\n\t\tvar __e1 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_v = __e1;\n\t\treturn hxbit_PropTypeDesc.PMap(_k,_v);\n\tcase 9:\n\t\tvar _k1;\n\t\tvar __e2 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_k1 = __e2;\n\t\treturn hxbit_PropTypeDesc.PArray(_k1);\n\tcase 10:\n\t\tvar _fields;\n\t\tvar e0;\n\t\tvar v2 = ctx.input.b[ctx.inPos++];\n\t\tif(v2 == 128) {\n\t\t\tv2 = ctx.input.getInt32(ctx.inPos);\n\t\t\tctx.inPos += 4;\n\t\t}\n\t\tvar len2 = v2;\n\t\tif(len2 == 0) {\n\t\t\t_fields = null;\n\t\t} else {\n\t\t\t--len2;\n\t\t\tvar a = [];\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = len2;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tvar i = _g++;\n\t\t\t\tvar v3 = ctx.input.b[ctx.inPos++];\n\t\t\t\tif(v3 == 128) {\n\t\t\t\t\tv3 = ctx.input.getInt32(ctx.inPos);\n\t\t\t\t\tctx.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar fbits = v3;\n\t\t\t\tif(fbits == 0) {\n\t\t\t\t\te0 = null;\n\t\t\t\t} else {\n\t\t\t\t\t--fbits;\n\t\t\t\t\tvar type = null;\n\t\t\t\t\tvar name = null;\n\t\t\t\t\tif((fbits & 1) != 0) {\n\t\t\t\t\t\tvar v4 = ctx.input.b[ctx.inPos++];\n\t\t\t\t\t\tif(v4 == 128) {\n\t\t\t\t\t\t\tv4 = ctx.input.getInt32(ctx.inPos);\n\t\t\t\t\t\t\tctx.inPos += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar len3 = v4;\n\t\t\t\t\t\tif(len3 == 0) {\n\t\t\t\t\t\t\tname = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t--len3;\n\t\t\t\t\t\t\tvar s2 = ctx.input.getString(ctx.inPos,len3);\n\t\t\t\t\t\t\tctx.inPos += len3;\n\t\t\t\t\t\t\tname = s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar opt = ctx.input.b[ctx.inPos++] != 0;\n\t\t\t\t\tif((fbits & 2) != 0) {\n\t\t\t\t\t\tvar __e3 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t\t\t\t\ttype = __e3;\n\t\t\t\t\t}\n\t\t\t\t\te0 = { name : name, opt : opt, type : type};\n\t\t\t\t}\n\t\t\t\ta[i] = e0;\n\t\t\t}\n\t\t\t_fields = a;\n\t\t}\n\t\treturn hxbit_PropTypeDesc.PObj(_fields);\n\tcase 11:\n\t\tvar _k2;\n\t\tvar __e4 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_k2 = __e4;\n\t\treturn hxbit_PropTypeDesc.PAlias(_k2);\n\tcase 12:\n\t\tvar _k3;\n\t\tvar __e5 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_k3 = __e5;\n\t\treturn hxbit_PropTypeDesc.PVector(_k3);\n\tcase 13:\n\t\tvar _t;\n\t\tvar __e6 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_t = __e6;\n\t\treturn hxbit_PropTypeDesc.PNull(_t);\n\tcase 14:\n\t\treturn hxbit_PropTypeDesc.PUnknown;\n\tcase 15:\n\t\treturn hxbit_PropTypeDesc.PDynamic;\n\tcase 16:\n\t\treturn hxbit_PropTypeDesc.PInt64;\n\tcase 17:\n\t\tvar _t1;\n\t\tvar __e7 = hxbit_enumSer_hxbit_$PropTypeDesc.doUnserialize(ctx);\n\t\t_t1 = __e7;\n\t\treturn hxbit_PropTypeDesc.PFlags(_t1);\n\tcase 18:\n\t\treturn hxbit_PropTypeDesc.PStruct;\n\tdefault:\n\t\tthrow new js__$Boot_HaxeError("Invalid enum index " + b);\n\t}\n};\nhxbit_enumSer_hxbit_$PropTypeDesc.getSchema = function() {\n\tvar s = new hxbit_Schema();\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PInt");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PFloat");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PBool");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PString");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PBytes");\n\tvar s1 = s.fieldsTypes;\n\tvar _g = [];\n\tvar v;\n\tvar t = hxbit_PropTypeDesc.PString;\n\t_g.push({ name : "", type : t, opt : false});\n\ts1.push(hxbit_PropTypeDesc.PObj(_g));\n\ts.fieldsNames.push("PSerializable");\n\tvar s2 = s.fieldsTypes;\n\tvar _g1 = [];\n\tvar v1;\n\tvar t1 = hxbit_PropTypeDesc.PString;\n\t_g1.push({ name : "", type : t1, opt : false});\n\ts2.push(hxbit_PropTypeDesc.PObj(_g1));\n\ts.fieldsNames.push("PEnum");\n\tvar s3 = s.fieldsTypes;\n\tvar _g2 = [];\n\tvar v2;\n\tvar v3;\n\tvar t2 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g2.push({ name : "", type : t2, opt : false});\n\ts3.push(hxbit_PropTypeDesc.PObj(_g2));\n\ts.fieldsNames.push("PMap");\n\tvar s4 = s.fieldsTypes;\n\tvar _g3 = [];\n\tvar v4;\n\tvar t3 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g3.push({ name : "", type : t3, opt : false});\n\ts4.push(hxbit_PropTypeDesc.PObj(_g3));\n\ts.fieldsNames.push("PArray");\n\tvar s5 = s.fieldsTypes;\n\tvar _g4 = [];\n\tvar v5;\n\tvar t4 = hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PObj([{ name : "name", opt : false, type : hxbit_PropTypeDesc.PString},{ name : "opt", opt : false, type : hxbit_PropTypeDesc.PBool},{ name : "type", opt : false, type : hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")}]));\n\t_g4.push({ name : "", type : t4, opt : false});\n\ts5.push(hxbit_PropTypeDesc.PObj(_g4));\n\ts.fieldsNames.push("PObj");\n\tvar s6 = s.fieldsTypes;\n\tvar _g5 = [];\n\tvar v6;\n\tvar t5 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g5.push({ name : "", type : t5, opt : false});\n\ts6.push(hxbit_PropTypeDesc.PObj(_g5));\n\ts.fieldsNames.push("PAlias");\n\tvar s7 = s.fieldsTypes;\n\tvar _g6 = [];\n\tvar v7;\n\tvar t6 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g6.push({ name : "", type : t6, opt : false});\n\ts7.push(hxbit_PropTypeDesc.PObj(_g6));\n\ts.fieldsNames.push("PVector");\n\tvar s8 = s.fieldsTypes;\n\tvar _g7 = [];\n\tvar v8;\n\tvar t7 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g7.push({ name : "", type : t7, opt : false});\n\ts8.push(hxbit_PropTypeDesc.PObj(_g7));\n\ts.fieldsNames.push("PNull");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PUnknown");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PDynamic");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PInt64");\n\tvar s9 = s.fieldsTypes;\n\tvar _g8 = [];\n\tvar v9;\n\tvar t8 = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");\n\t_g8.push({ name : "", type : t8, opt : false});\n\ts9.push(hxbit_PropTypeDesc.PObj(_g8));\n\ts.fieldsNames.push("PFlags");\n\ts.fieldsTypes.push(null);\n\ts.fieldsNames.push("PStruct");\n\treturn s;\n};\nvar React_PureComponent = __webpack_require__("./node_modules/react/index.js").PureComponent;\nvar react__$ReactRef_ReactRef_$Impl_$ = {};\n$hxClasses["react._ReactRef.ReactRef_Impl_"] = react__$ReactRef_ReactRef_$Impl_$;\nreact__$ReactRef_ReactRef_$Impl_$.__name__ = "react._ReactRef.ReactRef_Impl_";\nreact__$ReactRef_ReactRef_$Impl_$.get_current = function(this1) {\n\treturn this1.current;\n};\nvar shared_DbData = function() {\n\tthis.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;\n\tthis.dataErrors = new haxe_ds_StringMap();\n\tthis.dataInfo = new haxe_ds_StringMap();\n\tthis.dataRows = [];\n};\n$hxClasses["shared.DbData"] = shared_DbData;\nshared_DbData.__name__ = "shared.DbData";\nshared_DbData.__interfaces__ = [hxbit_Serializable];\nshared_DbData.prototype = {\n\tdataErrors: null\n\t,dataInfo: null\n\t,dataRows: null\n\t,__uid: null\n\t,getCLID: function() {\n\t\treturn shared_DbData.__clid;\n\t}\n\t,serialize: function(__ctx) {\n\t\tvar a = this.dataErrors;\n\t\tif(a == null) {\n\t\t\t__ctx.out.addByte(0);\n\t\t} else {\n\t\t\tvar _e = a;\n\t\t\tvar keys = Lambda.array({ iterator : function() {\n\t\t\t\treturn _e.keys();\n\t\t\t}});\n\t\t\tvar v = keys.length + 1;\n\t\t\tif(v >= 0 && v < 128) {\n\t\t\t\t__ctx.out.addByte(v);\n\t\t\t} else {\n\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t__ctx.out.addInt32(v);\n\t\t\t}\n\t\t\tvar _g = 0;\n\t\t\twhile(_g < keys.length) {\n\t\t\t\tvar k = keys[_g];\n\t\t\t\t++_g;\n\t\t\t\tif(k == null) {\n\t\t\t\t\t__ctx.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar b = haxe_io_Bytes.ofString(k);\n\t\t\t\t\tvar v1 = b.length + 1;\n\t\t\t\t\tif(v1 >= 0 && v1 < 128) {\n\t\t\t\t\t\t__ctx.out.addByte(v1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t\t\t__ctx.out.addInt32(v1);\n\t\t\t\t\t}\n\t\t\t\t\t__ctx.out.add(b);\n\t\t\t\t}\n\t\t\t\t__ctx.addDynamic(__map_reserved[k] != null ? a.getReserved(k) : a.h[k]);\n\t\t\t}\n\t\t}\n\t\tvar a1 = this.dataInfo;\n\t\tif(a1 == null) {\n\t\t\t__ctx.out.addByte(0);\n\t\t} else {\n\t\t\tvar _e1 = a1;\n\t\t\tvar keys1 = Lambda.array({ iterator : function() {\n\t\t\t\treturn _e1.keys();\n\t\t\t}});\n\t\t\tvar v2 = keys1.length + 1;\n\t\t\tif(v2 >= 0 && v2 < 128) {\n\t\t\t\t__ctx.out.addByte(v2);\n\t\t\t} else {\n\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t__ctx.out.addInt32(v2);\n\t\t\t}\n\t\t\tvar _g1 = 0;\n\t\t\twhile(_g1 < keys1.length) {\n\t\t\t\tvar k1 = keys1[_g1];\n\t\t\t\t++_g1;\n\t\t\t\tif(k1 == null) {\n\t\t\t\t\t__ctx.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar b1 = haxe_io_Bytes.ofString(k1);\n\t\t\t\t\tvar v3 = b1.length + 1;\n\t\t\t\t\tif(v3 >= 0 && v3 < 128) {\n\t\t\t\t\t\t__ctx.out.addByte(v3);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t\t\t__ctx.out.addInt32(v3);\n\t\t\t\t\t}\n\t\t\t\t\t__ctx.out.add(b1);\n\t\t\t\t}\n\t\t\t\t__ctx.addDynamic(__map_reserved[k1] != null ? a1.getReserved(k1) : a1.h[k1]);\n\t\t\t}\n\t\t}\n\t\tvar a2 = this.dataRows;\n\t\tif(a2 == null) {\n\t\t\t__ctx.out.addByte(0);\n\t\t} else {\n\t\t\tvar v4 = a2.length + 1;\n\t\t\tif(v4 >= 0 && v4 < 128) {\n\t\t\t\t__ctx.out.addByte(v4);\n\t\t\t} else {\n\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t__ctx.out.addInt32(v4);\n\t\t\t}\n\t\t\tvar _g2 = 0;\n\t\t\twhile(_g2 < a2.length) {\n\t\t\t\tvar v5 = a2[_g2];\n\t\t\t\t++_g2;\n\t\t\t\tif(v5 == null) {\n\t\t\t\t\t__ctx.out.addByte(0);\n\t\t\t\t} else {\n\t\t\t\t\tvar keys2 = Lambda.array({ iterator : (function(_e2) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\treturn _e2[0].keys();\n\t\t\t\t\t\t};\n\t\t\t\t\t})([v5])});\n\t\t\t\t\tvar v6 = keys2.length + 1;\n\t\t\t\t\tif(v6 >= 0 && v6 < 128) {\n\t\t\t\t\t\t__ctx.out.addByte(v6);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t\t\t__ctx.out.addInt32(v6);\n\t\t\t\t\t}\n\t\t\t\t\tvar _g3 = 0;\n\t\t\t\t\twhile(_g3 < keys2.length) {\n\t\t\t\t\t\tvar k2 = keys2[_g3];\n\t\t\t\t\t\t++_g3;\n\t\t\t\t\t\tif(k2 == null) {\n\t\t\t\t\t\t\t__ctx.out.addByte(0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar b2 = haxe_io_Bytes.ofString(k2);\n\t\t\t\t\t\t\tvar v7 = b2.length + 1;\n\t\t\t\t\t\t\tif(v7 >= 0 && v7 < 128) {\n\t\t\t\t\t\t\t\t__ctx.out.addByte(v7);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t__ctx.out.addByte(128);\n\t\t\t\t\t\t\t\t__ctx.out.addInt32(v7);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t__ctx.out.add(b2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__ctx.addDynamic(__map_reserved[k2] != null ? v5.getReserved(k2) : v5.h[k2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t,getSerializeSchema: function() {\n\t\tvar schema = new hxbit_Schema();\n\t\tschema.fieldsNames.push("dataErrors");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PDynamic));\n\t\tschema.fieldsNames.push("dataInfo");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PDynamic));\n\t\tschema.fieldsNames.push("dataRows");\n\t\tschema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PDynamic)));\n\t\tschema.isFinal = hxbit_Serializer.isClassFinal(shared_DbData.__clid);\n\t\treturn schema;\n\t}\n\t,unserializeInit: function() {\n\t}\n\t,unserialize: function(__ctx) {\n\t\tvar k0;\n\t\tvar v0;\n\t\tvar v = __ctx.input.b[__ctx.inPos++];\n\t\tif(v == 128) {\n\t\t\tv = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t__ctx.inPos += 4;\n\t\t}\n\t\tvar len = v;\n\t\tvar tmp;\n\t\tif(len == 0) {\n\t\t\ttmp = null;\n\t\t} else {\n\t\t\tvar m = new haxe_ds_StringMap();\n\t\t\twhile(--len > 0) {\n\t\t\t\tvar v1 = __ctx.input.b[__ctx.inPos++];\n\t\t\t\tif(v1 == 128) {\n\t\t\t\t\tv1 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t\t\t__ctx.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len1 = v1;\n\t\t\t\tif(len1 == 0) {\n\t\t\t\t\tk0 = null;\n\t\t\t\t} else {\n\t\t\t\t\t--len1;\n\t\t\t\t\tvar s = __ctx.input.getString(__ctx.inPos,len1);\n\t\t\t\t\t__ctx.inPos += len1;\n\t\t\t\t\tk0 = s;\n\t\t\t\t}\n\t\t\t\tvar k = k0;\n\t\t\t\tv0 = __ctx.getDynamic();\n\t\t\t\tvar v2 = v0;\n\t\t\t\tif(__map_reserved[k] != null) {\n\t\t\t\t\tm.setReserved(k,v2);\n\t\t\t\t} else {\n\t\t\t\t\tm.h[k] = v2;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = m;\n\t\t}\n\t\tthis.dataErrors = tmp;\n\t\tvar k01;\n\t\tvar v01;\n\t\tvar v3 = __ctx.input.b[__ctx.inPos++];\n\t\tif(v3 == 128) {\n\t\t\tv3 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t__ctx.inPos += 4;\n\t\t}\n\t\tvar len2 = v3;\n\t\tvar tmp1;\n\t\tif(len2 == 0) {\n\t\t\ttmp1 = null;\n\t\t} else {\n\t\t\tvar m1 = new haxe_ds_StringMap();\n\t\t\twhile(--len2 > 0) {\n\t\t\t\tvar v4 = __ctx.input.b[__ctx.inPos++];\n\t\t\t\tif(v4 == 128) {\n\t\t\t\t\tv4 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t\t\t__ctx.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len3 = v4;\n\t\t\t\tif(len3 == 0) {\n\t\t\t\t\tk01 = null;\n\t\t\t\t} else {\n\t\t\t\t\t--len3;\n\t\t\t\t\tvar s1 = __ctx.input.getString(__ctx.inPos,len3);\n\t\t\t\t\t__ctx.inPos += len3;\n\t\t\t\t\tk01 = s1;\n\t\t\t\t}\n\t\t\t\tvar k1 = k01;\n\t\t\t\tv01 = __ctx.getDynamic();\n\t\t\t\tvar v5 = v01;\n\t\t\t\tif(__map_reserved[k1] != null) {\n\t\t\t\t\tm1.setReserved(k1,v5);\n\t\t\t\t} else {\n\t\t\t\t\tm1.h[k1] = v5;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp1 = m1;\n\t\t}\n\t\tthis.dataInfo = tmp1;\n\t\tvar e0;\n\t\tvar v6 = __ctx.input.b[__ctx.inPos++];\n\t\tif(v6 == 128) {\n\t\t\tv6 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t__ctx.inPos += 4;\n\t\t}\n\t\tvar len4 = v6;\n\t\tvar tmp2;\n\t\tif(len4 == 0) {\n\t\t\ttmp2 = null;\n\t\t} else {\n\t\t\t--len4;\n\t\t\tvar a = [];\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = len4;\n\t\t\twhile(_g < _g1) {\n\t\t\t\tvar i = _g++;\n\t\t\t\tvar k11;\n\t\t\t\tvar v11;\n\t\t\t\tvar v7 = __ctx.input.b[__ctx.inPos++];\n\t\t\t\tif(v7 == 128) {\n\t\t\t\t\tv7 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t\t\t__ctx.inPos += 4;\n\t\t\t\t}\n\t\t\t\tvar len5 = v7;\n\t\t\t\tif(len5 == 0) {\n\t\t\t\t\te0 = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar m2 = new haxe_ds_StringMap();\n\t\t\t\t\twhile(--len5 > 0) {\n\t\t\t\t\t\tvar v8 = __ctx.input.b[__ctx.inPos++];\n\t\t\t\t\t\tif(v8 == 128) {\n\t\t\t\t\t\t\tv8 = __ctx.input.getInt32(__ctx.inPos);\n\t\t\t\t\t\t\t__ctx.inPos += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar len6 = v8;\n\t\t\t\t\t\tif(len6 == 0) {\n\t\t\t\t\t\t\tk11 = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t--len6;\n\t\t\t\t\t\t\tvar s2 = __ctx.input.getString(__ctx.inPos,len6);\n\t\t\t\t\t\t\t__ctx.inPos += len6;\n\t\t\t\t\t\t\tk11 = s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar k2 = k11;\n\t\t\t\t\t\tv11 = __ctx.getDynamic();\n\t\t\t\t\t\tvar v9 = v11;\n\t\t\t\t\t\tif(__map_reserved[k2] != null) {\n\t\t\t\t\t\t\tm2.setReserved(k2,v9);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tm2.h[k2] = v9;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te0 = m2;\n\t\t\t\t}\n\t\t\t\ta[i] = e0;\n\t\t\t}\n\t\t\ttmp2 = a;\n\t\t}\n\t\tthis.dataRows = tmp2;\n\t}\n\t,__class__: shared_DbData\n};\nvar view_DashBoard = $hx_exports["default"] = function(props) {\n\tthis.renderCount = 0;\n\tthis.rendered = false;\n\tthis.mounted = false;\n\tthis.state = { hasError : false};\n\thaxe_Log.trace("location.pathname:" + Std.string(props.history.location.pathname) + " match.url: " + Std.string(props.match.url),{ fileName : "view/DashBoard.hx", lineNumber : 59, className : "view.DashBoard", methodName : "new"});\n\tReact_Component.call(this,props);\n\tif(props.match.url == "/dashboard") {\n\t\tprops.history.push("/dashboard/settings");\n\t\thaxe_Log.trace("pushed2/dashboard/settings",{ fileName : "view/DashBoard.hx", lineNumber : 64, className : "view.DashBoard", methodName : "new"});\n\t}\n};\n$hxClasses["view.DashBoard"] = view_DashBoard;\nview_DashBoard.__name__ = "view.DashBoard";\nview_DashBoard.mapDispatchToProps = function(dispatch) {\n\thaxe_Log.trace(Std.string(dispatch) + ":" + (dispatch == ($_=App.store,$bind($_,$_.dispatch)) ? "Y" : "N"),{ fileName : "view/DashBoard.hx", lineNumber : 95, className : "view.DashBoard", methodName : "mapDispatchToProps"});\n\treturn { setThemeColor : function() {\n\t\tdispatch(redux__$Redux_Action_$Impl_$.map(action_AppAction.SetTheme("violet")));\n\t}};\n};\nview_DashBoard.mapStateToProps = function(aState) {\n\tvar uState = aState.appWare.user;\n\thaxe_Log.trace(aState.appWare.compState,{ fileName : "view/DashBoard.hx", lineNumber : 104, className : "view.DashBoard", methodName : "mapStateToProps"});\n\tvar aState1 = aState.appWare.history.location.pathname;\n\tvar tmp;\n\tvar _this = aState.appWare.compState;\n\tif(__map_reserved["dashboard"] != null ? _this.existsReserved("dashboard") : _this.h.hasOwnProperty("dashboard")) {\n\t\tvar _this1 = aState.appWare.compState;\n\t\ttmp = (__map_reserved["dashboard"] != null ? _this1.getReserved("dashboard") : _this1.h["dashboard"]).isMounted;\n\t} else {\n\t\ttmp = false;\n\t}\n\thaxe_Log.trace(" " + (aState1 + (tmp ? "Y" : "N")),{ fileName : "view/DashBoard.hx", lineNumber : 105, className : "view.DashBoard", methodName : "mapStateToProps"});\n\tvar aState2 = aState.appWare.config;\n\tvar uState1 = uState.userName;\n\tvar uState2 = uState.pass;\n\tvar uState3 = uState.jwt;\n\tvar tmp1;\n\tvar _this2 = aState.appWare.compState;\n\tif(__map_reserved["dashboard"] != null ? _this2.existsReserved("dashboard") : _this2.h.hasOwnProperty("dashboard")) {\n\t\tvar _this3 = aState.appWare.compState;\n\t\ttmp1 = (__map_reserved["dashboard"] != null ? _this3.getReserved("dashboard") : _this3.h["dashboard"]).isMounted;\n\t} else {\n\t\ttmp1 = false;\n\t}\n\treturn { appConfig : aState2, userName : uState1, pass : uState2, jwt : uState3, isMounted : tmp1, loggedIn : uState.loggedIn, loginError : uState.loginError, lastLoggedIn : uState.lastLoggedIn, firstName : uState.firstName, redirectAfterLogin : aState.appWare.redirectAfterLogin, waiting : uState.waiting};\n};\nview_DashBoard.__super__ = React_Component;\nview_DashBoard.prototype = $extend(React_Component.prototype,{\n\tmounted: null\n\t,rendered: null\n\t,renderCount: null\n\t,componentDidMount: function() {\n\t\tthis.mounted = true;\n\t\thaxe_Log.trace(this.mounted,{ fileName : "view/DashBoard.hx", lineNumber : 73, className : "view.DashBoard", methodName : "componentDidMount"});\n\t\thaxe_Log.trace(this.props.history.listen,{ fileName : "view/DashBoard.hx", lineNumber : 74, className : "view.DashBoard", methodName : "componentDidMount"});\n\t}\n\t,componentDidCatch: function(error,info) {\n\t\tif(this.mounted) {\n\t\t\tthis.setState({ hasError : true});\n\t\t}\n\t\thaxe_Log.trace(error,{ fileName : "view/DashBoard.hx", lineNumber : 82, className : "view.DashBoard", methodName : "componentDidCatch"});\n\t\thaxe_Log.trace(info,{ fileName : "view/DashBoard.hx", lineNumber : 83, className : "view.DashBoard", methodName : "componentDidCatch"});\n\t}\n\t,componentWillUnmount: function() {\n\t\thaxe_Log.trace("leaving...",{ fileName : "view/DashBoard.hx", lineNumber : 88, className : "view.DashBoard", methodName : "componentWillUnmount"});\n\t\treturn;\n\t}\n\t,render: function() {\n\t\thaxe_Log.trace(this.props.history.location.pathname,{ fileName : "view/DashBoard.hx", lineNumber : 127, className : "view.DashBoard", methodName : "render"});\n\t\thaxe_Log.trace(this.props.jwt,{ fileName : "view/DashBoard.hx", lineNumber : 128, className : "view.DashBoard", methodName : "render"});\n\t\tif(this.state.hasError) {\n\t\t\tvar tmp = $$tre;\n\t\t\tvar c = js_Boot.getClass(this);\n\t\t\treturn { "$$typeof" : tmp, type : "h1", props : { children : ["Fehler in ",c.__name__,"."]}, key : null, ref : null};\n\t\t}\n\t\tvar tmp1 = react__$ReactNode_ReactNode_$Impl_$.fromComp(React.Fragment);\n\t\tvar tmp2 = $$tre;\n\t\tvar tmp3 = react__$ReactNode_ReactNode_$Impl_$.fromComp(bulma_$components_Tabs);\n\t\tvar tmp4 = $$tre;\n\t\tvar tmp5 = { "$$typeof" : $$tre, type : $bind(this,this.TabLink), props : Object.assign({ },this.props,{ to : "/dashboard/roles", children : "Benutzer"}), key : null, ref : null};\n\t\tvar tmp6 = { "$$typeof" : $$tre, type : $bind(this,this.TabLink), props : Object.assign({ },this.props,{ to : "/dashboard/settings", children : "Einstellungen"}), key : null, ref : null};\n\t\tvar tmp7 = $$tre;\n\t\tvar tmp8 = Object.assign({ },this.props,{ to : "/dashboard/setup", children : "Setup"});\n\t\tvar tmp9 = { "$$typeof" : tmp2, type : "div", props : { className : "tabNav2", children : React.createElement(tmp3,{ boxed : true},{ "$$typeof" : tmp4, type : "ul", props : { children : [tmp5,tmp6,{ "$$typeof" : tmp7, type : $bind(this,this.TabLink), props : tmp8, key : null, ref : null}]}, key : null, ref : null})}, key : null, ref : null};\n\t\tvar tmp10 = { "$$typeof" : $$tre, type : "div", props : { className : "tabContent2", children : [React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/dashboard/roles", component : react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_RolesForm)})),React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/dashboard/settings/:section?/:action?/:id?", component : react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_SettingsForm)})),React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromComp(react_router_Route),Object.assign({ },this.props,{ path : "/dashboard/setup", component : react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_SetUpForm)}))]}, key : null, ref : null};\n\t\tvar tmp11 = $$tre;\n\t\treturn React.createElement(tmp1,{ },tmp9,tmp10,{ "$$typeof" : tmp11, type : view_StatusBar._connected, props : this.props, key : null, ref : null});\n\t}\n\t,internalRedirect: function() {\n\t\tthis.props.history.push("/dashboard/settings");\n\t\treturn null;\n\t}\n\t,connectChild: function(name) {\n\t\tmodel_CState.addComponent(this);\n\t\thaxe_Log.trace(this.props.isMounted,{ fileName : "view/DashBoard.hx", lineNumber : 164, className : "view.DashBoard", methodName : "connectChild"});\n\t}\n\t,routeConnect: function(p) {\n\t\tp.connectChild = $bind(this,this.connectChild);\n\t\thaxe_Log.trace(Reflect.fields(p),{ fileName : "view/DashBoard.hx", lineNumber : 171, className : "view.DashBoard", methodName : "routeConnect"});\n\t\tif(this.renderCount < 0) {\n\t\t\tthis.renderCount++;\n\t\t\thaxe_Log.trace("renderCount:" + this.renderCount,{ fileName : "view/DashBoard.hx", lineNumber : 175, className : "view.DashBoard", methodName : "routeConnect"});\n\t\t\treturn null;\n\t\t}\n\t\tp.component = "RolesForm";\n\t\treturn { "$$typeof" : $$tre, type : view_shared_RouteBox, props : p, key : null, ref : null};\n\t}\n\t,TabLink: function(rprops) {\n\t\treturn { "$$typeof" : $$tre, type : "li", props : { className : rprops.location.pathname.indexOf(rprops.to) == 0 ? "is-active" : "", children : React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromComp(react_router_NavLink),{ to : rprops.to},rprops.children)}, key : null, ref : null};\n\t}\n\t,__class__: view_DashBoard\n});\nvar view_shared_BaseForm = function(props) {\n\tReact_Component.call(this,props);\n\tthis.mounted = false;\n\tthis.requests = [];\n\tthis.state = { data : new haxe_ds_StringMap(), viewClassPath : "", clean : true, errors : new haxe_ds_StringMap(), sideMenu : { menuBlocks : null}, submitted : false, hasError : false};\n};\n$hxClasses["view.shared.BaseForm"] = view_shared_BaseForm;\nview_shared_BaseForm.__name__ = "view.shared.BaseForm";\nview_shared_BaseForm.__super__ = React_Component;\nview_shared_BaseForm.prototype = $extend(React_Component.prototype,{\n\tmounted: null\n\t,requests: null\n\t,dataDisplay: null\n\t,cache: function(key) {\n\t\tvar _this = this.state.values;\n\t\tif(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {\n\t\t\tvar _this1 = this.state.values;\n\t\t\tif(__map_reserved[key] != null) {\n\t\t\t\treturn _this1.getReserved(key);\n\t\t\t} else {\n\t\t\t\treturn _this1.h[key];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t,componentDidMount: function() {\n\t\tthis.mounted = true;\n\t\thaxe_Log.trace(this.mounted,{ fileName : "view/shared/BaseForm.hx", lineNumber : 157, className : "view.shared.BaseForm", methodName : "componentDidMount"});\n\t}\n\t,componentWillUnmount: function() {\n\t\tthis.mounted = false;\n\t\tvar _g = 0;\n\t\tvar _g1 = this.requests;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar r = _g1[_g];\n\t\t\t++_g;\n\t\t\tswitch(r._hx_index) {\n\t\t\tcase 0:\n\t\t\t\tvar v = r.v;\n\t\t\t\tv.cancel();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvar v1 = r.v;\n\t\t\t\tv1.abort();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t,render: function() {\n\t\thaxe_Log.trace("You should override me :)",{ fileName : "view/shared/BaseForm.hx", lineNumber : 176, className : "view.shared.BaseForm", methodName : "render"});\n\t\treturn null;\n\t}\n\t,setStateFromChild: function(newState) {\n\t\tthis.setState(newState);\n\t\thaxe_Log.trace(newState,{ fileName : "view/shared/BaseForm.hx", lineNumber : 183, className : "view.shared.BaseForm", methodName : "setStateFromChild"});\n\t}\n\t,switchContent: function(reactEventSource) {\n\t\thaxe_Log.trace(this.props.history,{ fileName : "view/shared/BaseForm.hx", lineNumber : 189, className : "view.shared.BaseForm", methodName : "switchContent"});\n\t\thaxe_Log.trace(this.props.match,{ fileName : "view/shared/BaseForm.hx", lineNumber : 190, className : "view.shared.BaseForm", methodName : "switchContent"});\n\t\tvar viewClassPath = reactEventSource.target.getAttribute("data-classpath");\n\t\thaxe_Log.trace(viewClassPath + ":" + this.state.viewClassPath,{ fileName : "view/shared/BaseForm.hx", lineNumber : 192, className : "view.shared.BaseForm", methodName : "switchContent"});\n\t\tif(this.state.viewClassPath != viewClassPath) {\n\t\t\tthis.setState({ viewClassPath : viewClassPath});\n\t\t\tthis.props.history.push(this.props.match.url + "/" + viewClassPath);\n\t\t}\n\t}\n\t,__class__: view_shared_BaseForm\n});\nvar view_dashboard_RolesForm = function(props) {\n\tvar _gthis = this;\n\tview_shared_BaseForm.call(this,props);\n\tthis.dataDisplay = view_dashboard_model_RolesFormModel.dataDisplay;\n\tvar _g = new haxe_ds_StringMap();\n\tvar value = { isActive : true, label : "Benutzer", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [{ handler : $bind(_gthis,_gthis.createUsers), label : "Neu"},{ handler : $bind(_gthis,_gthis.editUsers), label : "Bearbeiten"},{ handler : $bind(_gthis,_gthis.deleteUsers), label : "Löschen"}];\n\t}};\n\tif(__map_reserved["users"] != null) {\n\t\t_g.setReserved("users",value);\n\t} else {\n\t\t_g.h["users"] = value;\n\t}\n\tvar value1 = { label : "Benutzergruppen", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [{ handler : $bind(_gthis,_gthis.createUserGroups), label : "Neu"},{ handler : $bind(_gthis,_gthis.editUserGroups), label : "Bearbeiten"},{ handler : $bind(_gthis,_gthis.deleteUserGroups), label : "Löschen"}];\n\t}};\n\tif(__map_reserved["userGroups"] != null) {\n\t\t_g.setReserved("userGroups",value1);\n\t} else {\n\t\t_g.h["userGroups"] = value1;\n\t}\n\tvar value2 = { label : "Rechte", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [{ handler : $bind(_gthis,_gthis.createRoles), label : "Neu"},{ handler : $bind(_gthis,_gthis.editRoles), label : "Bearbeiten"},{ handler : $bind(_gthis,_gthis.deleteRoles), label : "Löschen"}];\n\t}};\n\tif(__map_reserved["permissions"] != null) {\n\t\t_g.setReserved("permissions",value2);\n\t} else {\n\t\t_g.h["permissions"] = value2;\n\t}\n\tthis.state = { clean : true, dataClassPath : "userList", hasError : false, loading : true, sideMenu : { menuBlocks : _g}};\n\tthis.requests = [];\n\thaxe_Log.trace(Reflect.fields(props),{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 82, className : "view.dashboard.RolesForm", methodName : "new"});\n};\n$hxClasses["view.dashboard.RolesForm"] = view_dashboard_RolesForm;\nview_dashboard_RolesForm.__name__ = "view.dashboard.RolesForm";\nview_dashboard_RolesForm.mapStateToProps = function(aState) {\n\treturn function(aState1) {\n\t\tvar uState = aState1.appWare.user;\n\t\thaxe_Log.trace(uState,{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 146, className : "view.dashboard.RolesForm", methodName : "mapStateToProps"});\n\t\treturn { userName : uState.userName, jwt : uState.jwt, firstName : uState.firstName};\n\t};\n};\nview_dashboard_RolesForm.__super__ = view_shared_BaseForm;\nview_dashboard_RolesForm.prototype = $extend(view_shared_BaseForm.prototype,{\n\tcreateUsers: function(ev) {\n\t}\n\t,editUsers: function(ev) {\n\t}\n\t,deleteUsers: function(ev) {\n\t}\n\t,createUserGroups: function(ev) {\n\t}\n\t,editUserGroups: function(ev) {\n\t}\n\t,deleteUserGroups: function(ev) {\n\t}\n\t,createRoles: function(ev) {\n\t}\n\t,editRoles: function(ev) {\n\t}\n\t,deleteRoles: function(ev) {\n\t}\n\t,importExternalUsers: function(ev) {\n\t\thaxe_Log.trace(ev.currentTarget,{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 126, className : "view.dashboard.RolesForm", methodName : "importExternalUsers"});\n\t\tthis.requests.push(haxe_ds_Either.Left(model_AjaxLoader.load("" + Std.string(App.config.api),{ userName : this.props.userName, jwt : this.props.jwt, firstName : this.props.firstName, className : "admin.CreateUsers", action : "importExternal"},function(data) {\n\t\t\thaxe_Log.trace(data,{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 137, className : "view.dashboard.RolesForm", methodName : "importExternalUsers"});\n\t\t})));\n\t}\n\t,componentDidMount: function() {\n\t\tvar _gthis = this;\n\t\tview_shared_BaseForm.prototype.componentDidMount.call(this);\n\t\thaxe_Log.trace(this.state.loading,{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 158, className : "view.dashboard.RolesForm", methodName : "componentDidMount"});\n\t\tvar tmp = this.requests;\n\t\tvar b = "" + Std.string(App.config.api);\n\t\tvar b1 = this.props.userName;\n\t\tvar b2 = this.props.jwt;\n\t\tvar _g3 = new haxe_ds_StringMap();\n\t\tvar _g = new haxe_ds_StringMap();\n\t\tif(__map_reserved["alias"] != null) {\n\t\t\t_g.setReserved("alias","us");\n\t\t} else {\n\t\t\t_g.h["alias"] = "us";\n\t\t}\n\t\tif(__map_reserved["fields"] != null) {\n\t\t\t_g.setReserved("fields","user_name,last_login");\n\t\t} else {\n\t\t\t_g.h["fields"] = "user_name,last_login";\n\t\t}\n\t\tvar value = _g;\n\t\tif(__map_reserved["users"] != null) {\n\t\t\t_g3.setReserved("users",value);\n\t\t} else {\n\t\t\t_g3.h["users"] = value;\n\t\t}\n\t\tvar _g1 = new haxe_ds_StringMap();\n\t\tif(__map_reserved["alias"] != null) {\n\t\t\t_g1.setReserved("alias","ug");\n\t\t} else {\n\t\t\t_g1.h["alias"] = "ug";\n\t\t}\n\t\tif(__map_reserved["fields"] != null) {\n\t\t\t_g1.setReserved("fields","name");\n\t\t} else {\n\t\t\t_g1.h["fields"] = "name";\n\t\t}\n\t\tif(__map_reserved["jCond"] != null) {\n\t\t\t_g1.setReserved("jCond","ug.id=us.user_group");\n\t\t} else {\n\t\t\t_g1.h["jCond"] = "ug.id=us.user_group";\n\t\t}\n\t\tvar value1 = _g1;\n\t\tif(__map_reserved["user_groups"] != null) {\n\t\t\t_g3.setReserved("user_groups",value1);\n\t\t} else {\n\t\t\t_g3.h["user_groups"] = value1;\n\t\t}\n\t\tvar _g2 = new haxe_ds_StringMap();\n\t\tif(__map_reserved["alias"] != null) {\n\t\t\t_g2.setReserved("alias","co");\n\t\t} else {\n\t\t\t_g2.h["alias"] = "co";\n\t\t}\n\t\tif(__map_reserved["fields"] != null) {\n\t\t\t_g2.setReserved("fields","first_name,last_name,email");\n\t\t} else {\n\t\t\t_g2.h["fields"] = "first_name,last_name,email";\n\t\t}\n\t\tif(__map_reserved["jCond"] != null) {\n\t\t\t_g2.setReserved("jCond","contact=co.id");\n\t\t} else {\n\t\t\t_g2.h["jCond"] = "contact=co.id";\n\t\t}\n\t\tvar value2 = _g2;\n\t\tif(__map_reserved["contacts"] != null) {\n\t\t\t_g3.setReserved("contacts",value2);\n\t\t} else {\n\t\t\t_g3.h["contacts"] = value2;\n\t\t}\n\t\ttmp.push(haxe_ds_Either.Right(view_shared_io_BinaryLoader.create(b,{ userName : b1, jwt : b2, className : "roles.Users", action : "list", filter : "active|TRUE", dataSource : haxe_Serializer.run(_g3)},function(dBytes) {\n\t\t\thaxe_Log.trace(dBytes.toString(),{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 225, className : "view.dashboard.RolesForm", methodName : "componentDidMount"});\n\t\t\tvar u = new hxbit_Serializer();\n\t\t\tvar data = u.unserialize(dBytes,shared_DbData);\n\t\t\thaxe_Log.trace(Reflect.fields(data.dataRows[0]),{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 228, className : "view.dashboard.RolesForm", methodName : "componentDidMount"});\n\t\t\tvar _g6 = new haxe_ds_StringMap();\n\t\t\tvar value3 = data.dataRows;\n\t\t\tif(__map_reserved["userList"] != null) {\n\t\t\t\t_g6.setReserved("userList",value3);\n\t\t\t} else {\n\t\t\t\t_g6.h["userList"] = value3;\n\t\t\t}\n\t\t\t_gthis.setState({ data : _g6, loading : false});\n\t\t})));\n\t}\n\t,render: function() {\n\t\thaxe_Log.trace(Reflect.fields(this.props),{ fileName : "view/dashboard/RolesForm.hx", lineNumber : 241, className : "view.dashboard.RolesForm", methodName : "render"});\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { className : "columns", children : [{ "$$typeof" : $$tre, type : "div", props : { className : "tabComponentForm", children : this.renderContent()}, key : null, ref : null},{ "$$typeof" : $$tre, type : view_shared_SMenu, props : { className : "menu", menuBlocks : this.state.sideMenu.menuBlocks}, key : null, ref : null}]}, key : null, ref : null};\n\t}\n\t,renderContent: function() {\n\t\tvar _g = this.state.dataClassPath;\n\t\tif(_g == null) {\n\t\t\treturn null;\n\t\t} else if(_g == "userList") {\n\t\t\tvar tmp = $$tre;\n\t\t\tvar tmp1 = this.props;\n\t\t\tvar tmp2;\n\t\t\tif(this.state.data == null) {\n\t\t\t\ttmp2 = null;\n\t\t\t} else {\n\t\t\t\tvar _this = this.state.data;\n\t\t\t\ttmp2 = __map_reserved["userList"] != null ? _this.getReserved("userList") : _this.h["userList"];\n\t\t\t}\n\t\t\tvar _this1 = this.dataDisplay;\n\t\t\tvar tmp3 = __map_reserved["userList"] != null ? _this1.getReserved("userList") : _this1.h["userList"];\n\t\t\treturn { "$$typeof" : tmp, type : view_table_Table, props : Object.assign({ },tmp1,{ id : "userList", data : tmp2, dataState : tmp3, className : "is-striped is-hoverable", fullWidth : true}), key : null, ref : null};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t,__class__: view_dashboard_RolesForm\n});\nvar view_dashboard_SetUpForm = function(props) {\n\tview_shared_BaseForm.call(this,props);\n\thaxe_Log.trace("ok",{ fileName : "view/dashboard/SetUpForm.hx", lineNumber : 38, className : "view.dashboard.SetUpForm", methodName : "new"});\n\tvar tmp = this.state;\n\tvar _g = new haxe_ds_StringMap();\n\tvar value = { dataClassPath : "model.tools.DB", viewClassPath : "shared.io.DB", isActive : true, label : "DB Design", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [];\n\t}};\n\tif(__map_reserved["DbTools"] != null) {\n\t\t_g.setReserved("DbTools",value);\n\t} else {\n\t\t_g.h["DbTools"] = value;\n\t}\n\tthis.state = react_ReactUtil.copy(tmp,{ sideMenu : { menuBlocks : _g}, viewClassPath : "shared.io.DB", loading : true});\n\tthis.requests = [];\n};\n$hxClasses["view.dashboard.SetUpForm"] = view_dashboard_SetUpForm;\nview_dashboard_SetUpForm.__name__ = "view.dashboard.SetUpForm";\nview_dashboard_SetUpForm.mapStateToProps = function() {\n\treturn function(aState) {\n\t\tvar uState = aState.appWare.user;\n\t\thaxe_Log.trace(uState,{ fileName : "view/dashboard/SetUpForm.hx", lineNumber : 71, className : "view.dashboard.SetUpForm", methodName : "mapStateToProps"});\n\t\treturn { userName : uState.userName, jwt : uState.jwt, firstName : uState.firstName};\n\t};\n};\nview_dashboard_SetUpForm.__super__ = view_shared_BaseForm;\nview_dashboard_SetUpForm.prototype = $extend(view_shared_BaseForm.prototype,{\n\tcomponentDidCatch: function(error,info) {\n\t\tif(this.mounted) {\n\t\t\tthis.setState({ hasError : true});\n\t\t}\n\t\thaxe_Log.trace(info,{ fileName : "view/dashboard/SetUpForm.hx", lineNumber : 85, className : "view.dashboard.SetUpForm", methodName : "componentDidCatch"});\n\t}\n\t,componentDidMount: function() {\n\t\tvar _gthis = this;\n\t\tview_shared_BaseForm.prototype.componentDidMount.call(this);\n\t\thaxe_Log.trace("ok",{ fileName : "view/dashboard/SetUpForm.hx", lineNumber : 91, className : "view.dashboard.SetUpForm", methodName : "componentDidMount"});\n\t\treturn;\n\t}\n\t,render: function() {\n\t\tvar _g = this.state.viewClassPath;\n\t\tif(_g == null) {\n\t\t\treturn null;\n\t\t} else if(_g == "shared.io.DB") {\n\t\t\treturn { "$$typeof" : $$tre, type : view_shared_io_DB, props : Object.assign({ },this.props,{ sideMenu : this.state.sideMenu, handleChange : false, handleSubmit : false, fullWidth : true}), key : null, ref : null};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t,renderContent: function(content) {\n\t\tif(content == null || content.length == 0) {\n\t\t\treturn null;\n\t\t}\n\t\thaxe_Log.trace(content.length,{ fileName : "view/dashboard/SetUpForm.hx", lineNumber : 131, className : "view.dashboard.SetUpForm", methodName : "renderContent"});\n\t\tvar rC = [];\n\t\tvar k = 1;\n\t\tvar _g = 0;\n\t\twhile(_g < content.length) {\n\t\t\tvar c = content[_g];\n\t\t\t++_g;\n\t\t\trC.push({ "$$typeof" : $$tre, type : "div", props : { children : c}, key : k++, ref : null});\n\t\t}\n\t\treturn rC;\n\t}\n\t,__class__: view_dashboard_SetUpForm\n});\nvar view_dashboard_SettingsForm = function(props) {\n\tvar _gthis = this;\n\tview_shared_BaseForm.call(this,props);\n\tthis.childFormProps = react_ReactUtil.copy(props,{ fullWidth : true, setStateFromChild : $bind(this,this.setStateFromChild)});\n\tif(props.jwt == null) {\n\t\thaxe_Log.trace(props,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 40, className : "view.dashboard.SettingsForm", methodName : "new"});\n\t} else {\n\t\thaxe_Log.trace(props.jwt,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 43, className : "view.dashboard.SettingsForm", methodName : "new"});\n\t}\n\tvar _g = new haxe_ds_StringMap();\n\tvar value = { dataClassPath : "auth.User", viewClassPath : "shared.io.User", isActive : true, label : "UserDaten", onActivate : $bind(this,this.switchContent), items : null};\n\tif(__map_reserved["user"] != null) {\n\t\t_g.setReserved("user",value);\n\t} else {\n\t\t_g.h["user"] = value;\n\t}\n\tvar value1 = { dataClassPath : "settings.Bookmarks", viewClassPath : "shared.io.Bookmarks", label : "Lesezeichen", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [{ handler : $bind(_gthis,_gthis.createUserBookmark), label : "Neu", segment : "create"},{ handler : $bind(_gthis,_gthis.editUserBookmark), label : "Bearbeiten", segment : "edit"},{ handler : $bind(_gthis,_gthis.deleteUserBookmark), label : "Löschen", segment : "delete"}];\n\t}};\n\tif(__map_reserved["bookmarks"] != null) {\n\t\t_g.setReserved("bookmarks",value1);\n\t} else {\n\t\t_g.h["bookmarks"] = value1;\n\t}\n\tvar value2 = { dataClassPath : "settings.Design", viewClassPath : "shared.io.Design", label : "Design", onActivate : $bind(this,this.switchContent), items : function() {\n\t\treturn [{ handler : $bind(_gthis,_gthis.editColors), label : "Farben", segment : "editColors"},{ handler : $bind(_gthis,_gthis.editFonts), label : "Schrift", segment : "editFont"}];\n\t}};\n\tif(__map_reserved["design"] != null) {\n\t\t_g.setReserved("design",value2);\n\t} else {\n\t\t_g.h["design"] = value2;\n\t}\n\tthis.state = { clean : true, viewClassPath : "shared.io.User", hasError : false, loading : true, sideMenu : { menuBlocks : _g}};\n\tthis.requests = [];\n};\n$hxClasses["view.dashboard.SettingsForm"] = view_dashboard_SettingsForm;\nview_dashboard_SettingsForm.__name__ = "view.dashboard.SettingsForm";\nview_dashboard_SettingsForm.mapStateToProps = function(aState) {\n\treturn function(aState1) {\n\t\tvar uState = aState1.appWare.user;\n\t\thaxe_Log.trace(uState,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 137, className : "view.dashboard.SettingsForm", methodName : "mapStateToProps"});\n\t\treturn { userName : uState.userName, jwt : uState.jwt, firstName : uState.firstName};\n\t};\n};\nview_dashboard_SettingsForm.__super__ = view_shared_BaseForm;\nview_dashboard_SettingsForm.prototype = $extend(view_shared_BaseForm.prototype,{\n\tchildFormProps: null\n\t,componentDidMount: function() {\n\t\tview_shared_BaseForm.prototype.componentDidMount.call(this);\n\t\thaxe_Log.trace(this.state.loading,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 90, className : "view.dashboard.SettingsForm", methodName : "componentDidMount"});\n\t\tif(this.props.jwt == null) {\n\t\t\thaxe_Log.trace(this.props,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 93, className : "view.dashboard.SettingsForm", methodName : "componentDidMount"});\n\t\t\treturn;\n\t\t}\n\t\thaxe_Log.trace(Reflect.fields(this.props),{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 97, className : "view.dashboard.SettingsForm", methodName : "componentDidMount"});\n\t\thaxe_Log.trace(this.props.match,{ fileName : "view/dashboard/SettingsForm.hx", lineNumber : 98, className : "view.dashboard.SettingsForm", methodName : "componentDidMount"});\n\t}\n\t,createUserBookmark: function(ev) {\n\t}\n\t,deleteUserBookmark: function(ev) {\n\t}\n\t,editColors: function(ev) {\n\t}\n\t,editFonts: function(ev) {\n\t}\n\t,editUserBookmark: function(ev) {\n\t}\n\t,menuBlockItems: function() {\n\t\treturn [];\n\t}\n\t,switchContent: function(reactEventSource) {\n\t\tview_shared_BaseForm.prototype.switchContent.call(this,reactEventSource);\n\t}\n\t,render: function() {\n\t\tvar _g = this.state.viewClassPath;\n\t\tif(_g == null) {\n\t\t\treturn null;\n\t\t} else if(_g == "shared.io.User") {\n\t\t\treturn { "$$typeof" : $$tre, type : view_shared_io_User, props : Object.assign({ },this.childFormProps,{ sideMenu : this.state.sideMenu, handleChange : true, handleSubmit : true, fullWidth : true}), key : null, ref : null};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t,__class__: view_dashboard_SettingsForm\n});\nvar view_dashboard_model_DBFormsModel = function() { };\n$hxClasses["view.dashboard.model.DBFormsModel"] = view_dashboard_model_DBFormsModel;\nview_dashboard_model_DBFormsModel.__name__ = "view.dashboard.model.DBFormsModel";\nview_dashboard_model_DBFormsModel.formatBool = function(v) {\n\tif(v) {\n\t\treturn "Y";\n\t} else {\n\t\treturn "N";\n\t}\n};\nview_dashboard_model_DBFormsModel.formatElementSelection = function(v) {\n\tif(v) {\n\t\treturn "Y";\n\t} else {\n\t\treturn "N";\n\t}\n};\nvar view_dashboard_model_RolesFormModel = function() { };\n$hxClasses["view.dashboard.model.RolesFormModel"] = view_dashboard_model_RolesFormModel;\nview_dashboard_model_RolesFormModel.__name__ = "view.dashboard.model.RolesFormModel";\nvar view_shared_RouteBox = function(props) {\n\tReact_Component.call(this,props);\n\tthis.parentIsMounted = false;\n\thaxe_Log.trace(this.parentIsMounted,{ fileName : "view/shared/RouteBox.hx", lineNumber : 29, className : "view.shared.RouteBox", methodName : "new"});\n\thaxe_Log.trace(props.isMounted,{ fileName : "view/shared/RouteBox.hx", lineNumber : 30, className : "view.shared.RouteBox", methodName : "new"});\n};\n$hxClasses["view.shared.RouteBox"] = view_shared_RouteBox;\nview_shared_RouteBox.__name__ = "view.shared.RouteBox";\nview_shared_RouteBox.__super__ = React_Component;\nview_shared_RouteBox.prototype = $extend(React_Component.prototype,{\n\tparentIsMounted: null\n\t,connectMe: function() {\n\t\tthis.parentIsMounted = true;\n\t\tthis.forceUpdate();\n\t}\n\t,render: function() {\n\t\thaxe_Log.trace(this.props.isMounted,{ fileName : "view/shared/RouteBox.hx", lineNumber : 42, className : "view.shared.RouteBox", methodName : "render"});\n\t\thaxe_Log.trace(this.parentIsMounted,{ fileName : "view/shared/RouteBox.hx", lineNumber : 43, className : "view.shared.RouteBox", methodName : "render"});\n\t\tif(!this.parentIsMounted) {\n\t\t\treturn { "$$typeof" : $$tre, type : "button", props : { onClick : $bind(this,this.connectMe), children : "ConnectMe"}, key : null, ref : null};\n\t\t}\n\t\tvar component = this.props.component;\n\t\thaxe_Log.trace(component,{ fileName : "view/shared/RouteBox.hx", lineNumber : 49, className : "view.shared.RouteBox", methodName : "render"});\n\t\thaxe_Log.trace(this.parentIsMounted,{ fileName : "view/shared/RouteBox.hx", lineNumber : 50, className : "view.shared.RouteBox", methodName : "render"});\n\t\tif(!this.parentIsMounted) {\n\t\t\treturn null;\n\t\t}\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { children : { "$$typeof" : $$tre, type : view_dashboard_RolesForm._connected, props : this.props, key : null, ref : null}}, key : null, ref : null};\n\t}\n\t,__class__: view_shared_RouteBox\n});\nvar view_shared_SMenu = function(props) {\n\tReact_Component.call(this,props);\n\tthis.state = { hidden : props.hidden};\n};\n$hxClasses["view.shared.SMenu"] = view_shared_SMenu;\nview_shared_SMenu.__name__ = "view.shared.SMenu";\nview_shared_SMenu.__super__ = React_Component;\nview_shared_SMenu.prototype = $extend(React_Component.prototype,{\n\tinitialActiveHeaderRef: null\n\t,activate: function() {\n\t\thaxe_Log.trace(react__$ReactRef_ReactRef_$Impl_$.get_current(this.initialActiveHeaderRef),{ fileName : "view/shared/SMenu.hx", lineNumber : 83, className : "view.shared.SMenu", methodName : "activate"});\n\t\tif(react__$ReactRef_ReactRef_$Impl_$.get_current(this.initialActiveHeaderRef) != null) {\n\t\t\thaxe_Log.trace(react__$ReactRef_ReactRef_$Impl_$.get_current(this.initialActiveHeaderRef).value,{ fileName : "view/shared/SMenu.hx", lineNumber : 86, className : "view.shared.SMenu", methodName : "activate"});\n\t\t\treact__$ReactRef_ReactRef_$Impl_$.get_current(this.initialActiveHeaderRef).checked = true;\n\t\t}\n\t}\n\t,renderHeader: function() {\n\t\tvar _gthis = this;\n\t\tthis.initialActiveHeaderRef = React.createRef();\n\t\tif(Lambda.empty(this.props.menuBlocks)) {\n\t\t\treturn null;\n\t\t}\n\t\tvar header = [];\n\t\tvar i = 1;\n\t\tLambda.iter(this.props.menuBlocks,function(block) {\n\t\t\tvar tmp = react__$ReactNode_ReactNode_$Impl_$.fromString("input");\n\t\t\tvar i1 = i;\n\t\t\ti += 1;\n\t\t\tvar tmp1 = React.createElement(tmp,{ key : i1, ref : block.isActive ? _gthis.initialActiveHeaderRef : null, type : "radio", id : "sMenuPanel-" + (i - 1), name : "accordion-select", \'data-classpath\' : block.dataClassPath, onChange : block.onActivate, \'data-segment\' : block.segment});\n\t\t\theader.push(tmp1);\n\t\t});\n\t\treturn header;\n\t}\n\t,renderPanels: function() {\n\t\tvar _gthis = this;\n\t\tif(Lambda.empty(this.props.menuBlocks)) {\n\t\t\treturn null;\n\t\t}\n\t\tvar i = 1;\n\t\tvar panels = [];\n\t\tLambda.iter(this.props.menuBlocks,function(block) {\n\t\t\tvar tmp = $$tre;\n\t\t\tvar tmp1 = { "$$typeof" : $$tre, type : "label", props : { className : "panel-heading", htmlFor : "sMenuPanel-" + i, children : block.label}, key : null, ref : null};\n\t\t\tvar tmp2 = $$tre;\n\t\t\ti += 1;\n\t\t\tvar tmp3 = "panel-block body-" + (i - 1);\n\t\t\tvar tmp4 = _gthis.renderItems(block.items);\n\t\t\tpanels.push({ "$$typeof" : tmp, type : "div", props : { className : "panel", children : [tmp1,{ "$$typeof" : tmp2, type : "div", props : { className : tmp3, children : tmp4}, key : null, ref : null}]}, key : i, ref : null});\n\t\t});\n\t\treturn panels;\n\t}\n\t,renderItems: function(_items) {\n\t\tvar items = _items();\n\t\tif(items.length == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tvar i = 1;\n\t\treturn items.map(function(item) {\n\t\t\ti += 1;\n\t\t\treturn React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromComp(bulma_$components_Button),{ key : i - 1, onClick : item.handler, disabled : item.disabled},item.label);\n\t\t});\n\t}\n\t,render: function() {\n\t\thaxe_Log.trace("...",{ fileName : "view/shared/SMenu.hx", lineNumber : 135, className : "view.shared.SMenu", methodName : "render"});\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { className : "is-right is-hidden-mobile", children : { "$$typeof" : $$tre, type : "aside", props : { className : "menu", children : [this.renderHeader(),this.renderPanels()]}, key : null, ref : null}}, key : null, ref : null};\n\t}\n\t,componentDidMount: function() {\n\t\tthis.activate();\n\t}\n\t,componentDidUpdate: function(prevProps,prevState) {\n\t}\n\t,__class__: view_shared_SMenu\n});\nvar view_shared_io_BinaryLoader = function(url) {\n\tthis.url = url;\n\tthis.xhr = new XMLHttpRequest();\n};\n$hxClasses["view.shared.io.BinaryLoader"] = view_shared_io_BinaryLoader;\nview_shared_io_BinaryLoader.__name__ = "view.shared.io.BinaryLoader";\nview_shared_io_BinaryLoader.create = function(url,p,onLoaded) {\n\tvar bl = new view_shared_io_BinaryLoader(url);\n\tbl.cB = onLoaded;\n\tbl.param = new FormData();\n\tvar _g = 0;\n\tvar _g1 = Reflect.fields(p);\n\twhile(_g < _g1.length) {\n\t\tvar f = _g1[_g];\n\t\t++_g;\n\t\tbl.param.set(f,Reflect.field(p,f));\n\t}\n\tbl.load();\n\treturn bl.xhr;\n};\nview_shared_io_BinaryLoader.prototype = {\n\tcB: null\n\t,param: null\n\t,xhr: null\n\t,url: null\n\t,onLoaded: function(bytes) {\n\t\tthis.cB(bytes);\n\t}\n\t,onProgress: function(cur,max) {\n\t}\n\t,onError: function(msg) {\n\t\tthrow new js__$Boot_HaxeError(msg);\n\t}\n\t,load: function() {\n\t\tvar _gthis = this;\n\t\tthis.xhr.open("POST",this.url,true);\n\t\tthis.xhr.responseType = "arraybuffer";\n\t\tthis.xhr.onerror = function(e) {\n\t\t\t_gthis.onError(_gthis.xhr.statusText);\n\t\t};\n\t\tthis.xhr.onload = function(e1) {\n\t\t\tif(_gthis.xhr.status != 200) {\n\t\t\t\t_gthis.onError(_gthis.xhr.statusText);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_gthis.onLoaded(haxe_io_Bytes.ofData(_gthis.xhr.response));\n\t\t};\n\t\tthis.xhr.onprogress = function(e2) {\n\t\t\t_gthis.onProgress(e2.loaded || e2.position | 0,e2.total || e2.totalSize | 0);\n\t\t};\n\t\tthis.xhr.send(this.param);\n\t}\n\t,__class__: view_shared_io_BinaryLoader\n};\nvar view_shared_io_DataAccessForm = function(props) {\n\tReact_PureComponent.call(this,props);\n\tthis.mounted = false;\n\tthis.requests = [];\n\tif(props != null) {\n\t\thaxe_Log.trace(props.match,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 69, className : "view.shared.io.DataAccessForm", methodName : "new"});\n\t}\n\tthis.state = { data : new haxe_ds_StringMap(), clean : true, hasError : false, handleChange : this.setChangeHandler(), handleSubmit : this.setSubmitHandler(), sideMenu : props.sideMenu, selectedRows : []};\n};\n$hxClasses["view.shared.io.DataAccessForm"] = view_shared_io_DataAccessForm;\nview_shared_io_DataAccessForm.__name__ = "view.shared.io.DataAccessForm";\nview_shared_io_DataAccessForm.localDate = function(d) {\n\thaxe_Log.trace(d,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 455, className : "view.shared.io.DataAccessForm", methodName : "localDate"});\n\treturn DateTools.format(HxOverrides.strDate(d),"%d.%m.%Y %H:%M");\n};\nview_shared_io_DataAccessForm.__super__ = React_PureComponent;\nview_shared_io_DataAccessForm.prototype = $extend(React_PureComponent.prototype,{\n\tmounted: null\n\t,requests: null\n\t,dataAccess: null\n\t,formColElements: null\n\t,dataDisplay: null\n\t,_menuItems: null\n\t,_fstate: null\n\t,modalFormTableHeader: null\n\t,modalFormTableBody: null\n\t,createStateValuesArray: function(data,view1) {\n\t\tvar _g = [];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < data.length) {\n\t\t\tvar r = data[_g1];\n\t\t\t++_g1;\n\t\t\t_g.push(this.createStateValues(r,view1));\n\t\t}\n\t\treturn _g;\n\t}\n\t,createStateValues: function(data,view1) {\n\t\tvar vState = new haxe_ds_StringMap();\n\t\tvar k = data.keys();\n\t\twhile(k.hasNext()) {\n\t\t\tvar k1 = k.next();\n\t\t\tif(__map_reserved[k1] != null ? view1.existsReserved(k1) : view1.h.hasOwnProperty(k1)) {\n\t\t\t\tvar v = (__map_reserved[k1] != null ? view1.getReserved(k1) : view1.h[k1]).displayFormat == null ? __map_reserved[k1] != null ? data.getReserved(k1) : data.h[k1] : (__map_reserved[k1] != null ? view1.getReserved(k1) : view1.h[k1]).displayFormat(__map_reserved[k1] != null ? data.getReserved(k1) : data.h[k1]);\n\t\t\t\tif(__map_reserved[k1] != null) {\n\t\t\t\t\tvState.setReserved(k1,v);\n\t\t\t\t} else {\n\t\t\t\t\tvState.h[k1] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vState;\n\t}\n\t,selectedRowsMap: function() {\n\t\tvar _g = [];\n\t\tvar _g1 = 0;\n\t\tvar _g2 = this.state.selectedRows;\n\t\twhile(_g1 < _g2.length) {\n\t\t\tvar r = _g2[_g1];\n\t\t\t++_g1;\n\t\t\t_g.push(this.selectedRowMap(r));\n\t\t}\n\t\treturn _g;\n\t}\n\t,selectedRowMap: function(row) {\n\t\tvar _g = new haxe_ds_StringMap();\n\t\tvar _g1 = 0;\n\t\tvar _g2 = row.cells;\n\t\twhile(_g1 < _g2.length) {\n\t\t\tvar c = _g2[_g1];\n\t\t\t++_g1;\n\t\t\tvar key = c.dataset.name;\n\t\t\tvar value = c.innerHTML;\n\t\t\tif(__map_reserved[key] != null) {\n\t\t\t\t_g.setReserved(key,value);\n\t\t\t} else {\n\t\t\t\t_g.h[key] = value;\n\t\t\t}\n\t\t}\n\t\tvar rM = _g;\n\t\treturn rM;\n\t}\n\t,setChangeHandler: function() {\n\t\tif(this.props.handleChange) {\n\t\t\tif(this.props.handleChangeByParent != null) {\n\t\t\t\treturn this.props.handleChangeByParent;\n\t\t\t}\n\t\t\treturn $bind(this,this.handleChange);\n\t\t}\n\t\treturn null;\n\t}\n\t,setSubmitHandler: function() {\n\t\tif(this.props.handleSubmit) {\n\t\t\tif(this.props.handleSubmitByParent != null) {\n\t\t\t\treturn this.props.handleSubmitByParent;\n\t\t\t}\n\t\t\treturn $bind(this,this.handleSubmit);\n\t\t}\n\t\treturn null;\n\t}\n\t,setStateFromChild: function(newState) {\n\t\tnewState = react_ReactUtil.copy(newState,{ sideMenu : this.updateMenu()});\n\t\tthis.setState(newState);\n\t}\n\t,componentDidMount: function() {\n\t\tthis.mounted = true;\n\t\thaxe_Log.trace(this.mounted,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 148, className : "view.shared.io.DataAccessForm", methodName : "componentDidMount"});\n\t}\n\t,componentWillUnmount: function() {\n\t\tthis.mounted = false;\n\t\tvar _g = 0;\n\t\tvar _g1 = this.requests;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar r = _g1[_g];\n\t\t\t++_g;\n\t\t\tswitch(r._hx_index) {\n\t\t\tcase 0:\n\t\t\t\tvar v = r.v;\n\t\t\t\tv.cancel();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvar v1 = r.v;\n\t\t\t\tv1.abort();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t,handleChange: function(e) {\n\t\tvar t = e.target;\n\t\thaxe_Log.trace("" + t.name + " " + t.value,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 169, className : "view.shared.io.DataAccessForm", methodName : "handleChange"});\n\t\tvar vs = this.state.values;\n\t\thaxe_Log.trace(vs.toString(),{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 171, className : "view.shared.io.DataAccessForm", methodName : "handleChange"});\n\t\tvar k = t.name;\n\t\tvar v = t.value;\n\t\tvar value = v;\n\t\tif(__map_reserved[k] != null) {\n\t\t\tvs.setReserved(k,value);\n\t\t} else {\n\t\t\tvs.h[k] = value;\n\t\t}\n\t\tthis.setState({ clean : false, sideMenu : this.updateMenu(), values : vs});\n\t}\n\t,selectAllRows: function(unselect) {\n\t\tif(unselect == null) {\n\t\t\tunselect = false;\n\t\t}\n\t\tvar _g = 0;\n\t\tvar _g1 = this.state.selectedRows;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar r = _g1[_g];\n\t\t\t++_g;\n\t\t\tif(unselect) {\n\t\t\t\tr.classList.remove("is-selected");\n\t\t\t} else {\n\t\t\t\tr.classList.add("is-selected");\n\t\t\t}\n\t\t}\n\t}\n\t,updateMenu: function() {\n\t\thaxe_Log.trace("subclass task",{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 195, className : "view.shared.io.DataAccessForm", methodName : "updateMenu"});\n\t\treturn null;\n\t}\n\t,handleSubmit: function(e) {\n\t\te.preventDefault();\n\t\tthis.setState({ submitted : true});\n\t}\n\t,render: function() {\n\t\treturn null;\n\t}\n\t,renderField: function(name,k) {\n\t\tvar _this = this.state.fields;\n\t\tvar formField = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];\n\t\tif(k == 0) {\n\t\t\thaxe_Log.trace(this.state.handleChange,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 222, className : "view.shared.io.DataAccessForm", methodName : "renderField"});\n\t\t}\n\t\tvar field;\n\t\tvar _g = formField.type;\n\t\tif(_g == null) {\n\t\t\tvar field1 = $$tre;\n\t\t\tvar _this1 = this.state.values;\n\t\t\tfield = { "$$typeof" : field1, type : "input", props : { name : name, defaultValue : __map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name], onChange : formField.readonly ? null : this.state.handleChange, readOnly : formField.readonly}, key : k++, ref : null};\n\t\t} else if(_g == "Hidden") {\n\t\t\tvar field2 = $$tre;\n\t\t\tvar _this2 = this.state.values;\n\t\t\tfield = { "$$typeof" : field2, type : "input", props : { name : name, type : "hidden", defaultValue : __map_reserved[name] != null ? _this2.getReserved(name) : _this2.h[name], readOnly : formField.readonly}, key : k++, ref : null};\n\t\t} else {\n\t\t\tvar field3 = $$tre;\n\t\t\tvar _this3 = this.state.values;\n\t\t\tfield = { "$$typeof" : field3, type : "input", props : { name : name, defaultValue : __map_reserved[name] != null ? _this3.getReserved(name) : _this3.h[name], onChange : formField.readonly ? null : this.state.handleChange, readOnly : formField.readonly}, key : k++, ref : null};\n\t\t}\n\t\tif(formField.type == "Hidden") {\n\t\t\treturn field;\n\t\t} else {\n\t\t\treturn [{ "$$typeof" : $$tre, type : "label", props : { children : formField.label}, key : k++, ref : null},field];\n\t\t}\n\t}\n\t,renderElements: function() {\n\t\tif(Lambda.empty(this.state.data)) {\n\t\t\treturn null;\n\t\t}\n\t\tvar fields = this.state.fields.keys();\n\t\tvar elements = [];\n\t\tvar k = 0;\n\t\tvar field = fields;\n\t\twhile(field.hasNext()) {\n\t\t\tvar field1 = field.next();\n\t\t\tvar tmp = $$tre;\n\t\t\tvar _this = this.state.fields;\n\t\t\tvar tmp1 = k++;\n\t\t\telements.push({ "$$typeof" : tmp, type : "div", props : { className : (__map_reserved[field1] != null ? _this.getReserved(field1) : _this.h[field1]).type == "Hidden" ? null : "formField", children : this.renderField(field1,tmp1)}, key : k, ref : null});\n\t\t}\n\t\treturn elements;\n\t}\n\t,createElementsArray: function() {\n\t\tif(Lambda.empty(this._fstate.dataTable)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.formColElements = new haxe_ds_StringMap();\n\t\tthis.addFormColumns();\n\t\tvar _g = 0;\n\t\tvar _g1 = this._fstate.dataTable;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar dR = _g1[_g];\n\t\t\t++_g;\n\t\t\tvar fields = this._fstate.fields.keys();\n\t\t\tvar name = fields;\n\t\t\twhile(name.hasNext()) {\n\t\t\t\tvar name1 = name.next();\n\t\t\t\tvar _this = this._fstate.fields;\n\t\t\t\tif((__map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1]).type == "Hidden") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar _this1 = this._fstate.fields;\n\t\t\t\tvar fF = __map_reserved[name1] != null ? _this1.getReserved(name1) : _this1.h[name1];\n\t\t\t\tvar _this2 = this.formColElements;\n\t\t\t\t(__map_reserved[name1] != null ? _this2.getReserved(name1) : _this2.h[name1]).push({ className : fF.className, name : name1, value : fF.displayFormat == null ? __map_reserved[name1] != null ? dR.getReserved(name1) : dR.h[name1] : fF.displayFormat(__map_reserved[name1] != null ? dR.getReserved(name1) : dR.h[name1]), displayFormat : fF.displayFormat, type : fF.type, readonly : fF.readonly, required : fF.required, handleChange : fF.handleChange, placeholder : fF.placeholder, validate : fF.validate});\n\t\t\t}\n\t\t}\n\t\treturn this.renderColumns();\n\t}\n\t,addFormColumns: function() {\n\t\tvar fields = this._fstate.fields.keys();\n\t\tvar name = fields;\n\t\twhile(name.hasNext()) {\n\t\t\tvar name1 = name.next();\n\t\t\tvar _this = this._fstate.fields;\n\t\t\tif((__map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1]).type == "Hidden") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar this1 = this.formColElements;\n\t\t\tvar v = [];\n\t\t\tvar _this1 = this1;\n\t\t\tif(__map_reserved[name1] != null) {\n\t\t\t\t_this1.setReserved(name1,v);\n\t\t\t} else {\n\t\t\t\t_this1.h[name1] = v;\n\t\t\t}\n\t\t}\n\t}\n\t,renderColumns: function() {\n\t\tvar fields = this.formColElements.keys();\n\t\tvar cols = [];\n\t\tvar col = 0;\n\t\tvar name = fields;\n\t\twhile(name.hasNext()) {\n\t\t\tvar name1 = name.next();\n\t\t\tcols.push({ "$$typeof" : $$tre, type : "div", props : { className : "col", \'data-name\' : name1, children : this.renderRows(name1)}, key : col++, ref : null});\n\t\t}\n\t\treturn cols;\n\t}\n\t,renderColumnHeaders: function() {\n\t\tvar fields = this._fstate.fields.keys();\n\t\tvar cols = [];\n\t\tvar name = fields;\n\t\twhile(name.hasNext()) {\n\t\t\tvar name1 = name.next();\n\t\t\tvar _this = this._fstate.fields;\n\t\t\tif((__map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1]).type == "Hidden") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar _this1 = this._fstate.fields;\n\t\t\tvar formField = __map_reserved[name1] != null ? _this1.getReserved(name1) : _this1.h[name1];\n\t\t\tcols.push({ "$$typeof" : $$tre, type : "div", props : { className : "col", children : { "$$typeof" : $$tre, type : "div", props : { className : "form-table-cell", children : { "$$typeof" : $$tre, type : "div", props : { className : "header", \'data-name\' : name1, children : formField.label}, key : null, ref : null}}, key : null, ref : null}}, key : null, ref : null});\n\t\t}\n\t\treturn cols;\n\t}\n\t,renderRowCells: function(fF,r) {\n\t\tvar _g = fF.type;\n\t\tif(_g == null) {\n\t\t\treturn { "$$typeof" : $$tre, type : "input", props : { name : fF.name, defaultValue : fF.value, onChange : fF.readonly ? null : fF.handleChange, readOnly : fF.readonly}, key : r, ref : null};\n\t\t} else {\n\t\t\tswitch(_g) {\n\t\t\tcase "Checkbox":\n\t\t\t\treturn { "$$typeof" : $$tre, type : "input", props : { name : fF.name, type : "checkbox", defaultValue : fF.value, readOnly : fF.readonly}, key : r, ref : null};\n\t\t\tcase "Hidden":\n\t\t\t\treturn { "$$typeof" : $$tre, type : "input", props : { name : fF.name, type : "hidden", defaultValue : fF.value, readOnly : fF.readonly}, key : r, ref : null};\n\t\t\tcase "Select":\n\t\t\t\treturn { "$$typeof" : $$tre, type : "select", props : { name : fF.name, defaultValue : fF.value, children : this.renderSelectOptions(fF.value)}, key : null, ref : null};\n\t\t\tdefault:\n\t\t\t\treturn { "$$typeof" : $$tre, type : "input", props : { name : fF.name, defaultValue : fF.value, onChange : fF.readonly ? null : fF.handleChange, readOnly : fF.readonly}, key : r, ref : null};\n\t\t\t}\n\t\t}\n\t}\n\t,renderRows: function(name) {\n\t\tvar elements = [];\n\t\tvar r = 0;\n\t\thaxe_Log.trace(name,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 353, className : "view.shared.io.DataAccessForm", methodName : "renderRows"});\n\t\tvar tmp = $$tre;\n\t\tvar tmp1 = $$tre;\n\t\tvar _this = this._fstate.fields;\n\t\tvar tmp2 = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];\n\t\telements.push({ "$$typeof" : tmp, type : "div", props : { className : "form-table-cell", style : { minHeight : "0px", height : "0px", overflow : "hidden", padding : "0px 0.3rem"}, children : { "$$typeof" : tmp1, type : "div", props : { className : "header", \'data-name\' : name, children : tmp2.label}, key : null, ref : null}}, key : null, ref : null});\n\t\tvar _g = 0;\n\t\tvar _this1 = this.formColElements;\n\t\tvar _g1 = __map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name];\n\t\twhile(_g < _g1.length) {\n\t\t\tvar fF = _g1[_g];\n\t\t\t++_g;\n\t\t\telements.push({ "$$typeof" : $$tre, type : "div", props : { className : "form-table-cell", children : this.renderRowCells(fF,r++)}, key : null, ref : null});\n\t\t}\n\t\treturn elements;\n\t}\n\t,renderSelectOptions: function(fel) {\n\t\tvar sel = fel;\n\t\tvar opts = ["Button","Hidden","Input","Checkbox","Radio","Select","TextArea"].map(function(fE) {\n\t\t\treturn fE;\n\t\t});\n\t\tvar rOpts = [];\n\t\tvar _g = 0;\n\t\twhile(_g < opts.length) {\n\t\t\tvar opt = opts[_g];\n\t\t\t++_g;\n\t\t\trOpts.push({ "$$typeof" : $$tre, type : "option", props : { children : opt}, key : null, ref : null});\n\t\t}\n\t\treturn rOpts;\n\t}\n\t,renderModalFormBodyHeader: function() {\n\t\tthis.modalFormTableHeader = React.createRef();\n\t\tif(this._fstate.dataTable == null || this._fstate.dataTable.length == 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromString("section"),{ ref : this.modalFormTableHeader, className : "modal-card-body header"},this.renderColumnHeaders());\n\t}\n\t,renderModalForm: function(fState) {\n\t\tvar _gthis = this;\n\t\tthis._fstate = fState;\n\t\tthis.modalFormTableBody = React.createRef();\n\t\tApp.modalBox.classList.toggle("is-active");\n\t\tvar tmp = react__$ReactNode_ReactNode_$Impl_$.fromComp(React.Fragment);\n\t\tvar tmp1 = { "$$typeof" : $$tre, type : "div", props : { className : "modal-background", onClick : function(_) {\n\t\t\tApp.modalBox.classList.toggle("is-active");\n\t\t}}, key : null, ref : null};\n\t\tvar tmp2 = $$tre;\n\t\tvar tmp3 = { "$$typeof" : $$tre, type : "header", props : { className : "modal-card-head", children : [{ "$$typeof" : $$tre, type : "p", props : { className : "modal-card-title", children : this._fstate.title}, key : null, ref : null},{ "$$typeof" : $$tre, type : "button", props : { className : "delete", \'aria-label\' : "close", onClick : function(_1) {\n\t\t\tApp.modalBox.classList.toggle("is-active");\n\t\t}}, key : null, ref : null}]}, key : null, ref : null};\n\t\tvar tmp4 = this.renderModalFormBodyHeader();\n\t\tvar tmp5 = React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromString("form"),{ ref : this.modalFormTableBody, className : "modal-card-body"},Lambda.empty(this._fstate.data) ? this.createElementsArray() : this.renderElements());\n\t\tvar tmp6 = $$tre;\n\t\tvar tmp7 = { "$$typeof" : $$tre, type : "button", props : { className : "button is-success", onClick : function(_2) {\n\t\t\tif(_gthis._fstate.handleSubmit != null) {\n\t\t\t\tvar fD = new FormData(react__$ReactRef_ReactRef_$Impl_$.get_current(_gthis.modalFormTableBody));\n\t\t\t\thaxe_Log.trace(fD,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 420, className : "view.shared.io.DataAccessForm", methodName : "renderModalForm"});\n\t\t\t\t_gthis._fstate.handleSubmit(fD);\n\t\t\t}\n\t\t\tApp.modalBox.classList.toggle("is-active");\n\t\t}, children : " Speichern"}, key : null, ref : null};\n\t\tvar tmp8 = $$tre;\n\t\treturn ReactDOM.render(React.createElement(tmp,{ },tmp1,{ "$$typeof" : tmp2, type : "div", props : { className : "modal-card", children : [tmp3,tmp4,tmp5,{ "$$typeof" : tmp6, type : "footer", props : { className : "modal-card-foot", children : [tmp7,{ "$$typeof" : tmp8, type : "button", props : { className : "button", onClick : function(_3) {\n\t\t\tApp.modalBox.classList.toggle("is-active");\n\t\t}, children : "Schließen"}, key : null, ref : null}]}, key : null, ref : null}]}, key : null, ref : null}),App.modalBox,$bind(this,this.adjustModalFormColumns));\n\t}\n\t,adjustModalFormColumns: function() {\n\t\thaxe_Log.trace(this.modalFormTableHeader,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 436, className : "view.shared.io.DataAccessForm", methodName : "adjustModalFormColumns"});\n\t\tvar bodyCols = react__$ReactRef_ReactRef_$Impl_$.get_current(this.modalFormTableBody).children;\n\t\tvar headerCols = react__$ReactRef_ReactRef_$Impl_$.get_current(this.modalFormTableHeader).children;\n\t\tvar i = 0;\n\t\tvar _g = 0;\n\t\twhile(_g < bodyCols.length) {\n\t\t\tvar child = bodyCols[_g];\n\t\t\t++_g;\n\t\t\thaxe_Log.trace(Std.string(child.classList) + ":" + child.offsetWidth,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 442, className : "view.shared.io.DataAccessForm", methodName : "adjustModalFormColumns"});\n\t\t\theaderCols.item(i++).setAttribute("style","width:" + child.offsetWidth + "px");\n\t\t}\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < headerCols.length) {\n\t\t\tvar child1 = headerCols[_g1];\n\t\t\t++_g1;\n\t\t\thaxe_Log.trace(Std.string(child1.classList) + ":" + child1.offsetWidth,{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 449, className : "view.shared.io.DataAccessForm", methodName : "adjustModalFormColumns"});\n\t\t}\n\t}\n\t,obj2map: function(obj,fields) {\n\t\tvar m = new haxe_ds_StringMap();\n\t\tif(fields == null) {\n\t\t\tfields = Reflect.fields(obj);\n\t\t}\n\t\tvar _g = 0;\n\t\twhile(_g < fields.length) {\n\t\t\tvar field = fields[_g];\n\t\t\t++_g;\n\t\t\tvar value = Reflect.field(obj,field);\n\t\t\tif(__map_reserved[field] != null) {\n\t\t\t\tm.setReserved(field,value);\n\t\t\t} else {\n\t\t\t\tm.h[field] = value;\n\t\t\t}\n\t\t}\n\t\treturn m;\n\t}\n\t,filterMap: function(m,keys) {\n\t\tvar r = new haxe_ds_StringMap();\n\t\tvar _g = 0;\n\t\twhile(_g < keys.length) {\n\t\t\tvar k = keys[_g];\n\t\t\t++_g;\n\t\t\tvar value = __map_reserved[k] != null ? m.getReserved(k) : m.h[k];\n\t\t\tif(__map_reserved[k] != null) {\n\t\t\t\tr.setReserved(k,value);\n\t\t\t} else {\n\t\t\t\tr.h[k] = value;\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\t,save: function(evt) {\n\t\tevt.preventDefault();\n\t\thaxe_Log.trace("your subclass has to override me to save anything!",{ fileName : "view/shared/io/DataAccessForm.hx", lineNumber : 484, className : "view.shared.io.DataAccessForm", methodName : "save"});\n\t}\n\t,__class__: view_shared_io_DataAccessForm\n});\nvar view_shared_io_DB = function(props) {\n\tvar _gthis = this;\n\tview_shared_io_DataAccessForm.call(this,props);\n\tthis.dataDisplay = view_dashboard_model_DBFormsModel.dataDisplay;\n\tview_shared_io_DB._instance = this;\n\tthis._menuItems = [{ handler : $bind(this,this.createFieldList), label : "Create Fields Table", segment : "createFieldList"},{ handler : $bind(this,this.showFieldList), label : "Table Fields", segment : "showFieldList"},{ handler : $bind(this,this.editTableFields), label : "Bearbeiten", disabled : this.state.selectedRows.length == 0}];\n\tvar sideMenu = this.state.sideMenu;\n\tvar _this = sideMenu.menuBlocks;\n\t(__map_reserved["DbTools"] != null ? _this.getReserved("DbTools") : _this.h["DbTools"]).items = function() {\n\t\treturn _gthis._menuItems;\n\t};\n\tthis.state = react_ReactUtil.copy(this.state,{ sideMenu : sideMenu});\n};\n$hxClasses["view.shared.io.DB"] = view_shared_io_DB;\nview_shared_io_DB.__name__ = "view.shared.io.DB";\nview_shared_io_DB.menuItems = function() {\n\tif(view_shared_io_DB._instance == null) {\n\t\treturn [];\n\t} else {\n\t\treturn view_shared_io_DB._instance._menuItems;\n\t}\n};\nview_shared_io_DB.__super__ = view_shared_io_DataAccessForm;\nview_shared_io_DB.prototype = $extend(view_shared_io_DataAccessForm.prototype,{\n\tcreateFieldList: function(ev) {\n\t\tvar _gthis = this;\n\t\thaxe_Log.trace("hi :)",{ fileName : "view/shared/io/DB.hx", lineNumber : 66, className : "view.shared.io.DB", methodName : "createFieldList"});\n\t\tthis.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.load("" + Std.string(App.config.api),{ userName : this.props.userName, jwt : this.props.jwt, className : "tools.DB", action : "createFieldList", update : "1"},function(data) {\n\t\t\thaxe_Log.trace(data.toString(),{ fileName : "view/shared/io/DB.hx", lineNumber : 78, className : "view.shared.io.DB", methodName : "createFieldList"});\n\t\t\tif(__map_reserved["error"] != null ? data.existsReserved("error") : data.h.hasOwnProperty("error")) {\n\t\t\t\thaxe_Log.trace(__map_reserved["error"] != null ? data.getReserved("error") : data.h["error"],{ fileName : "view/shared/io/DB.hx", lineNumber : 81, className : "view.shared.io.DB", methodName : "createFieldList"});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_gthis.setState({ data : data, viewClassPath : "shared.io.DB.showFieldList"});\n\t\t})));\n\t\thaxe_Log.trace(this.props.history,{ fileName : "view/shared/io/DB.hx", lineNumber : 86, className : "view.shared.io.DB", methodName : "createFieldList"});\n\t\thaxe_Log.trace(this.props.match,{ fileName : "view/shared/io/DB.hx", lineNumber : 87, className : "view.shared.io.DB", methodName : "createFieldList"});\n\t}\n\t,editTableFields: function(ev) {\n\t\thaxe_Log.trace(this.state.selectedRows.length,{ fileName : "view/shared/io/DB.hx", lineNumber : 93, className : "view.shared.io.DB", methodName : "editTableFields"});\n\t\tvar data = this.selectedRowsMap();\n\t\tvar _this = this.dataAccess;\n\t\tvar view1 = (__map_reserved["editTableFields"] != null ? _this.getReserved("editTableFields") : _this.h["editTableFields"]).view.copy();\n\t\tvar _this1 = this.dataAccess;\n\t\tvar _this2 = (__map_reserved["editTableFields"] != null ? _this1.getReserved("editTableFields") : _this1.h["editTableFields"]).view;\n\t\thaxe_Log.trace(__map_reserved["table_name"] != null ? _this2.getReserved("table_name") : _this2.h["table_name"],{ fileName : "view/shared/io/DB.hx", lineNumber : 96, className : "view.shared.io.DB", methodName : "editTableFields"});\n\t\tvar tmp = new haxe_ds_StringMap();\n\t\tvar _this3 = this.dataAccess;\n\t\tthis.renderModalForm({ data : tmp, dataTable : data, handleSubmit : $bind(this,this.saveTableFields), viewClassPath : "shared.io.DB.editTableFields", fields : view1, valuesArray : this.createStateValuesArray(data,(__map_reserved["editTableFields"] != null ? _this3.getReserved("editTableFields") : _this3.h["editTableFields"]).view), loading : false, title : "Tabellenfelder Eigenschaften"});\n\t}\n\t,saveTableFields: function(vA) {\n\t\tme_cunity_debug_Out.dumpObject(vA,{ fileName : "view/shared/io/DB.hx", lineNumber : 122, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\thaxe_Log.trace(vA.entries(),{ fileName : "view/shared/io/DB.hx", lineNumber : 123, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\thaxe_Log.trace(vA.entries().next(),{ fileName : "view/shared/io/DB.hx", lineNumber : 124, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\tvar keys = vA.keys();\n\t\tvar k = keys.next();\n\t\thaxe_Log.trace(k,{ fileName : "view/shared/io/DB.hx", lineNumber : 127, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\thaxe_Log.trace(keys.next(),{ fileName : "view/shared/io/DB.hx", lineNumber : 128, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\tvar _this = this.dataAccess;\n\t\tvar keys1 = (__map_reserved["editTableFields"] != null ? _this.getReserved("editTableFields") : _this.h["editTableFields"]).view.keys();\n\t\tvar k1 = keys1;\n\t\twhile(k1.hasNext()) {\n\t\t\tvar k2 = k1.next();\n\t\t\thaxe_Log.trace(k2,{ fileName : "view/shared/io/DB.hx", lineNumber : 141, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\t\thaxe_Log.trace(vA.getAll(k2),{ fileName : "view/shared/io/DB.hx", lineNumber : 142, className : "view.shared.io.DB", methodName : "saveTableFields"});\n\t\t}\n\t}\n\t,showFieldList: function(ev) {\n\t\tvar _gthis = this;\n\t\tthis.selectAllRows(true);\n\t\tthis.requests.push(haxe_ds_Either.Right(view_shared_io_BinaryLoader.create("" + Std.string(App.config.api),{ userName : this.props.userName, jwt : this.props.jwt, className : "tools.DB", action : "createFieldList"},function(dBytes) {\n\t\t\tvar u = new hxbit_Serializer();\n\t\t\tvar data = u.unserialize(dBytes,shared_DbData);\n\t\t\tif(data.dataRows.length == 0) {\n\t\t\t\tvar error = data.dataErrors;\n\t\t\t\tvar eK = error.keys();\n\t\t\t\tvar hasError = false;\n\t\t\t\twhile(eK.hasNext()) {\n\t\t\t\t\thasError = true;\n\t\t\t\t\tvar key = eK.next();\n\t\t\t\t\thaxe_Log.trace(Std.string(__map_reserved[key] != null ? error.getReserved(key) : error.h[key]),{ fileName : "view/shared/io/DB.hx", lineNumber : 174, className : "view.shared.io.DB", methodName : "showFieldList"});\n\t\t\t\t}\n\t\t\t\tif(!hasError) {\n\t\t\t\t\thaxe_Log.trace("Keine Daten!",{ fileName : "view/shared/io/DB.hx", lineNumber : 177, className : "view.shared.io.DB", methodName : "showFieldList"});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_gthis.setState({ dataTable : data.dataRows, viewClassPath : "shared.io.DB.showFieldList"});\n\t\t})));\n\t\tthis.setState({ viewClassPath : "shared.io.DB.showFieldList"});\n\t}\n\t,componentDidMount: function() {\n\t\tview_shared_io_DataAccessForm.prototype.componentDidMount.call(this);\n\t\tvar _g2 = new haxe_ds_StringMap();\n\t\tvar _g = new haxe_ds_StringMap();\n\t\tif(__map_reserved["selectedRows"] != null) {\n\t\t\t_g.setReserved("selectedRows",null);\n\t\t} else {\n\t\t\t_g.h["selectedRows"] = null;\n\t\t}\n\t\tvar _g1 = new haxe_ds_StringMap();\n\t\tvar value = { label : "Tabelle", readonly : true};\n\t\tif(__map_reserved["table_name"] != null) {\n\t\t\t_g1.setReserved("table_name",value);\n\t\t} else {\n\t\t\t_g1.h["table_name"] = value;\n\t\t}\n\t\tvar value1 = { label : "Feldname", readonly : true};\n\t\tif(__map_reserved["field_name"] != null) {\n\t\t\t_g1.setReserved("field_name",value1);\n\t\t} else {\n\t\t\t_g1.h["field_name"] = value1;\n\t\t}\n\t\tvar value2 = { label : "Eingabefeld", type : "Select"};\n\t\tif(__map_reserved["element"] != null) {\n\t\t\t_g1.setReserved("element",value2);\n\t\t} else {\n\t\t\t_g1.h["element"] = value2;\n\t\t}\n\t\tvar value3 = { label : "Readonly", type : "Checkbox"};\n\t\tif(__map_reserved["readonly"] != null) {\n\t\t\t_g1.setReserved("readonly",value3);\n\t\t} else {\n\t\t\t_g1.h["readonly"] = value3;\n\t\t}\n\t\tvar value4 = { label : "Required", type : "Checkbox"};\n\t\tif(__map_reserved["required"] != null) {\n\t\t\t_g1.setReserved("required",value4);\n\t\t} else {\n\t\t\t_g1.h["required"] = value4;\n\t\t}\n\t\tvar value5 = { label : "Eigenschaften", readonly : true, type : "Hidden"};\n\t\tif(__map_reserved["any"] != null) {\n\t\t\t_g1.setReserved("any",value5);\n\t\t} else {\n\t\t\t_g1.h["any"] = value5;\n\t\t}\n\t\tvar value6 = { source : _g, view : _g1};\n\t\tif(__map_reserved["editTableFields"] != null) {\n\t\t\t_g2.setReserved("editTableFields",value6);\n\t\t} else {\n\t\t\t_g2.h["editTableFields"] = value6;\n\t\t}\n\t\tvar value7 = { source : null, view : null};\n\t\tif(__map_reserved["saveTableFields"] != null) {\n\t\t\t_g2.setReserved("saveTableFields",value7);\n\t\t} else {\n\t\t\t_g2.h["saveTableFields"] = value7;\n\t\t}\n\t\tthis.dataAccess = _g2;\n\t}\n\t,renderResults: function() {\n\t\tif(this.state.data != null) {\n\t\t\tvar _g = this.state.viewClassPath;\n\t\t\tif(_g == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tswitch(_g) {\n\t\t\t\tcase "shared.io.DB.editTableFields":\n\t\t\t\t\treturn null;\n\t\t\t\tcase "shared.io.DB.showFieldList":\n\t\t\t\t\tvar tmp = $$tre;\n\t\t\t\t\tvar tmp1 = this.props;\n\t\t\t\t\tvar tmp2 = this.state.dataTable == null ? null : this.state.dataTable;\n\t\t\t\t\tvar _this = this.dataDisplay;\n\t\t\t\t\tvar tmp3 = __map_reserved["fieldsList"] != null ? _this.getReserved("fieldsList") : _this.h["fieldsList"];\n\t\t\t\t\treturn { "$$typeof" : tmp, type : view_table_Table, props : Object.assign({ },tmp1,{ id : "fieldsList", data : tmp2, dataState : tmp3, parentForm : this, className : "is-striped is-hoverable", fullWidth : true}), key : null, ref : null};\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t,render: function() {\n\t\tif(this.state.values != null) {\n\t\t\thaxe_Log.trace(this.state.values.toString(),{ fileName : "view/shared/io/DB.hx", lineNumber : 234, className : "view.shared.io.DB", methodName : "render"});\n\t\t}\n\t\thaxe_Log.trace(this.props.match.params.segment,{ fileName : "view/shared/io/DB.hx", lineNumber : 235, className : "view.shared.io.DB", methodName : "render"});\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { className : "columns", children : [{ "$$typeof" : $$tre, type : "form", props : { className : "tabComponentForm", children : this.renderResults()}, key : null, ref : null},{ "$$typeof" : $$tre, type : view_shared_SMenu, props : { className : "menu", menuBlocks : this.state.sideMenu.menuBlocks}, key : null, ref : null}]}, key : null, ref : null};\n\t}\n\t,updateMenu: function() {\n\t\tvar _gthis = this;\n\t\tvar c = js_Boot.getClass(this);\n\t\thaxe_Log.trace("" + c.__name__ + " task",{ fileName : "view/shared/io/DB.hx", lineNumber : 249, className : "view.shared.io.DB", methodName : "updateMenu"});\n\t\tvar sideMenu = this.state.sideMenu;\n\t\tvar _this = sideMenu.menuBlocks;\n\t\t(__map_reserved["DbTools"] != null ? _this.getReserved("DbTools") : _this.h["DbTools"]).items = function() {\n\t\t\treturn [{ handler : $bind(_gthis,_gthis.createFieldList), label : "Create Fields Table", segment : "createFieldList"},{ handler : $bind(_gthis,_gthis.showFieldList), label : "Table Fields", segment : "showFieldList"},{ handler : $bind(_gthis,_gthis.editTableFields), label : "Bearbeiten", disabled : _gthis.state.selectedRows.length == 0}];\n\t\t};\n\t\treturn sideMenu;\n\t}\n\t,__class__: view_shared_io_DB\n});\nvar view_shared_io_Loader = function(cb,p,r) {\n\tthis.cB = cb;\n\tthis.params = p;\n\tthis.post = p != null;\n\tthis.req = r;\n};\n$hxClasses["view.shared.io.Loader"] = view_shared_io_Loader;\nview_shared_io_Loader.__name__ = "view.shared.io.Loader";\nview_shared_io_Loader.load = function(url,params,cB) {\n\tvar req = new haxe_http_HttpJs(url);\n\tif(params != null) {\n\t\tvar _g = 0;\n\t\tvar _g1 = Reflect.fields(params);\n\t\twhile(_g < _g1.length) {\n\t\t\tvar k = _g1[_g];\n\t\t\t++_g;\n\t\t\treq.addParameter(k,Reflect.field(params,k));\n\t\t}\n\t}\n\treq.addHeader("Access-Control-Allow-Methods","PUT, GET, POST, DELETE, OPTIONS");\n\treq.addHeader("Access-Control-Allow-Origin","*");\n\tvar loader = new view_shared_io_Loader(cB,params,req);\n\treq.onData = $bind(loader,loader._onData);\n\treq.onError = function(err) {\n\t\thaxe_Log.trace(err,{ fileName : "view/shared/io/Loader.hx", lineNumber : 35, className : "view.shared.io.Loader", methodName : "load"});\n\t};\n\thaxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "view/shared/io/Loader.hx", lineNumber : 36, className : "view.shared.io.Loader", methodName : "load"});\n\treq.withCredentials = true;\n\treq.request(params != null);\n\treturn req;\n};\nview_shared_io_Loader.loadData = function(url,params,cB) {\n\tvar loader = view_shared_io_Loader.queue(url,params,cB);\n\tview_shared_io_Loader.rqs.push(loader.req);\n\tif(view_shared_io_Loader.rqs.length == 1) {\n\t\tview_shared_io_Loader.rqs.shift().request(loader.post);\n\t}\n\treturn loader.req;\n};\nview_shared_io_Loader.queue = function(url,params,cB) {\n\tvar req = new haxe_http_HttpJs(url);\n\tif(params != null) {\n\t\tvar _g = 0;\n\t\tvar _g1 = Reflect.fields(params);\n\t\twhile(_g < _g1.length) {\n\t\t\tvar k = _g1[_g];\n\t\t\t++_g;\n\t\t\treq.addParameter(k,Reflect.field(params,k));\n\t\t}\n\t}\n\treq.addHeader("Access-Control-Allow-Methods","PUT, GET, POST, DELETE, OPTIONS");\n\treq.addHeader("Access-Control-Allow-Origin","*");\n\tvar loader = new view_shared_io_Loader(cB,params,req);\n\tloader.url = url;\n\treq.onData = $bind(loader,loader._onQueueData);\n\treq.onError = function(err) {\n\t\thaxe_Log.trace(err,{ fileName : "view/shared/io/Loader.hx", lineNumber : 134, className : "view.shared.io.Loader", methodName : "queue"});\n\t};\n\thaxe_Log.trace("POST? " + Std.string(params) != null,{ fileName : "view/shared/io/Loader.hx", lineNumber : 135, className : "view.shared.io.Loader", methodName : "queue"});\n\treq.withCredentials = true;\n\treturn loader;\n};\nview_shared_io_Loader.prototype = {\n\tcB: null\n\t,params: null\n\t,post: null\n\t,req: null\n\t,url: null\n\t,_onData: function(response) {\n\t\tif(response.length > 0) {\n\t\t\thaxe_Log.trace(response,{ fileName : "view/shared/io/Loader.hx", lineNumber : 60, className : "view.shared.io.Loader", methodName : "_onData"});\n\t\t\tvar dataObj = null;\n\t\t\ttry {\n\t\t\t\tdataObj = haxe_Unserializer.run(response);\n\t\t\t} catch( ex ) {\n\t\t\t\thaxe_Log.trace((ex instanceof js__$Boot_HaxeError) ? ex.val : ex,{ fileName : "view/shared/io/Loader.hx", lineNumber : 67, className : "view.shared.io.Loader", methodName : "_onData"});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(__map_reserved["ERROR"] != null ? dataObj.existsReserved("ERROR") : dataObj.h.hasOwnProperty("ERROR")) {\n\t\t\t\thaxe_Log.trace(__map_reserved["ERROR"] != null ? dataObj.getReserved("ERROR") : dataObj.h["ERROR"],{ fileName : "view/shared/io/Loader.hx", lineNumber : 72, className : "view.shared.io.Loader", methodName : "_onData"});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(this.cB != null) {\n\t\t\t\tthis.cB(dataObj);\n\t\t\t}\n\t\t}\n\t}\n\t,_onError: function(err) {\n\t\thaxe_Log.trace(err,{ fileName : "view/shared/io/Loader.hx", lineNumber : 82, className : "view.shared.io.Loader", methodName : "_onError"});\n\t}\n\t,_onQueueData: function(response) {\n\t\thaxe_Log.trace(response,{ fileName : "view/shared/io/Loader.hx", lineNumber : 87, className : "view.shared.io.Loader", methodName : "_onQueueData"});\n\t\tif(response.length > 0) {\n\t\t\tvar dataObj = null;\n\t\t\ttry {\n\t\t\t\tdataObj = haxe_Unserializer.run(response);\n\t\t\t\thaxe_Log.trace(dataObj,{ fileName : "view/shared/io/Loader.hx", lineNumber : 93, className : "view.shared.io.Loader", methodName : "_onQueueData"});\n\t\t\t} catch( ex ) {\n\t\t\t\thaxe_Log.trace((ex instanceof js__$Boot_HaxeError) ? ex.val : ex,{ fileName : "view/shared/io/Loader.hx", lineNumber : 97, className : "view.shared.io.Loader", methodName : "_onQueueData"});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(response.indexOf("ERROR") > -1) {\n\t\t\t\thaxe_Log.trace(response,{ fileName : "view/shared/io/Loader.hx", lineNumber : 102, className : "view.shared.io.Loader", methodName : "_onQueueData"});\n\t\t\t} else if(this.cB != null) {\n\t\t\t\tthis.cB(dataObj);\n\t\t\t}\n\t\t\tif(view_shared_io_Loader.rqs.length > 0) {\n\t\t\t\tview_shared_io_Loader.rqs.shift().request(this.post);\n\t\t\t}\n\t\t}\n\t}\n\t,__class__: view_shared_io_Loader\n};\nvar view_shared_io_User = function(props) {\n\tvar _gthis = this;\n\tview_shared_io_DataAccessForm.call(this,props);\n\tview_shared_io_User._instance = this;\n\tthis._menuItems = [{ handler : $bind(this,this.edit), label : "Bearbeiten", segment : "edit"},{ handler : $bind(this,this.save), label : "Speichern", disabled : this.state.clean}];\n\tvar sideMenu = this.state.sideMenu;\n\tvar _this = sideMenu.menuBlocks;\n\t(__map_reserved["user"] != null ? _this.getReserved("user") : _this.h["user"]).items = function() {\n\t\treturn _gthis._menuItems;\n\t};\n\tthis.setState({ sideMenu : sideMenu});\n\thaxe_Log.trace(this._menuItems,{ fileName : "view/shared/io/User.hx", lineNumber : 137, className : "view.shared.io.User", methodName : "new"});\n};\n$hxClasses["view.shared.io.User"] = view_shared_io_User;\nview_shared_io_User.__name__ = "view.shared.io.User";\nview_shared_io_User.menuItems = function() {\n\tif(view_shared_io_User._instance == null) {\n\t\treturn [];\n\t} else {\n\t\treturn view_shared_io_User._instance._menuItems;\n\t}\n};\nview_shared_io_User.__super__ = view_shared_io_DataAccessForm;\nview_shared_io_User.prototype = $extend(view_shared_io_DataAccessForm.prototype,{\n\thandleSubmit: function(e) {\n\t\te.preventDefault();\n\t}\n\t,edit: function(ev) {\n\t\tvar _gthis = this;\n\t\thaxe_Log.trace("hi :)",{ fileName : "view/shared/io/User.hx", lineNumber : 58, className : "view.shared.io.User", methodName : "edit"});\n\t\tvar _this = this.dataAccess;\n\t\tthis.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.loadData("" + Std.string(App.config.api),{ userName : this.props.userName, jwt : this.props.jwt, className : "auth.User", action : "edit", filter : "user_name|" + this.props.userName, dataSource : haxe_Serializer.run((__map_reserved["edit"] != null ? _this.getReserved("edit") : _this.h["edit"]).source)},function(data) {\n\t\t\thaxe_Log.trace(data,{ fileName : "view/shared/io/User.hx", lineNumber : 71, className : "view.shared.io.User", methodName : "edit"});\n\t\t\tif(data == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _this1 = data[0];\n\t\t\tif(__map_reserved["ERROR"] != null ? _this1.existsReserved("ERROR") : _this1.h.hasOwnProperty("ERROR")) {\n\t\t\t\tvar _this2 = data[0];\n\t\t\t\thaxe_Log.trace(__map_reserved["ERROR"] != null ? _this2.getReserved("ERROR") : _this2.h["ERROR"],{ fileName : "view/shared/io/User.hx", lineNumber : 76, className : "view.shared.io.User", methodName : "edit"});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _this3 = _gthis.dataAccess;\n\t\t\tvar a = (__map_reserved["edit"] != null ? _this3.getReserved("edit") : _this3.h["edit"]).view;\n\t\t\tvar data1 = data[0];\n\t\t\tvar _this4 = _gthis.dataAccess;\n\t\t\tvar a1 = __map_reserved["edit"] != null ? _this4.getReserved("edit") : _this4.h["edit"];\n\t\t\t_gthis.setState({ data : data[0], fields : a, values : _gthis.createStateValues(data1,a1.view), loading : false});\n\t\t})));\n\t}\n\t,save: function(evt) {\n\t\tvar _gthis = this;\n\t\tevt.preventDefault();\n\t\thaxe_Log.trace(this.state.data.toString(),{ fileName : "view/shared/io/User.hx", lineNumber : 95, className : "view.shared.io.User", methodName : "save"});\n\t\thaxe_Log.trace(this.state.values.toString(),{ fileName : "view/shared/io/User.hx", lineNumber : 96, className : "view.shared.io.User", methodName : "save"});\n\t\tvar _this = this.dataAccess;\n\t\tvar skeys = (__map_reserved["edit"] != null ? _this.getReserved("edit") : _this.h["edit"]).view.keys().arr;\n\t\tskeys = skeys.filter(function(k) {\n\t\t\tvar _this1 = _gthis.dataAccess;\n\t\t\tvar _this2 = (__map_reserved["edit"] != null ? _this1.getReserved("edit") : _this1.h["edit"]).view;\n\t\t\treturn !(__map_reserved[k] != null ? _this2.getReserved(k) : _this2.h[k]).readonly;\n\t\t});\n\t\tthis.requests.push(haxe_ds_Either.Left(view_shared_io_Loader.load("" + Std.string(App.config.api),{ userName : this.props.userName, jwt : this.props.jwt, className : "auth.User", action : "save", filter : "user_name|" + this.props.userName, dataSource : haxe_Serializer.run(this.filterMap(this.state.values,skeys))},function(data) {\n\t\t\thaxe_Log.trace(data.toString(),{ fileName : "view/shared/io/User.hx", lineNumber : 119, className : "view.shared.io.User", methodName : "save"});\n\t\t\t_gthis.setState({ data : data, loading : false});\n\t\t})));\n\t}\n\t,updateMenu: function() {\n\t\tvar _gthis = this;\n\t\tvar c = js_Boot.getClass(this);\n\t\thaxe_Log.trace("" + c.__name__ + " task",{ fileName : "view/shared/io/User.hx", lineNumber : 142, className : "view.shared.io.User", methodName : "updateMenu"});\n\t\tvar sideMenu = this.state.sideMenu;\n\t\tvar _this = sideMenu.menuBlocks;\n\t\t(__map_reserved["user"] != null ? _this.getReserved("user") : _this.h["user"]).items = function() {\n\t\t\treturn [{ handler : $bind(_gthis,_gthis.edit), label : "Bearbeiten", segment : "edit"},{ handler : $bind(_gthis,_gthis.save), label : "Speichern", disabled : _gthis.state.clean}];\n\t\t};\n\t\treturn sideMenu;\n\t}\n\t,render: function() {\n\t\tif(this.dataAccess == null) {\n\t\t\tvar _g4 = new haxe_ds_StringMap();\n\t\t\tvar _g2 = new haxe_ds_StringMap();\n\t\t\tvar _g = new haxe_ds_StringMap();\n\t\t\tif(__map_reserved["alias"] != null) {\n\t\t\t\t_g.setReserved("alias","us");\n\t\t\t} else {\n\t\t\t\t_g.h["alias"] = "us";\n\t\t\t}\n\t\t\tif(__map_reserved["fields"] != null) {\n\t\t\t\t_g.setReserved("fields","user_name,last_login");\n\t\t\t} else {\n\t\t\t\t_g.h["fields"] = "user_name,last_login";\n\t\t\t}\n\t\t\tvar value = _g;\n\t\t\tif(__map_reserved["users"] != null) {\n\t\t\t\t_g2.setReserved("users",value);\n\t\t\t} else {\n\t\t\t\t_g2.h["users"] = value;\n\t\t\t}\n\t\t\tvar _g1 = new haxe_ds_StringMap();\n\t\t\tif(__map_reserved["alias"] != null) {\n\t\t\t\t_g1.setReserved("alias","co");\n\t\t\t} else {\n\t\t\t\t_g1.h["alias"] = "co";\n\t\t\t}\n\t\t\tif(__map_reserved["fields"] != null) {\n\t\t\t\t_g1.setReserved("fields","first_name,last_name,email");\n\t\t\t} else {\n\t\t\t\t_g1.h["fields"] = "first_name,last_name,email";\n\t\t\t}\n\t\t\tif(__map_reserved["jCond"] != null) {\n\t\t\t\t_g1.setReserved("jCond","contact=co.id");\n\t\t\t} else {\n\t\t\t\t_g1.h["jCond"] = "contact=co.id";\n\t\t\t}\n\t\t\tvar value1 = _g1;\n\t\t\tif(__map_reserved["contacts"] != null) {\n\t\t\t\t_g2.setReserved("contacts",value1);\n\t\t\t} else {\n\t\t\t\t_g2.h["contacts"] = value1;\n\t\t\t}\n\t\t\tvar _g3 = new haxe_ds_StringMap();\n\t\t\tvar value2 = { label : "UserID", readonly : true, type : "Hidden"};\n\t\t\tif(__map_reserved["user_name"] != null) {\n\t\t\t\t_g3.setReserved("user_name",value2);\n\t\t\t} else {\n\t\t\t\t_g3.h["user_name"] = value2;\n\t\t\t}\n\t\t\tvar value3 = { label : "Vorname"};\n\t\t\tif(__map_reserved["first_name"] != null) {\n\t\t\t\t_g3.setReserved("first_name",value3);\n\t\t\t} else {\n\t\t\t\t_g3.h["first_name"] = value3;\n\t\t\t}\n\t\t\tvar value4 = { label : "Name"};\n\t\t\tif(__map_reserved["last_name"] != null) {\n\t\t\t\t_g3.setReserved("last_name",value4);\n\t\t\t} else {\n\t\t\t\t_g3.h["last_name"] = value4;\n\t\t\t}\n\t\t\tvar value5 = { label : "Email"};\n\t\t\tif(__map_reserved["email"] != null) {\n\t\t\t\t_g3.setReserved("email",value5);\n\t\t\t} else {\n\t\t\t\t_g3.h["email"] = value5;\n\t\t\t}\n\t\t\tvar value6 = { label : "Letze Anmeldung", readonly : true, displayFormat : view_shared_io_DataAccessForm.localDate};\n\t\t\tif(__map_reserved["last_login"] != null) {\n\t\t\t\t_g3.setReserved("last_login",value6);\n\t\t\t} else {\n\t\t\t\t_g3.h["last_login"] = value6;\n\t\t\t}\n\t\t\tvar value7 = { source : _g2, view : _g3};\n\t\t\tif(__map_reserved["edit"] != null) {\n\t\t\t\t_g4.setReserved("edit",value7);\n\t\t\t} else {\n\t\t\t\t_g4.h["edit"] = value7;\n\t\t\t}\n\t\t\tvar value8 = { source : null, view : null};\n\t\t\tif(__map_reserved["save"] != null) {\n\t\t\t\t_g4.setReserved("save",value8);\n\t\t\t} else {\n\t\t\t\t_g4.h["save"] = value8;\n\t\t\t}\n\t\t\tthis.dataAccess = _g4;\n\t\t}\n\t\tif(this.state.values != null) {\n\t\t\thaxe_Log.trace(this.state.values.toString(),{ fileName : "view/shared/io/User.hx", lineNumber : 180, className : "view.shared.io.User", methodName : "render"});\n\t\t}\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { className : "columns", children : [{ "$$typeof" : $$tre, type : "div", props : { className : "tabComponentForm", children : { "$$typeof" : $$tre, type : "form", props : { className : "form60", children : this.renderElements()}, key : null, ref : null}}, key : null, ref : null},{ "$$typeof" : $$tre, type : view_shared_SMenu, props : { className : "menu", menuBlocks : this.state.sideMenu.menuBlocks}, key : null, ref : null}]}, key : null, ref : null};\n\t}\n\t,__class__: view_shared_io_User\n});\nvar view_table_Table = function(props) {\n\tReact_Component.call(this,props);\n\tthis.headerUpdated = false;\n\tthis.fieldNames = [];\n\tvar k = props.dataState.columns.keys();\n\twhile(k.hasNext()) {\n\t\tvar k1 = k.next();\n\t\tthis.fieldNames.push(k1);\n\t}\n\thaxe_Log.trace(this.fieldNames,{ fileName : "view/table/Table.hx", lineNumber : 155, className : "view.table.Table", methodName : "new"});\n\tthis.state = { selectedRows : []};\n};\n$hxClasses["view.table.Table"] = view_table_Table;\nview_table_Table.__name__ = "view.table.Table";\nview_table_Table.__super__ = React_Component;\nview_table_Table.prototype = $extend(React_Component.prototype,{\n\tfieldNames: null\n\t,tableRef: null\n\t,fixedHeader: null\n\t,rowRef: null\n\t,tHeadRef: null\n\t,visibleColumns: null\n\t,headerUpdated: null\n\t,render: function() {\n\t\tif(this.props.data != null) {\n\t\t\thaxe_Log.trace(this.props.data.length,{ fileName : "view/table/Table.hx", lineNumber : 162, className : "view.table.Table", methodName : "render"});\n\t\t}\n\t\thaxe_Log.trace(this.props.className,{ fileName : "view/table/Table.hx", lineNumber : 163, className : "view.table.Table", methodName : "render"});\n\t\tif(this.props.data == null || this.props.data.length == 0) {\n\t\t\tvar tmp = $$tre;\n\t\t\tvar tmp1 = $$tre;\n\t\t\tvar tmp2 = $$tre;\n\t\t\treturn { "$$typeof" : tmp, type : "section", props : { className : "hero is-alt", style : { flexGrow : 1}, children : { "$$typeof" : tmp1, type : "div", props : { className : "hero-body", style : { flexGrow : 0}, children : { "$$typeof" : tmp2, type : "div", props : { className : "loader", style : { width : "6rem", height : "6rem", margin : "auto", borderWidth : "0.64rem", alignSelf : "center"}}, key : null, ref : null}}, key : null, ref : null}}, key : null, ref : null};\n\t\t}\n\t\tthis.tableRef = React.createRef();\n\t\tthis.fixedHeader = React.createRef();\n\t\tthis.tHeadRef = React.createRef();\n\t\tthis.rowRef = React.createRef();\n\t\treturn { "$$typeof" : $$tre, type : "div", props : { className : "fixed-grid-container", children : [{ "$$typeof" : $$tre, type : "div", props : { className : "header-background", children : { "$$typeof" : $$tre, type : "table", props : { className : "table head", children : { "$$typeof" : $$tre, type : "thead", props : { children : React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromString("tr"),{ ref : this.fixedHeader},this.renderHeaderDisplay())}, key : null, ref : null}}, key : null, ref : null}}, key : null, ref : null},{ "$$typeof" : $$tre, type : "div", props : { className : "grid-container-inner", children : React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromString("table"),{ ref : this.tableRef, className : "table " + this.props.className},{ "$$typeof" : $$tre, type : "thead", props : { children : React.createElement(react__$ReactNode_ReactNode_$Impl_$.fromString("tr"),{ ref : this.tHeadRef},this.renderHeaderRow())}, key : null, ref : null},{ "$$typeof" : $$tre, type : "tbody", props : { children : this.renderRows()}, key : null, ref : null})}, key : null, ref : null},{ "$$typeof" : $$tre, type : "div", props : { className : "pager"}, key : null, ref : null}]}, key : null, ref : null};\n\t}\n\t,renderHeaderRow: function() {\n\t\tif(this.props.dataState == null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar headerRow = [];\n\t\tvar field = this.props.dataState.columns.keys();\n\t\twhile(field.hasNext()) {\n\t\t\tvar field1 = field.next();\n\t\t\tvar _this = this.props.dataState.columns;\n\t\t\tvar hC = __map_reserved[field1] != null ? _this.getReserved(field1) : _this.h[field1];\n\t\t\tif(hC.show == false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\theaderRow.push({ "$$typeof" : $$tre, type : "th", props : { children : { "$$typeof" : $$tre, type : "div", props : { className : "th-box " + (hC.headerClassName != null ? hC.headerClassName : hC.className), children : [hC.label != null ? hC.label : hC.name,{ "$$typeof" : $$tre, type : "span", props : { className : "sort-box fa fa-sort"}, key : null, ref : null}]}, key : null, ref : null}}, key : field1, ref : null});\n\t\t}\n\t\thaxe_Log.trace(headerRow.length,{ fileName : "view/table/Table.hx", lineNumber : 232, className : "view.table.Table", methodName : "renderHeaderRow"});\n\t\treturn headerRow;\n\t}\n\t,renderHeaderDisplay: function() {\n\t\tif(this.props.dataState == null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar headerRow = [];\n\t\tvar field = this.props.dataState.columns.keys();\n\t\twhile(field.hasNext()) {\n\t\t\tvar field1 = field.next();\n\t\t\tvar _this = this.props.dataState.columns;\n\t\t\tvar hC = __map_reserved[field1] != null ? _this.getReserved(field1) : _this.h[field1];\n\t\t\tif(hC.show == false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.visibleColumns++;\n\t\t\theaderRow.push({ "$$typeof" : $$tre, type : "th", props : { children : { "$$typeof" : $$tre, type : "div", props : { className : "th-box " + (hC.headerClassName != null ? hC.headerClassName : hC.className), children : [hC.label != null ? hC.label : hC.name,{ "$$typeof" : $$tre, type : "span", props : { className : "sort-box fa fa-sort"}, key : null, ref : null}]}, key : null, ref : null}}, key : field1, ref : null});\n\t\t}\n\t\treturn headerRow;\n\t}\n\t,renderCells: function(rdMap,row) {\n\t\tvar _gthis = this;\n\t\tvar column = 0;\n\t\tvar cells = this.fieldNames.map(function(fN) {\n\t\t\tvar _this = _gthis.props.dataState.columns;\n\t\t\tvar columnDataState = __map_reserved[fN] != null ? _this.getReserved(fN) : _this.h[fN];\n\t\t\tcolumn += 1;\n\t\t\tvar cD = { cellFormat : columnDataState.cellFormat, className : columnDataState.className, data : __map_reserved[fN] != null ? rdMap.getReserved(fN) : rdMap.h[fN], dataDisplay : columnDataState.cellFormat != null ? columnDataState.cellFormat(__map_reserved[fN] != null ? rdMap.getReserved(fN) : rdMap.h[fN]) : __map_reserved[fN] != null ? rdMap.getReserved(fN) : rdMap.h[fN], flexGrow : columnDataState.flexGrow, name : fN, pos : { column : column - 1, row : row}, show : columnDataState.show != false};\n\t\t\treturn cD;\n\t\t});\n\t\tvar rCs = [];\n\t\tvar _g = 0;\n\t\twhile(_g < cells.length) {\n\t\t\tvar cD1 = cells[_g];\n\t\t\t++_g;\n\t\t\tif(!cD1.show) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\trCs.push({ "$$typeof" : $$tre, type : "td", props : { className : cD1.className, \'data-name\' : cD1.name, \'data-grow\' : cD1.flexGrow != null ? cD1.flexGrow : null, children : cD1.dataDisplay}, key : "r" + cD1.pos.row + "c" + cD1.pos.column, ref : null});\n\t\t}\n\t\treturn rCs;\n\t}\n\t,renderRows: function(dRows) {\n\t\tif(dRows == null) {\n\t\t\tdRows = this.props.data;\n\t\t}\n\t\tvar dRs = [];\n\t\tvar row = 0;\n\t\tvar _g = 0;\n\t\twhile(_g < dRows.length) {\n\t\t\tvar dR = dRows[_g];\n\t\t\t++_g;\n\t\t\tvar tmp = react__$ReactNode_ReactNode_$Impl_$.fromString("tr");\n\t\t\tvar tmp1 = row == 0 ? this.rowRef : null;\n\t\t\tdRs.push(React.createElement(tmp,{ key : "r" + row++, ref : tmp1, onClick : $bind(this,this.select)},this.renderCells(dR,row - 1)));\n\t\t}\n\t\treturn dRs;\n\t}\n\t,select: function(mEv) {\n\t\thaxe_Log.trace(mEv.altKey,{ fileName : "view/table/Table.hx", lineNumber : 308, className : "view.table.Table", methodName : "select"});\n\t\thaxe_Log.trace(mEv.currentTarget,{ fileName : "view/table/Table.hx", lineNumber : 309, className : "view.table.Table", methodName : "select"});\n\t\tvar htRow = js_Boot.__cast(mEv.currentTarget , HTMLTableRowElement);\n\t\tvar rows = htRow.parentElement.children;\n\t\tif(mEv.altKey) {\n\t\t\tthis.selectAltGroup(this.props.dataState.altGroupPos,htRow);\n\t\t} else if(mEv.ctrlKey) {\n\t\t\tvar _g = 0;\n\t\t\twhile(_g < rows.length) {\n\t\t\t\tvar r = rows[_g];\n\t\t\t\t++_g;\n\t\t\t\tr.classList.toggle("is-selected");\n\t\t\t}\n\t\t} else {\n\t\t\thtRow.classList.toggle("is-selected");\n\t\t}\n\t\tvar selRows = [];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < rows.length) {\n\t\t\tvar r1 = rows[_g1];\n\t\t\t++_g1;\n\t\t\tif(r1.classList.contains("is-selected")) {\n\t\t\t\tselRows.push(r1);\n\t\t\t}\n\t\t}\n\t\tthis.setState({ selectedRows : selRows});\n\t\tthis.props.parentForm.setStateFromChild({ selectedRows : selRows});\n\t}\n\t,selectAltGroup: function(altGroupPos,cRow) {\n\t\tvar groupName = cRow.cells.item(altGroupPos).textContent;\n\t\tvar tEl = cRow.parentElement;\n\t\tvar _g = 0;\n\t\tvar _g1 = tEl.children.length;\n\t\twhile(_g < _g1) {\n\t\t\tvar i = _g++;\n\t\t\tvar row = tEl.children.item(i);\n\t\t\thaxe_Log.trace(row.cells.item(altGroupPos).nodeValue + "==" + groupName,{ fileName : "view/table/Table.hx", lineNumber : 340, className : "view.table.Table", methodName : "selectAltGroup"});\n\t\t\tif(row.cells.item(altGroupPos).textContent == groupName) {\n\t\t\t\trow.classList.toggle("is-selected");\n\t\t\t}\n\t\t}\n\t}\n\t,componentDidUpdate: function(prevProps,prevState) {\n\t\thaxe_Log.trace(this.headerUpdated,{ fileName : "view/table/Table.hx", lineNumber : 349, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\tif(this.tHeadRef != null) {\n\t\t\tif(this.headerUpdated) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.headerUpdated = true;\n\t\t\tvar tableHeight = react__$ReactRef_ReactRef_$Impl_$.get_current(this.tableRef).clientHeight;\n\t\t\thaxe_Log.trace("tableHeight:" + tableHeight,{ fileName : "view/table/Table.hx", lineNumber : 357, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\tvar scrollBarWidth = App.config.getScrollbarWidth();\n\t\t\tvar freeWidth = react__$ReactRef_ReactRef_$Impl_$.get_current(this.tableRef).parentElement.offsetWidth - react__$ReactRef_ReactRef_$Impl_$.get_current(this.tableRef).offsetWidth - scrollBarWidth;\n\t\t\thaxe_Log.trace("" + scrollBarWidth + " freeWidth:" + freeWidth + " " + react__$ReactRef_ReactRef_$Impl_$.get_current(this.tableRef).parentElement.offsetWidth + " " + react__$ReactRef_ReactRef_$Impl_$.get_current(this.tableRef).offsetWidth,{ fileName : "view/table/Table.hx", lineNumber : 361, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\thaxe_Log.trace(this.tHeadRef,{ fileName : "view/table/Table.hx", lineNumber : 362, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\thaxe_Log.trace(react__$ReactRef_ReactRef_$Impl_$.get_current(this.fixedHeader).children.length,{ fileName : "view/table/Table.hx", lineNumber : 363, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\thaxe_Log.trace(react__$ReactRef_ReactRef_$Impl_$.get_current(this.fixedHeader),{ fileName : "view/table/Table.hx", lineNumber : 364, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\treact__$ReactRef_ReactRef_$Impl_$.get_current(this.tHeadRef).style.visibility = "collapse";\n\t\t\tvar i = 0;\n\t\t\tvar grow = [];\n\t\t\tif(this.props.fullWidth) {\n\t\t\t\tvar _g = 0;\n\t\t\t\tvar _g1 = react__$ReactRef_ReactRef_$Impl_$.get_current(this.rowRef).children;\n\t\t\t\twhile(_g < _g1.length) {\n\t\t\t\t\tvar cell = _g1[_g];\n\t\t\t\t\t++_g;\n\t\t\t\t\tvar cGrow = cell.getAttribute("data-grow");\n\t\t\t\t\tif(cGrow != null) {\n\t\t\t\t\t\tgrow[i] = Std.parseInt(cGrow);\n\t\t\t\t\t\thaxe_Log.trace(grow[i],{ fileName : "view/table/Table.hx", lineNumber : 376, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\t\t\t}\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t\tvar growSum = 0;\n\t\t\t\tLambda.iter(grow,function(el) {\n\t\t\t\t\tgrowSum += el == null ? 0 : el;\n\t\t\t\t});\n\t\t\t\thaxe_Log.trace(Std.string(grow) + ":" + growSum,{ fileName : "view/table/Table.hx", lineNumber : 382, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\t\tif(growSum > 0) {\n\t\t\t\t\tvar growUnit = freeWidth / growSum;\n\t\t\t\t\thaxe_Log.trace(growSum,{ fileName : "view/table/Table.hx", lineNumber : 386, className : "view.table.Table", methodName : "componentDidUpdate"});\n\t\t\t\t\tvar _g2 = 0;\n\t\t\t\t\tvar _g3 = grow.length;\n\t\t\t\t\twhile(_g2 < _g3) {\n\t\t\t\t\t\tvar i1 = _g2++;\n\t\t\t\t\t\tif(grow[i1] != 0) {\n\t\t\t\t\t\t\treact__$ReactRef_ReactRef_$Impl_$.get_current(this.rowRef).children.item(i1).setAttribute("width",Std.string(grow[i1] * growUnit + react__$ReactRef_ReactRef_$Impl_$.get_current(this.rowRef).children.item(i1).offsetWidth) + "px");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = 0;\n\t\t\tvar _g4 = 0;\n\t\t\tvar _g11 = react__$ReactRef_ReactRef_$Impl_$.get_current(this.tHeadRef).children;\n\t\t\twhile(_g4 < _g11.length) {\n\t\t\t\tvar cell1 = _g11[_g4];\n\t\t\t\t++_g4;\n\t\t\t\tvar w = cell1.getBoundingClientRect().width;\n\t\t\t\tvar fixedHeaderCell = js_Boot.__cast(react__$ReactRef_ReactRef_$Impl_$.get_current(this.fixedHeader).childNodes[i] , HTMLElement);\n\t\t\t\tfixedHeaderCell.setAttribute("style","width:" + w + "px");\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\t,showDims: function(ref) {\n\t\tvar i = 0;\n\t\tvar s = 0;\n\t\tvar cells = ref.current != null ? ref.current.cells : ref.cells;\n\t\tvar _g = 0;\n\t\twhile(_g < cells.length) {\n\t\t\tvar cell = cells[_g];\n\t\t\t++_g;\n\t\t\thaxe_Log.trace(cell.getBoundingClientRect().toJSON(),{ fileName : "view/table/Table.hx", lineNumber : 420, className : "view.table.Table", methodName : "showDims"});\n\t\t\ts += cell.getBoundingClientRect().width;\n\t\t}\n\t\thaxe_Log.trace(" sum:" + s,{ fileName : "view/table/Table.hx", lineNumber : 423, className : "view.table.Table", methodName : "showDims"});\n\t}\n\t,nodeDims: function(n) {\n\t\tvar i = 0;\n\t\tvar s = 0;\n\t\tvar cells = n.childNodes;\n\t\tvar _g = 0;\n\t\twhile(_g < cells.length) {\n\t\t\tvar cell = cells[_g];\n\t\t\t++_g;\n\t\t\tvar dRect = (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().toJSON();\n\t\t\thaxe_Log.trace(dRect,{ fileName : "view/table/Table.hx", lineNumber : 434, className : "view.table.Table", methodName : "nodeDims"});\n\t\t\ts += (js_Boot.__cast(cell , HTMLElement)).getBoundingClientRect().width;\n\t\t}\n\t\thaxe_Log.trace(" sum:" + s,{ fileName : "view/table/Table.hx", lineNumber : 438, className : "view.table.Table", methodName : "nodeDims"});\n\t}\n\t,__class__: view_table_Table\n});\nfunction $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }\nvar $fid = 0;\nvar $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\nvar __map_reserved = {};\nhaxe_ds_ObjectMap.count = 0;\nDateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];\nDateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];\nDateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];\nDateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];\nhaxe_Serializer.USE_CACHE = false;\nhaxe_Serializer.USE_ENUM_INDEX = false;\nhaxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";\nhaxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();\nhaxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";\nhxbit_Serializer.UID = 0;\nhxbit_Serializer.SEQ = 0;\nhxbit_Serializer.SEQ_BITS = 8;\nhxbit_Serializer.SEQ_MASK = 16777215;\nhxbit_Serializer.CLASSES = [];\nhxbit_Schema.__clid = hxbit_Serializer.registerClass(hxbit_Schema);\nshared_DbData.__clid = hxbit_Serializer.registerClass(shared_DbData);\nview_DashBoard.user = { firstName : "dummy"};\nview_DashBoard.displayName = "DashBoard";\nview_DashBoard._connected = (redux_react_ReactRedux.connect(view_DashBoard.mapStateToProps,view_DashBoard.mapDispatchToProps))(react__$ReactNode_ReactNode_$Impl_$.fromComp(view_DashBoard));\nview_DashBoard.__jsxStatic = view_DashBoard._connected;\nview_shared_BaseForm.displayName = "BaseForm";\nview_dashboard_RolesForm.displayName = "RolesForm";\nview_dashboard_RolesForm._connected = (redux_react_ReactRedux.connect(view_dashboard_RolesForm.mapStateToProps))(react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_RolesForm));\nview_dashboard_RolesForm.__jsxStatic = view_dashboard_RolesForm._connected;\nview_dashboard_SetUpForm.displayName = "SetUpForm";\nview_dashboard_SetUpForm._connected = (redux_react_ReactRedux.connect(view_dashboard_SetUpForm.mapStateToProps))(react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_SetUpForm));\nview_dashboard_SetUpForm.__jsxStatic = view_dashboard_SetUpForm._connected;\nview_dashboard_SettingsForm.displayName = "SettingsForm";\nview_dashboard_SettingsForm._connected = (redux_react_ReactRedux.connect(view_dashboard_SettingsForm.mapStateToProps))(react__$ReactNode_ReactNode_$Impl_$.fromComp(view_dashboard_SettingsForm));\nview_dashboard_SettingsForm.__jsxStatic = view_dashboard_SettingsForm._connected;\nview_dashboard_model_DBFormsModel.fieldsListColumns = (function($this) {\n\tvar $r;\n\tvar _g = new haxe_ds_StringMap();\n\t{\n\t\tvar value = { label : "Tabelle", editable : false};\n\t\tif(__map_reserved["table_name"] != null) {\n\t\t\t_g.setReserved("table_name",value);\n\t\t} else {\n\t\t\t_g.h["table_name"] = value;\n\t\t}\n\t}\n\t{\n\t\tvar value1 = { label : "Feldname", editable : false};\n\t\tif(__map_reserved["field_name"] != null) {\n\t\t\t_g.setReserved("field_name",value1);\n\t\t} else {\n\t\t\t_g.h["field_name"] = value1;\n\t\t}\n\t}\n\t{\n\t\tvar value2 = { label : "Formularelement"};\n\t\tif(__map_reserved["element"] != null) {\n\t\t\t_g.setReserved("element",value2);\n\t\t} else {\n\t\t\t_g.h["element"] = value2;\n\t\t}\n\t}\n\t{\n\t\tvar value3 = { label : "Readonly", cellFormat : view_dashboard_model_DBFormsModel.formatBool};\n\t\tif(__map_reserved["readonly"] != null) {\n\t\t\t_g.setReserved("readonly",value3);\n\t\t} else {\n\t\t\t_g.h["readonly"] = value3;\n\t\t}\n\t}\n\t{\n\t\tvar value4 = { label : "Eigenschaften", flexGrow : 1};\n\t\tif(__map_reserved["any"] != null) {\n\t\t\t_g.setReserved("any",value4);\n\t\t} else {\n\t\t\t_g.h["any"] = value4;\n\t\t}\n\t}\n\t$r = _g;\n\treturn $r;\n}(this));\nview_dashboard_model_DBFormsModel.dataDisplay = (function($this) {\n\tvar $r;\n\tvar _g = new haxe_ds_StringMap();\n\t{\n\t\tvar value = { altGroupPos : 0, columns : view_dashboard_model_DBFormsModel.fieldsListColumns};\n\t\tif(__map_reserved["fieldsList"] != null) {\n\t\t\t_g.setReserved("fieldsList",value);\n\t\t} else {\n\t\t\t_g.h["fieldsList"] = value;\n\t\t}\n\t}\n\t$r = _g;\n\treturn $r;\n}(this));\nview_dashboard_model_RolesFormModel.userListColumns = (function($this) {\n\tvar $r;\n\tvar _g = new haxe_ds_StringMap();\n\t{\n\t\tvar value = { label : "Benutzer"};\n\t\tif(__map_reserved["user_name"] != null) {\n\t\t\t_g.setReserved("user_name",value);\n\t\t} else {\n\t\t\t_g.h["user_name"] = value;\n\t\t}\n\t}\n\t{\n\t\tvar value1 = { label : "Vorname", flexGrow : 0};\n\t\tif(__map_reserved["first_name"] != null) {\n\t\t\t_g.setReserved("first_name",value1);\n\t\t} else {\n\t\t\t_g.h["first_name"] = value1;\n\t\t}\n\t}\n\t{\n\t\tvar value2 = { label : "Name", flexGrow : 0};\n\t\tif(__map_reserved["last_name"] != null) {\n\t\t\t_g.setReserved("last_name",value2);\n\t\t} else {\n\t\t\t_g.h["last_name"] = value2;\n\t\t}\n\t}\n\t{\n\t\tvar value3 = { label : "UserGroup", flexGrow : 1};\n\t\tif(__map_reserved["name"] != null) {\n\t\t\t_g.setReserved("name",value3);\n\t\t} else {\n\t\t\t_g.h["name"] = value3;\n\t\t}\n\t}\n\t{\n\t\tvar value4 = { label : "Aktiv", className : "cRight", cellFormat : function(v) {\n\t\t\tif(v) {\n\t\t\t\treturn "J";\n\t\t\t} else {\n\t\t\t\treturn "N";\n\t\t\t}\n\t\t}};\n\t\tif(__map_reserved["active"] != null) {\n\t\t\t_g.setReserved("active",value4);\n\t\t} else {\n\t\t\t_g.h["active"] = value4;\n\t\t}\n\t}\n\t{\n\t\tvar value5 = { show : false};\n\t\tif(__map_reserved["user_id"] != null) {\n\t\t\t_g.setReserved("user_id",value5);\n\t\t} else {\n\t\t\t_g.h["user_id"] = value5;\n\t\t}\n\t}\n\t$r = _g;\n\treturn $r;\n}(this));\nview_dashboard_model_RolesFormModel.dataDisplay = (function($this) {\n\tvar $r;\n\tvar _g1 = new haxe_ds_StringMap();\n\t{\n\t\tvar value = { columns : view_dashboard_model_RolesFormModel.userListColumns};\n\t\tif(__map_reserved["userList"] != null) {\n\t\t\t_g1.setReserved("userList",value);\n\t\t} else {\n\t\t\t_g1.h["userList"] = value;\n\t\t}\n\t}\n\t{\n\t\tvar _g = new haxe_ds_StringMap();\n\t\tvar value1 = { label : "UserGroup", flexGrow : 0};\n\t\tif(__map_reserved["user_group"] != null) {\n\t\t\t_g.setReserved("user_group",value1);\n\t\t} else {\n\t\t\t_g.h["user_group"] = value1;\n\t\t}\n\t\tvar value2 = { label : "Beschreibung", flexGrow : 1};\n\t\tif(__map_reserved["group_name"] != null) {\n\t\t\t_g.setReserved("group_name",value2);\n\t\t} else {\n\t\t\t_g.h["group_name"] = value2;\n\t\t}\n\t\tvar value3 = { label : "Kampagnen", flexGrow : 1};\n\t\tif(__map_reserved["allowed_campaigns"] != null) {\n\t\t\t_g.setReserved("allowed_campaigns",value3);\n\t\t} else {\n\t\t\t_g.h["allowed_campaigns"] = value3;\n\t\t}\n\t\tvar value4 = { columns : _g};\n\t\tif(__map_reserved["userGroups"] != null) {\n\t\t\t_g1.setReserved("userGroups",value4);\n\t\t} else {\n\t\t\t_g1.h["userGroups"] = value4;\n\t\t}\n\t}\n\t$r = _g1;\n\treturn $r;\n}(this));\nview_shared_RouteBox.displayName = "RouteBox";\nview_shared_SMenu.displayName = "SMenu";\nview_shared_io_DataAccessForm.displayName = "DataAccessForm";\nview_shared_io_DB.displayName = "DB";\nview_shared_io_Loader.rqs = [];\nview_shared_io_User.displayName = "User";\nview_table_Table.displayName = "Table";\n$s.view_DashBoard = view_DashBoard; \n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/global.js")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/haxe-loader/index.js?build/view_DashBoard!./\n')}}]);
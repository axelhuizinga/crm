// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var App = function() {
	var root = this.createRoot();
	var rootComponent = ReactDOM.render({ "$$typeof" : $$tre, type : Root, props : { state : { route : "/qc"}}, key : null, ref : null},root);
};
App.__name__ = true;
App.main = function() {
	react_addon_ReactIntl.addLocaleData(react_addon_intl_ReactIntlLocaleData.de);
	App.store = ApplicationStore.create();
	Root.contextTypes = { store : PropTypes.object};
	console.log(App.store.getState());
	new App();
};
App.prototype = {
	createRoot: function() {
		var current = window.document.getElementById("root");
		if(current != null) {
			return current;
		}
		current = window.document.createElement("div");
		current.id = "root";
		window.document.body.appendChild(current);
		return current;
	}
};
var ApplicationStore = function() { };
ApplicationStore.__name__ = true;
ApplicationStore.create = function() {
	var historyWare = new model_HistoryWare();
	var rootReducer = redux_Redux.combineReducers({ historyWare : redux_StoreBuilder.mapReducer(action_HistoryAction,historyWare)});
	var middleware = redux_Redux.applyMiddleware(redux_StoreBuilder.mapMiddleware(action_HistoryAction,historyWare));
	return redux_StoreBuilder.createStore(rootReducer,null,middleware);
};
ApplicationStore.startup = function(store) {
};
var Dom = function() { };
Dom.__name__ = true;
Dom.div = function() {
	return window.document.createElement("div");
};
Dom.html = function(html) {
	Dom.TEMP.innerHTML = html;
	return Dom.TEMP.firstElementChild;
};
Dom.body = function() {
	return window.document.body;
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	iterator: function() {
		return new _$List_ListIterator(this.h);
	}
};
var _$List_ListNode = function() { };
_$List_ListNode.__name__ = true;
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var React_Component = require("react").Component;
var redux_react_IConnectedComponent = function() { };
redux_react_IConnectedComponent.__name__ = true;
var PropTypes = require("prop-types");
var Root = function(props,state,context) {
	React_Component.call(this,props,state);
	console.log(props);
	console.log(this.state);
	console.log(this.context);
	this.browserHistory = dom_History.createBrowserHistory();
	this.browserHistory.action = "POP";
	console.log(this.browserHistory);
};
Root.__name__ = true;
Root.__interfaces__ = [redux_react_IConnectedComponent];
Root.__super__ = React_Component;
Root.prototype = $extend(React_Component.prototype,{
	componentDidMount: function() {
		this.backListener = this.browserHistory.listen(function(location) {
			console.log(location);
			if(location.action == "POP") {
				return false;
			}
			return true;
		});
		console.log(this.backListener);
	}
	,componentWillUnmount: function() {
		React_Component.prototype.componentWillUnmount.call(this);
		this.backListener();
	}
	,setLocale: function(e) {
		console.log(e._targetInst._node);
		e.preventDefault();
		return "OK";
	}
	,changeLocale: function(e) {
		console.log(e);
	}
	,render: function() {
		var edump = function(el) {
			console.log(el);
			return "OK";
		};
		var eArray = function(el1) {
			console.log(el1.toString());
			return "OK";
		};
		var tmp = { store : App.store};
		var tmp1 = { history : this.browserHistory};
		var tmp2 = React.createElement(react_tabs_NavTab,{ to : "/dashboard"},"DashBoard");
		var tmp3 = React.createElement(react_tabs_NavTab,{ to : "/contacts", 'data-debug' : edump(this.context)},"Contacts");
		var tmp4 = React.createElement(react_tabs_NavTab,{ to : "/qc"},"QC");
		var tmp5 = React.createElement(react_addon_router_Route,{ path : "/dashboard", component : ui_DashBoard});
		var tmp6 = React.createElement(react_addon_router_Route,{ path : "/contacts", component : ui_Contacts, 'data-debug' : edump(this.context)});
		var tmp7 = React.createElement(react_addon_router_Route,{ path : "/qc", component : ui_QC});
		var tmp8 = React.createElement(react_addon_router_Switch,{ },"\t\t\t\t\t\t\t\t","\t\t\t\t\t\t\t\t",tmp5,tmp6,tmp7);
		var tmp9 = React.createElement(react_addon_router_Router,tmp1,React.createElement(react_tabs_RoutedTabs,{ },tmp2,tmp3,tmp4,tmp8));
		return React.createElement(react_addon_Provider,tmp,React.createElement(react_addon_intl_IntlProvider,{ locale : "de"},tmp9));
	}
	,renderChildren: function(p) {
		console.log(p);
		var tmp = React.createElement(react_addon_router_Route,{ path : "/qc", component : ui_QC});
		var tmp1 = React.createElement(react_addon_router_Route,{ path : "/qc/something", component : ui_QC});
		var tmp2 = React.createElement(react_addon_router_Route,{ path : "/qc/*", component : ui_QC});
		return React.createElement(react_addon_router_Switch,{ },"\t\t\t\t\t\t\t",tmp,tmp1,tmp2);
	}
	,dispatch: function(action) {
		return this.context.store.dispatch(action);
	}
});
var Type = function() { };
Type.__name__ = true;
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
var Webpack = function() { };
Webpack.__name__ = true;
var action_AppAction = { __ename__ : ["action","AppAction"], __constructs__ : ["Load","SetLocale","SetEntries"] };
action_AppAction.Load = ["Load",0];
action_AppAction.Load.__enum__ = action_AppAction;
action_AppAction.SetLocale = function(locale) { var $x = ["SetLocale",1,locale]; $x.__enum__ = action_AppAction; return $x; };
action_AppAction.SetEntries = function(entries) { var $x = ["SetEntries",2,entries]; $x.__enum__ = action_AppAction; return $x; };
var action_HistoryAction = { __ename__ : ["action","HistoryAction"], __constructs__ : ["Pop","Push","Replace","Go","Back","Forward"] };
action_HistoryAction.Pop = ["Pop",0];
action_HistoryAction.Pop.__enum__ = action_HistoryAction;
action_HistoryAction.Push = ["Push",1];
action_HistoryAction.Push.__enum__ = action_HistoryAction;
action_HistoryAction.Replace = ["Replace",2];
action_HistoryAction.Replace.__enum__ = action_HistoryAction;
action_HistoryAction.Go = ["Go",3];
action_HistoryAction.Go.__enum__ = action_HistoryAction;
action_HistoryAction.Back = ["Back",4];
action_HistoryAction.Back.__enum__ = action_HistoryAction;
action_HistoryAction.Forward = ["Forward",5];
action_HistoryAction.Forward.__enum__ = action_HistoryAction;
var Button = require("bulma-components").Button;
var dom_History = require("history");
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
haxe_Http.__name__ = true;
haxe_Http.prototype = {
	request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var redux_IMiddleware = function() { };
redux_IMiddleware.__name__ = true;
var redux_IReducer = function() { };
redux_IReducer.__name__ = true;
var model_DataList = function() {
	this.ID = 0;
	this.initState = { loading : false, cells : []};
};
model_DataList.__name__ = true;
model_DataList.__interfaces__ = [redux_IMiddleware,redux_IReducer];
model_DataList.prototype = {
	reduce: function(state,action) {
		switch(action[1]) {
		case 0:
			return react_ReactUtil.copy(state,{ loading : true});
		case 1:
			var locale = action[2];
			return state;
		case 2:
			var cells = action[2];
			var _g = [];
			var _g1 = 0;
			while(_g1 < cells.length) {
				var cell = cells[_g1];
				++_g1;
				cell.id = "" + ++this.ID;
				_g.push(cell);
			}
			return { loading : false, cells : _g};
		}
	}
	,middleware: function(action,next) {
		if(action[1] == 0) {
			return this.loadEntries();
		} else {
			return next();
		}
	}
	,loadEntries: function() {
		var _gthis = this;
		if(this.loadPending != null) {
			return this.loadPending;
		}
		return this.loadPending = new Promise(function(resolve,reject) {
			var http = new haxe_Http("data/data.json");
			http.onData = function(data) {
				_gthis.loadPending = null;
				var entries = JSON.parse(data).items;
				_gthis.store.dispatch(redux__$Redux_Action_$Impl_$.map(action_AppAction.SetEntries(entries)));
				resolve(true);
			};
			http.onError = function(error) {
				_gthis.loadPending = null;
				_gthis.store.dispatch(redux__$Redux_Action_$Impl_$.map(action_AppAction.SetEntries([])));
				resolve(true);
			};
			http.request();
		});
	}
};
var model_HistoryWare = function() {
	this.initState = { entries : [window.history.state], pos : 0};
};
model_HistoryWare.__name__ = true;
model_HistoryWare.__interfaces__ = [redux_IMiddleware,redux_IReducer];
model_HistoryWare.prototype = {
	reduce: function(state,action) {
		switch(action[1]) {
		case 0:
			return react_ReactUtil.copy(state,state);
		case 1:
			return react_ReactUtil.copy(state,{ entries : state.entries.concat([]), pos : state.entries.length});
		case 2:
			return react_ReactUtil.copy(state,state);
		case 3:
			return react_ReactUtil.copy(state,state);
		case 4:
			return react_ReactUtil.copy(state,state);
		case 5:
			return react_ReactUtil.copy(state,state);
		}
	}
	,middleware: function(action,next) {
		return next();
	}
};
var react_Partial = function() { };
react_Partial.__name__ = true;
var react_PartialMacro = function() { };
react_PartialMacro.__name__ = true;
var React = require("react");
var ReactDOM = require("react-dom");
var react_ReactMacro = function() { };
react_ReactMacro.__name__ = true;
var react_ReactUtil = function() { };
react_ReactUtil.__name__ = true;
react_ReactUtil.cx = function(arrayOrObject) {
	var array;
	if((arrayOrObject instanceof Array) && arrayOrObject.__enum__ == null) {
		array = arrayOrObject;
	} else {
		array = [arrayOrObject];
	}
	var classes = [];
	var _g = 0;
	while(_g < array.length) {
		var value = array[_g];
		++_g;
		if(value == null) {
			continue;
		}
		if(typeof(value) == "string") {
			classes.push(value);
		} else {
			var _g1 = 0;
			var _g2 = Reflect.fields(value);
			while(_g1 < _g2.length) {
				var field = _g2[_g1];
				++_g1;
				if(Reflect.field(value,field) == true) {
					classes.push(field);
				}
			}
		}
	}
	return classes.join(" ");
};
react_ReactUtil.assign = function(target,sources) {
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		if(source != null) {
			var _g1 = 0;
			var _g2 = Reflect.fields(source);
			while(_g1 < _g2.length) {
				var field = _g2[_g1];
				++_g1;
				target[field] = Reflect.field(source,field);
			}
		}
	}
	return target;
};
react_ReactUtil.copy = function(source1,source2) {
	var target = { };
	var _g = 0;
	var _g1 = Reflect.fields(source1);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		target[field] = Reflect.field(source1,field);
	}
	if(source2 != null) {
		var _g2 = 0;
		var _g11 = Reflect.fields(source2);
		while(_g2 < _g11.length) {
			var field1 = _g11[_g2];
			++_g2;
			target[field1] = Reflect.field(source2,field1);
		}
	}
	return target;
};
react_ReactUtil.copyWithout = function(source1,source2,fields) {
	var target = { };
	var _g = 0;
	var _g1 = Reflect.fields(source1);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(!Lambda.has(fields,field)) {
			target[field] = Reflect.field(source1,field);
		}
	}
	if(source2 != null) {
		var _g2 = 0;
		var _g11 = Reflect.fields(source2);
		while(_g2 < _g11.length) {
			var field1 = _g11[_g2];
			++_g2;
			if(!Lambda.has(fields,field1)) {
				target[field1] = Reflect.field(source2,field1);
			}
		}
	}
	return target;
};
react_ReactUtil.mapi = function(items,map) {
	if(items == null) {
		return null;
	}
	var newItems = [];
	var _g1 = 0;
	var _g = items.length;
	while(_g1 < _g) {
		var i = _g1++;
		newItems.push(map(i,items[i]));
	}
	return newItems;
};
react_ReactUtil.cloneChildren = function(children,props) {
	if(Reflect.isFunction(props)) {
		return React.Children.map(children,function(child) {
			return React.cloneElement(child,props(child));
		});
	} else {
		return React.Children.map(children,function(child1) {
			return React.cloneElement(child1,props);
		});
	}
};
react_ReactUtil.shouldComponentUpdate = function(component,nextProps,nextState) {
	if(!(!react_ReactUtil.shallowCompare(component.props,nextProps))) {
		return !react_ReactUtil.shallowCompare(component.state,nextState);
	} else {
		return true;
	}
};
react_ReactUtil.shallowCompare = function(a,b) {
	var aFields = Reflect.fields(a);
	var bFields = Reflect.fields(b);
	if(aFields.length != bFields.length) {
		return false;
	}
	var _g = 0;
	while(_g < aFields.length) {
		var field = aFields[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(b,field) || Reflect.field(b,field) != Reflect.field(a,field)) {
			return false;
		}
	}
	return true;
};
var react_addon_ReactIntl = require("react-intl");
var react_addon_Provider = require("react-redux").Provider;
var react_addon_intl_IntlProvider = require("react-intl").IntlProvider;
var react_addon_intl_ReactIntlLocaleData = function() { };
react_addon_intl_ReactIntlLocaleData.__name__ = true;
var react_addon_router_Route = require("react-router").Route;
var react_addon_router_Router = require("react-router-dom").Router;
var react_addon_router_Switch = require("react-router-dom").Switch;
var react_redux_form_ControlText = require("react-redux-form").Control.text;
var react_tabs_NavTab = require("react-router-tabs").NavTab;
var react_tabs_RoutedTabs = require("react-router-tabs").RoutedTabs;
var redux_Redux = require("redux");
var redux__$Redux_Action_$Impl_$ = {};
redux__$Redux_Action_$Impl_$.__name__ = true;
redux__$Redux_Action_$Impl_$._new = function(a) {
	var this1 = a;
	return this1;
};
redux__$Redux_Action_$Impl_$.map = function(ev) {
	var e = Type.getEnum(ev);
	var this1 = { type : Type.getEnumName(e), value : ev};
	return this1;
};
var redux_Store = function() { };
redux_Store.__name__ = true;
var redux_StoreBuilder = function() { };
redux_StoreBuilder.__name__ = true;
redux_StoreBuilder.mapReducer = function(of,service) {
	var type = Type.getEnumName(of);
	return function(state,action) {
		if(state == null) {
			state = service.initState;
		}
		if(action.type == type) {
			return service.reduce(state,action.value);
		} else {
			return state;
		}
	};
};
redux_StoreBuilder.mapMiddleware = function(of,service) {
	var type = Type.getEnumName(of);
	return function(store) {
		service.store = store;
		return function(next) {
			return function(action) {
				if(action.type == type) {
					var skip = function() {
						return next(action);
					};
					return service.middleware(action.value,skip);
				}
				return next(action);
			};
		};
	};
};
redux_StoreBuilder.createStore = function(rootReducer,initState,enhancer) {
	if(initState == null) {
		initState = { };
	}
	return redux_Redux.createStore(rootReducer,initState,enhancer);
};
var ui_Contacts = function(props,context) {
	React_Component.call(this,props,context);
};
ui_Contacts.__name__ = true;
ui_Contacts.__super__ = React_Component;
ui_Contacts.prototype = $extend(React_Component.prototype,{
	render: function() {
		return { "$$typeof" : $$tre, type : "div", props : { className : "dashboard"}, key : null, ref : null};
	}
});
var ui_DashBoard = function(props,context) {
	React_Component.call(this,props,context);
};
ui_DashBoard.__name__ = true;
ui_DashBoard.__super__ = React_Component;
ui_DashBoard.prototype = $extend(React_Component.prototype,{
	render: function() {
		return { "$$typeof" : $$tre, type : "div", props : { className : "dashboard", children : [{ "$$typeof" : $$tre, type : "form", props : { id : "user-login", children : [{ "$$typeof" : $$tre, type : "label", props : { htmlFor : "user.firstName", children : "Vorname:"}, key : null, ref : null},React.createElement(react_redux_form_ControlText,{ id : "user.firstName", model : "user.firstName"}),{ "$$typeof" : $$tre, type : "button", props : { type : "submit", className : "mb-4 btn btn-primary", children : "Submit"}, key : null, ref : null},"\t\t\t\t\t"]}, key : null, ref : null},React.createElement(Button,{ icon : "download", iconRight : "true"},"Download")]}, key : null, ref : null};
	}
});
var ui_QC = function(props,context) {
	React_Component.call(this,props,context);
};
ui_QC.__name__ = true;
ui_QC.__super__ = React_Component;
ui_QC.prototype = $extend(React_Component.prototype,{
	render: function() {
		return { "$$typeof" : $$tre, type : "div", props : { className : "dashboard", children : { "$$typeof" : $$tre, type : "form", props : { id : "user-login"}, key : null, ref : null}}, key : null, ref : null};
	}
});
var ui_Statistics = function(props,context) {
	React_Component.call(this,props,context);
};
ui_Statistics.__name__ = true;
ui_Statistics.__super__ = React_Component;
ui_Statistics.prototype = $extend(React_Component.prototype,{
	render: function() {
		return { "$$typeof" : $$tre, type : "div", props : { className : "", children : { "$$typeof" : $$tre, type : "h1", props : { children : "Statistics"}, key : null, ref : null}}, key : null, ref : null};
	}
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
String.__name__ = true;
Array.__name__ = true;
App.STYLES = require("./src/App.css");
App.TABSTYLES = require("./node_modules/react-router-tabs/styles/react-router-tabs.css");
Dom.TEMP = window.document.createElement("div");
Root.contextTypes = { store : PropTypes.object.isRequired};
Root.displayName = "Root";
react_addon_intl_ReactIntlLocaleData.bg = require("react-intl/locale-data/bg");
react_addon_intl_ReactIntlLocaleData.de = require("react-intl/locale-data/de");
react_addon_intl_ReactIntlLocaleData.el = require("react-intl/locale-data/el");
react_addon_intl_ReactIntlLocaleData.en = require("react-intl/locale-data/en");
react_addon_intl_ReactIntlLocaleData.es = require("react-intl/locale-data/es");
react_addon_intl_ReactIntlLocaleData.fr = require("react-intl/locale-data/fr");
react_addon_intl_ReactIntlLocaleData.hu = require("react-intl/locale-data/hu");
react_addon_intl_ReactIntlLocaleData.it = require("react-intl/locale-data/it");
react_addon_intl_ReactIntlLocaleData.ko = require("react-intl/locale-data/ko");
react_addon_intl_ReactIntlLocaleData.nl = require("react-intl/locale-data/nl");
react_addon_intl_ReactIntlLocaleData.pl = require("react-intl/locale-data/pl");
react_addon_intl_ReactIntlLocaleData.pt = require("react-intl/locale-data/pt");
react_addon_intl_ReactIntlLocaleData.ro = require("react-intl/locale-data/ro");
react_addon_intl_ReactIntlLocaleData.ru = require("react-intl/locale-data/ru");
react_addon_intl_ReactIntlLocaleData.tr = require("react-intl/locale-data/tr");
react_addon_intl_ReactIntlLocaleData.zh = require("react-intl/locale-data/zh");
ui_Contacts.CONFIG = require("./src/config.json");
ui_Contacts.displayName = "Contacts";
ui_DashBoard.CONFIG = require("./src/config.json");
ui_DashBoard.user = { firstName : "dummy"};
ui_DashBoard.displayName = "DashBoard";
ui_QC.CONFIG = require("./src/config.json");
ui_QC.displayName = "QC";
ui_Statistics.CONFIG = require("./src/config.json");
ui_Statistics.displayName = "Statistics";
App.main();
})();
